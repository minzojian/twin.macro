{"version":3,"file":"macro.js","sources":["node_modules/escalade/sync/index.mjs","node_modules/resolve-from/index.js","node_modules/callsites/index.js","node_modules/parent-module/index.js","node_modules/import-fresh/index.js","src/core/lib/twinConfig.ts","src/core/lib/util/toArray.ts","src/core/lib/defaultTailwindConfig.ts","src/core/lib/util/twImports.ts","src/core/lib/util/isObject.ts","src/core/lib/logging.ts","src/core/lib/configHelpers.ts","src/core/lib/getStitchesPath.ts","src/core/lib/userPresets.ts","node_modules/dlv/dist/dlv.es.js","src/core/lib/createTheme.ts","src/core/lib/createAssert.ts","src/core/createCoreContext.ts","src/core/lib/util/camelize.ts","src/core/lib/util/replaceThemeValue.ts","src/core/lib/util/sassifySelector.ts","src/core/constants.ts","src/core/extractRuleStyles.ts","src/core/getGlobalStyles.ts","src/core/lib/expandVariantGroups.ts","src/core/lib/util/escapeRegex.ts","src/core/lib/util/isShortCss.ts","src/core/lib/util/splitOnFirst.ts","src/core/lib/convertClassName.ts","src/core/getStyles.ts","src/macro/lib/astHelpers.ts","src/macro/lib/validateImports.ts","src/macro/lib/util/isEmpty.ts","src/macro/css.ts","src/macro/styled.ts","src/macro/theme.ts","src/macro/screen.ts","src/macro/globalStyles.ts","node_modules/string-similarity/src/index.js","src/suggestions/lib/validateVariants.ts","src/suggestions/lib/validators.ts","src/suggestions/lib/getClassSuggestions.ts","src/suggestions/lib/colors.ts","src/suggestions/lib/makeColor.ts","src/suggestions/lib/extractors.ts","src/suggestions/lib/getPackageVersions.ts","src/suggestions/index.ts","src/macro/dataProp.ts","src/macro/tw.ts","src/macro/shortCss.ts","src/macro/className.ts","src/macro/twin.ts","src/macro.ts"],"sourcesContent":["import { dirname, resolve } from 'path';\nimport { readdirSync, statSync } from 'fs';\n\nexport default function (start, callback) {\n\tlet dir = resolve('.', start);\n\tlet tmp, stats = statSync(dir);\n\n\tif (!stats.isDirectory()) {\n\t\tdir = dirname(dir);\n\t}\n\n\twhile (true) {\n\t\ttmp = callback(dir, readdirSync(dir));\n\t\tif (tmp) return resolve(dir, tmp);\n\t\tdir = dirname(tmp = dir);\n\t\tif (tmp === dir) break;\n\t}\n}\n","'use strict';\nconst path = require('path');\nconst Module = require('module');\nconst fs = require('fs');\n\nconst resolveFrom = (fromDir, moduleId, silent) => {\n\tif (typeof fromDir !== 'string') {\n\t\tthrow new TypeError(`Expected \\`fromDir\\` to be of type \\`string\\`, got \\`${typeof fromDir}\\``);\n\t}\n\n\tif (typeof moduleId !== 'string') {\n\t\tthrow new TypeError(`Expected \\`moduleId\\` to be of type \\`string\\`, got \\`${typeof moduleId}\\``);\n\t}\n\n\ttry {\n\t\tfromDir = fs.realpathSync(fromDir);\n\t} catch (err) {\n\t\tif (err.code === 'ENOENT') {\n\t\t\tfromDir = path.resolve(fromDir);\n\t\t} else if (silent) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tconst fromFile = path.join(fromDir, 'noop.js');\n\n\tconst resolveFileName = () => Module._resolveFilename(moduleId, {\n\t\tid: fromFile,\n\t\tfilename: fromFile,\n\t\tpaths: Module._nodeModulePaths(fromDir)\n\t});\n\n\tif (silent) {\n\t\ttry {\n\t\t\treturn resolveFileName();\n\t\t} catch (err) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn resolveFileName();\n};\n\nmodule.exports = (fromDir, moduleId) => resolveFrom(fromDir, moduleId);\nmodule.exports.silent = (fromDir, moduleId) => resolveFrom(fromDir, moduleId, true);\n","'use strict';\n\nconst callsites = () => {\n\tconst _prepareStackTrace = Error.prepareStackTrace;\n\tError.prepareStackTrace = (_, stack) => stack;\n\tconst stack = new Error().stack.slice(1);\n\tError.prepareStackTrace = _prepareStackTrace;\n\treturn stack;\n};\n\nmodule.exports = callsites;\n// TODO: Remove this for the next major release\nmodule.exports.default = callsites;\n","'use strict';\nconst callsites = require('callsites');\n\nmodule.exports = filepath => {\n\tconst stacks = callsites();\n\n\tif (!filepath) {\n\t\treturn stacks[2].getFileName();\n\t}\n\n\tlet seenVal = false;\n\n\t// Skip the first stack as it's this function\n\tstacks.shift();\n\n\tfor (const stack of stacks) {\n\t\tconst parentFilepath = stack.getFileName();\n\n\t\tif (typeof parentFilepath !== 'string') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (parentFilepath === filepath) {\n\t\t\tseenVal = true;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Skip native modules\n\t\tif (parentFilepath === 'module.js') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (seenVal && parentFilepath !== filepath) {\n\t\t\treturn parentFilepath;\n\t\t}\n\t}\n};\n","'use strict';\nconst path = require('path');\nconst resolveFrom = require('resolve-from');\nconst parentModule = require('parent-module');\n\nmodule.exports = moduleId => {\n\tif (typeof moduleId !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tconst parentPath = parentModule(__filename);\n\n\tconst cwd = parentPath ? path.dirname(parentPath) : __dirname;\n\tconst filePath = resolveFrom(cwd, moduleId);\n\n\tconst oldModule = require.cache[filePath];\n\t// Delete itself from module parent\n\tif (oldModule && oldModule.parent) {\n\t\tlet i = oldModule.parent.children.length;\n\n\t\twhile (i--) {\n\t\t\tif (oldModule.parent.children[i].id === filePath) {\n\t\t\t\toldModule.parent.children.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tdelete require.cache[filePath]; // Delete module from cache\n\n\tconst parent = require.cache[parentPath]; // If `filePath` and `parentPath` are the same, cache will already be deleted so we won't get a memory leak in next step\n\n\treturn parent === undefined ? require(filePath) : parent.require(filePath); // In case cache doesn't have parent, fall back to normal require\n};\n","import type { GetPackageUsed, TwinConfigAll } from 'core/types'\n\nconst TWIN_CONFIG_DEFAULTS = {\n  allowStyleProp: false,\n  autoCssProp: false,\n  config: undefined,\n  convertHtmlElementToStyled: false,\n  convertStyledDot: false,\n  css: { import: '', from: '' },\n  dataCsProp: false,\n  dataTwProp: false,\n  debug: false,\n  disableCsProp: true,\n  disableShortCss: true,\n  global: { import: '', from: '' },\n  hasLogColors: true,\n  includeClassNames: false,\n  moveTwPropToStyled: false,\n  moveKeyframesToGlobalStyles: false,\n  preset: undefined,\n  sassyPseudo: false,\n  stitchesConfig: undefined,\n  styled: { import: '', from: '' },\n}\n\n// Defaults for different css-in-js libraries\nconst configDefaultsGoober = { sassyPseudo: true } // Sets selectors like hover to &:hover\nconst configDefaultsStitches = {\n  sassyPseudo: true, // Sets selectors like hover to &:hover\n  convertStyledDot: true, // Convert styled.[element] to a default syntax\n  moveTwPropToStyled: true, // Move the tw prop to a styled definition\n  convertHtmlElementToStyled: true, // For packages like stitches, add a styled definition on css prop elements\n  stitchesConfig: undefined, // Set the path to the stitches config\n  moveKeyframesToGlobalStyles: true, // Stitches doesn't support inline @keyframes\n}\n\nfunction configDefaultsTwin({\n  isGoober,\n  isStitches,\n  isDev,\n}: GetPackageUsed & { isDev: boolean }): TwinConfigAll {\n  return {\n    ...TWIN_CONFIG_DEFAULTS,\n    ...(isGoober && configDefaultsGoober),\n    ...(isStitches && configDefaultsStitches),\n    dataTwProp: isDev,\n    dataCsProp: isDev,\n  }\n}\n\nfunction isBoolean(value: unknown): boolean {\n  return typeof value === 'boolean'\n}\n\nconst allowedPresets = ['styled-components', 'emotion', 'goober', 'stitches']\n\ntype ConfigTwinValidators = Record<\n  keyof typeof TWIN_CONFIG_DEFAULTS & 'disableColorVariables',\n  [(value: unknown) => boolean, string]\n>\n\nconst configTwinValidators: ConfigTwinValidators = {\n  preset: [\n    (value: unknown): boolean =>\n      value === undefined ||\n      (typeof value === 'string' && allowedPresets.includes(value)),\n    `The config “preset” can only be:\\n${allowedPresets\n      .map(p => `'${p}'`)\n      .join(', ')}`,\n  ],\n  allowStyleProp: [\n    isBoolean,\n    'The config “allowStyleProp” can only be a boolean',\n  ],\n  autoCssProp: [\n    (value: unknown): boolean => !value,\n    'The “autoCssProp” feature has been removed from twin.macro@2.8.2+\\nThis means the css prop must be added by styled-components instead.\\nSetup info at https://twinredirect.page.link/auto-css-prop\\n\\nRemove the “autoCssProp” item from your config to avoid this message.',\n  ],\n  disableColorVariables: [\n    (value: unknown): boolean => !value,\n    'The disableColorVariables feature has been removed from twin.macro@3+\\n\\nRemove the disableColorVariables item from your config to avoid this message.',\n  ],\n  sassyPseudo: [isBoolean, 'The config “sassyPseudo” can only be a boolean'],\n  dataTwProp: [\n    (value: unknown): boolean => isBoolean(value) || value === 'all',\n    'The config “dataTwProp” can only be true, false or \"all\"',\n  ],\n  dataCsProp: [\n    (value: unknown): boolean => isBoolean(value) || value === 'all',\n    'The config “dataCsProp” can only be true, false or \"all\"',\n  ],\n  includeClassNames: [\n    isBoolean,\n    'The config “includeClassNames” can only be a boolean',\n  ],\n  disableCsProp: [\n    isBoolean,\n    'The config “disableCsProp” can only be a boolean',\n  ],\n  convertStyledDot: [\n    isBoolean,\n    'The config “convertStyledDot” can only be a boolean',\n  ],\n  moveTwPropToStyled: [\n    isBoolean,\n    'The config “moveTwPropToStyled” can only be a boolean',\n  ],\n  convertHtmlElementToStyled: [\n    isBoolean,\n    'The config “convertHtmlElementToStyled” can only be a boolean',\n  ],\n}\n\nexport { configDefaultsTwin, configTwinValidators, TWIN_CONFIG_DEFAULTS }\n","export default function toArray<T>(array: T): T | [T] {\n  if (Array.isArray(array)) return array\n  return [array]\n}\n","import toArray from './util/toArray'\nimport type { PluginAPI } from 'tailwindcss/types/config'\n\nconst AMPERSAND_AFTER = /&(.+)/g\nconst AMPERSAND = /&/g\n\nfunction stripAmpersands(string: string): string {\n  return typeof string === 'string'\n    ? string.replace(AMPERSAND, '').trim()\n    : string\n}\n\nconst EXTRA_VARIANTS = [\n  ['all', '& *'],\n  ['all-child', '& > *'],\n  ['sibling', '& ~ *'],\n  ['hocus', ['&:hover', '&:focus']],\n  'link',\n  'read-write',\n  ['svg', '& svg'],\n  ['even-of-type', '&:nth-of-type(even)'],\n  ['odd-of-type', '&:nth-of-type(odd)'],\n]\n\nconst EXTRA_NOT_VARIANTS = [\n  // Positional\n  ['first', '&:first-child'],\n  ['last', '&:last-child'],\n  ['only', '&:only-child'],\n  ['odd', '&:nth-child(odd)'],\n  ['even', '&:nth-child(even)'],\n  'first-of-type',\n  'last-of-type',\n  'only-of-type',\n\n  // State\n  'target',\n  ['open', '&[open]'],\n\n  // Forms\n  'default',\n  'checked',\n  'indeterminate',\n  'placeholder-shown',\n  'autofill',\n  'optional',\n  'required',\n  'valid',\n  'invalid',\n  'in-range',\n  'out-of-range',\n  'read-only',\n\n  // Content\n  'empty',\n\n  // Interactive\n  'focus-within',\n  'hover',\n  'focus',\n  'focus-visible',\n  'active',\n  'enabled',\n  'disabled',\n]\n\nfunction defaultVariants({ config, addVariant }: PluginAPI): void {\n  const extraVariants = EXTRA_VARIANTS.flatMap(v => {\n    let [name, selector] = toArray(v)\n    selector = selector || `&:${String(name)}`\n    const variant = [name, selector]\n\n    // Create a :not() version of the selectors above\n    const notVariant = [\n      `not-${String(name)}`,\n      (toArray(selector) as string[]).map(\n        (s: string) => `&:not(${stripAmpersands(s)})`\n      ),\n    ]\n\n    return [variant, notVariant]\n  })\n\n  // Create :not() versions of these selectors\n  const notPseudoVariants = EXTRA_NOT_VARIANTS.map(v => {\n    const [name, selector] = toArray(v)\n    const notConfig = [\n      `not-${name as string}`,\n      (toArray(selector || `&:${name as string}`) as string[]).map(\n        s => `&:not(${stripAmpersands(s)})`\n      ),\n    ]\n\n    return notConfig\n  })\n\n  const variants = [...extraVariants, ...notPseudoVariants]\n\n  for (const [name, selector] of variants) {\n    addVariant(name as string, toArray(selector) as string[])\n  }\n\n  for (const [name, selector] of variants) {\n    const groupSelector = (toArray(selector) as string[]).map(s =>\n      s.replace(AMPERSAND_AFTER, ':merge(.group)$1 &')\n    )\n    addVariant(`group-${name as string}`, groupSelector)\n  }\n\n  for (const [name, selector] of variants) {\n    const peerSelector = (toArray(selector) as string[]).map(s =>\n      s.replace(AMPERSAND_AFTER, ':merge(.peer)$1 ~ &')\n    )\n    addVariant(`peer-${name as string}`, peerSelector)\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/@media/any-pointer\n  addVariant('any-pointer-none', '@media (any-pointer: none)')\n  addVariant('any-pointer-fine', '@media (any-pointer: fine)')\n  addVariant('any-pointer-coarse', '@media (any-pointer: coarse)')\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/@media/pointer\n  addVariant('pointer-none', '@media (pointer: none)')\n  addVariant('pointer-fine', '@media (pointer: fine)')\n  addVariant('pointer-coarse', '@media (pointer: coarse)')\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/@media/any-hover\n  addVariant('any-hover-none', '@media (any-hover: none)')\n  addVariant('any-hover', '@media (any-hover: hover)')\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/@media/hover\n  addVariant('can-hover', '@media (hover: hover)')\n  addVariant('cant-hover', '@media (hover: none)')\n\n  addVariant('screen', '@media screen')\n\n  // Light mode\n\n  // eslint-disable-next-line unicorn/prefer-spread\n  let [mode, className = '.light'] = ([] as string[]).concat(\n    config('lightMode', 'media')\n  )\n\n  // @ts-expect-error Source types don't include boolean\n  if (mode === false) mode = 'media'\n\n  if (mode === 'class') {\n    addVariant('light', `${className} &`)\n  } else if (mode === 'media') {\n    addVariant('light', '@media (prefers-color-scheme: light)')\n  }\n\n  // eslint-disable-next-line unicorn/prefer-spread\n  ;[mode, className = '.light'] = ([] as string[]).concat(\n    config('lightMode', 'media')\n  )\n\n  if (mode === 'class') {\n    addVariant('light', `${className} &`)\n  } else if (mode === 'media') {\n    addVariant('light', '@media (prefers-color-scheme: light)')\n  }\n}\n\nconst defaultTailwindConfig = {\n  presets: [\n    {\n      content: [''], // Silence empty content warning\n      theme: {\n        extend: {\n          content: { DEFAULT: '' }, // Add a `content` class\n          zIndex: { 1: '1' }, // Add a handy small zIndex (`z-1` / `-z-1`)\n        },\n      },\n      plugins: [defaultVariants], // Add extra variants\n    },\n  ],\n}\n\nexport default defaultTailwindConfig\n","import type { Config } from 'tailwindcss'\nimport type { TailwindConfig, TailwindContext, TailwindMatch } from 'core/types'\n\n// @ts-expect-error Types added below\nimport { toPath as toPathRaw } from 'tailwindcss/lib/util/toPath'\n// @ts-expect-error Types added below\nimport { resolveMatches as resolveMatchesRaw } from 'tailwindcss/lib/lib/generateRules'\n// @ts-expect-error Types added below\nimport { createContext as createContextRaw } from 'tailwindcss/lib/lib/setupContextUtils'\n// @ts-expect-error Types added below\nimport { default as defaultTailwindConfigRaw } from 'tailwindcss/stubs/defaultConfig.stub'\n// @ts-expect-error Types added below\nimport { default as transformThemeValueRaw } from 'tailwindcss/lib/util/transformThemeValue'\n// @ts-expect-error Types added below\nimport { default as resolveTailwindConfigRaw } from 'tailwindcss/lib/util/resolveConfig'\n// @ts-expect-error Types added below\nimport { default as getAllConfigsRaw } from 'tailwindcss/lib/util/getAllConfigs'\n// @ts-expect-error Types added below\nimport { splitAtTopLevelOnly as splitAtTopLevelOnlyRaw } from 'tailwindcss/lib/util/splitAtTopLevelOnly'\n// @ts-expect-error Types added below\nimport unescapeRaw from 'postcss-selector-parser/dist/util/unesc'\n\nconst toPath = toPathRaw as (path: string[] | string) => string[]\nconst createContext = createContextRaw as (config: Config) => TailwindContext\nconst defaultTailwindConfig = defaultTailwindConfigRaw as Config\nconst resolveMatches = resolveMatchesRaw as (\n  candidate: string,\n  context: TailwindContext\n) => TailwindMatch[]\nconst transformThemeValue = transformThemeValueRaw as (\n  themeValue: string\n) => (\n  value: unknown,\n  options: Record<string, unknown>\n) => Record<string, unknown>\nconst resolveTailwindConfig = resolveTailwindConfigRaw as (\n  config: unknown[]\n) => TailwindConfig\nconst getAllConfigs = getAllConfigsRaw as (\n  config: Record<string, unknown[]>\n) => TailwindConfig[]\nconst splitAtTopLevelOnly = splitAtTopLevelOnlyRaw as (\n  input: string,\n  separator: string\n) => string[]\nconst unescape = unescapeRaw as (string: string) => string\n\nexport {\n  toPath,\n  createContext,\n  defaultTailwindConfig,\n  resolveMatches,\n  transformThemeValue,\n  resolveTailwindConfig,\n  getAllConfigs,\n  splitAtTopLevelOnly,\n  unescape,\n}\n","export default function isObject(value: unknown): boolean {\n  // eslint-disable-next-line eqeqeq, no-eq-null\n  return value != null && typeof value === 'object' && !Array.isArray(value)\n}\n","import chalk from 'chalk'\nimport type {\n  MakeColor,\n  ColorType,\n  ColorValue,\n  TwinConfigAll,\n} from 'core/types'\n\nconst colors = {\n  error: chalk.hex('#ff8383'),\n  errorLight: chalk.hex('#ffd3d3'),\n  warn: chalk.yellowBright,\n  success: chalk.greenBright,\n  highlight: chalk.yellowBright,\n  subdued: chalk.hex('#999'),\n}\n\nfunction makeColor(hasColor: boolean): MakeColor {\n  return (message: string, type: keyof typeof colors = 'error') => {\n    if (!hasColor) return message\n    return colors[type](message)\n  }\n}\n\nfunction spaced(string: string): string {\n  return `\\n\\n${string}\\n`\n}\n\nfunction warning(string: string): string {\n  return colors.error(`✕ ${string}`)\n}\n\nfunction logGeneralError(error: string | [ColorValue, string]): string {\n  return Array.isArray(error)\n    ? spaced(\n        `${warning(\n          typeof error[0] === 'function' ? error[0](colors) : error[0]\n        )}\\n\\n${error[1]}`\n      )\n    : spaced(warning(error))\n}\n\nfunction createDebug(isDev: boolean, twinConfig: TwinConfigAll) {\n  return (\n    reference: string,\n    data: unknown,\n    type: ColorType = 'subdued'\n  ): void => {\n    if (!isDev) return\n    if (!twinConfig.debug) return\n\n    const log = `${String(colors[type]('-'))} ${reference} ${String(\n      colors[type](JSON.stringify(data))\n    )}`\n\n    // eslint-disable-next-line no-console\n    console.log(log)\n  }\n}\n\nexport { makeColor, spaced, warning, colors, logGeneralError, createDebug }\n","import { resolve, dirname } from 'path'\nimport { existsSync } from 'fs'\nimport escalade from 'escalade/sync'\nimport requireFresh from 'import-fresh'\nimport { configTwinValidators, configDefaultsTwin } from './twinConfig'\nimport defaultTwinConfig from './defaultTailwindConfig'\nimport { resolveTailwindConfig, getAllConfigs } from './util/twImports'\nimport isObject from './util/isObject'\nimport { logGeneralError } from './logging'\nimport type {\n  TwinConfig,\n  TwinConfigAll,\n  GetConfigTwinValidatedParameters,\n  TailwindConfig,\n  Assert,\n  AssertContext,\n} from 'core/types'\n\ntype Validator = [(value: unknown) => boolean, string]\n\ntype GetTailwindConfig = {\n  sourceRoot?: string\n  filename: string\n  config?: TwinConfig\n  assert: Assert\n}\n\nfunction getTailwindConfig({\n  sourceRoot,\n  filename,\n  config,\n  assert,\n}: GetTailwindConfig): TailwindConfig {\n  sourceRoot = sourceRoot ?? '.'\n\n  const baseDirectory = filename ? dirname(filename) : process.cwd()\n\n  const userTailwindConfig = config?.config\n\n  if (isObject(userTailwindConfig))\n    return resolveTailwindConfig([\n      // User config\n      ...getAllConfigs(userTailwindConfig as Record<string, unknown[]>),\n      // Default config\n      ...getAllConfigs(defaultTwinConfig),\n    ])\n\n  const configPath = userTailwindConfig\n    ? resolve(sourceRoot, userTailwindConfig as string)\n    : escalade(baseDirectory, (_, names) => {\n        if (names.includes('tailwind.config.js')) {\n          return 'tailwind.config.js'\n        }\n\n        if (names.includes('tailwind.config.cjs')) {\n          return 'tailwind.config.cjs'\n        }\n      })\n\n  const configExists = Boolean(configPath && existsSync(configPath))\n\n  if (userTailwindConfig)\n    assert(configExists, ({ color }: AssertContext) =>\n      [\n        `${String(\n          color(\n            `✕ The tailwind config ${color(\n              String(userTailwindConfig),\n              'errorLight'\n            )} wasn’t found`\n          )\n        )}`,\n        `Update the \\`config\\` option in your twin config`,\n      ].join('\\n\\n')\n    )\n\n  const configs = [\n    // User config\n    ...(configExists ? getAllConfigs(requireFresh(configPath as string)) : []),\n    // Default config\n    ...getAllConfigs(defaultTwinConfig),\n  ]\n\n  const tailwindConfig = resolveTailwindConfig(configs)\n\n  return tailwindConfig\n}\n\nfunction runConfigValidator([item, value]: [\n  keyof typeof configTwinValidators,\n  string | boolean\n]): boolean {\n  const validatorConfig: Validator = configTwinValidators[item]\n  if (!validatorConfig) return true\n\n  const [validator, errorMessage] = validatorConfig\n\n  if (typeof validator !== 'function') return false\n\n  if (!validator(value)) {\n    throw new Error(logGeneralError(String(errorMessage)))\n  }\n\n  return true\n}\n\nfunction getConfigTwin(\n  config: TwinConfig | undefined,\n  params: GetConfigTwinValidatedParameters\n): TwinConfigAll {\n  const output: TwinConfigAll = {\n    ...configDefaultsTwin(params),\n    ...config,\n  }\n  return output\n}\n\nfunction getConfigTwinValidated(\n  config: TwinConfig | undefined,\n  params: GetConfigTwinValidatedParameters\n): TwinConfigAll {\n  const twinConfig = getConfigTwin(config, params)\n  // eslint-disable-next-line unicorn/no-array-reduce\n  return Object.entries(twinConfig).reduce((result, item) => {\n    const validatedItem = item as [\n      keyof typeof configTwinValidators,\n      string | boolean\n    ]\n    return {\n      ...result,\n      ...(runConfigValidator(validatedItem) && {\n        [validatedItem[0]]: validatedItem[1],\n      }),\n    }\n  }, {}) as TwinConfigAll\n}\n\nexport { getTailwindConfig, getConfigTwinValidated }\n","import { resolve, relative, parse } from 'path'\nimport { existsSync } from 'fs'\nimport { logGeneralError } from './logging'\nimport toArray from './util/toArray'\nimport type { TwinConfig } from 'core/types'\n\nfunction getFirstValue<ListItem>(\n  list: ListItem[],\n  getValue: (\n    params: ListItem,\n    options: { index: number; isLast: boolean }\n  ) => unknown\n): [unknown, ListItem | undefined] {\n  let firstValue\n  const listLength = list.length - 1\n  const listItem = list.find((listItem, index) => {\n    const isLast = index === listLength\n    firstValue = getValue(listItem, { index, isLast })\n    return Boolean(firstValue)\n  })\n\n  return [firstValue, listItem]\n}\n\nfunction checkExists(\n  fileName: string | string[],\n  sourceRoot: string\n): string | undefined {\n  const [, value] = getFirstValue(\n    toArray(fileName) as string[],\n    existingFileName => existsSync(resolve(sourceRoot, `./${existingFileName}`))\n  )\n  return value\n}\n\nfunction getRelativePath(comparePath: string, filename: string): string {\n  const pathName = parse(filename).dir\n  return relative(pathName, comparePath)\n}\n\nfunction getStitchesPath({\n  sourceRoot,\n  filename,\n  config,\n}: {\n  sourceRoot?: string\n  filename: string\n  config: TwinConfig\n}): string {\n  sourceRoot = sourceRoot ?? '.'\n\n  const configPathCheck = config.stitchesConfig ?? [\n    'stitches.config.ts',\n    'stitches.config.js',\n  ]\n\n  const configPath = checkExists(configPathCheck, sourceRoot)\n  if (!configPath)\n    throw new Error(\n      logGeneralError(\n        `Couldn’t find the Stitches config at ${\n          config.stitchesConfig\n            ? `“${String(config.stitchesConfig)}”`\n            : 'the project root'\n        }.\\nUse the twin config: stitchesConfig=\"PATH_FROM_PROJECT_ROOT\" to set the location.`\n      )\n    )\n\n  return getRelativePath(configPath, filename)\n}\n\nexport default getStitchesPath\n","/**\n * Config presets\n *\n * To change the preset, add the following in `package.json`:\n * `{ \"babelMacros\": { \"twin\": { \"preset\": \"styled-components\" } } }`\n *\n * Or in `babel-plugin-macros.config.js`:\n * `module.exports = { twin: { preset: \"styled-components\" } }`\n */\n\nconst userPresets = {\n  'styled-components': {\n    styled: { import: 'default', from: 'styled-components' },\n    css: { import: 'css', from: 'styled-components' },\n    global: { import: 'createGlobalStyle', from: 'styled-components' },\n  },\n  emotion: {\n    styled: { import: 'default', from: '@emotion/styled' },\n    css: { import: 'css', from: '@emotion/react' },\n    global: { import: 'Global', from: '@emotion/react' },\n  },\n  goober: {\n    styled: { import: 'styled', from: 'goober' },\n    css: { import: 'css', from: 'goober' },\n    global: { import: 'createGlobalStyles', from: 'goober/global' },\n  },\n  stitches: {\n    styled: { import: 'styled', from: 'stitches.config' },\n    css: { import: 'css', from: 'stitches.config' },\n    global: { import: 'global', from: 'stitches.config' },\n  },\n}\n\nexport default userPresets\n","export default function(t,e,l,n,r){for(e=e.split?e.split(\".\"):e,n=0;n<e.length;n++)t=t?t[e[n]]:r;return t===r?l:t}\n//# sourceMappingURL=dlv.es.js.map\n","import dlv from 'dlv'\nimport { transformThemeValue, toPath } from './util/twImports'\nimport isObject from './util/isObject'\nimport type { TailwindConfig } from 'core/types'\n\nfunction createTheme(\n  tailwindConfig: TailwindConfig\n): (\n  dotSeparatedItem: string,\n  extra?: string\n) => Record<string, unknown> | boolean | number {\n  function getConfigValue(path: string[], defaultValue?: string): unknown {\n    return dlv(tailwindConfig, path, defaultValue)\n  }\n\n  function resolveThemeValue(\n    path: string,\n    defaultValue?: string,\n    options = {}\n  ): number | boolean | Record<string, unknown> {\n    const [pathRoot, ...subPaths] = toPath(path)\n\n    const value = getConfigValue(\n      path ? ['theme', pathRoot, ...subPaths] : ['theme'],\n      defaultValue\n    )\n    return sassifyValues(transformThemeValue(pathRoot)(value, options))\n  }\n\n  const out = Object.assign(\n    (path: string, defaultValue?: string) =>\n      resolveThemeValue(path, defaultValue),\n    {\n      withAlpha: (path: string, opacityValue?: string) =>\n        resolveThemeValue(path, undefined, { opacityValue }),\n    }\n  )\n\n  return out\n}\n\nfunction sassifyValues(\n  values: Record<string, unknown>\n): Record<string, unknown> {\n  if (!isObject(values)) return values\n  const transformed: Array<[string, unknown]> = Object.entries(values).map(\n    ([k, v]: [string, unknown]) => [\n      k,\n      // @ts-expect-error TOFIX: ts doesn't understand isObject\n      (isObject(v) && sassifyValues(v)) ||\n        (typeof v === 'number' && String(v)) ||\n        v,\n    ]\n  )\n  return Object.fromEntries(transformed)\n}\n\nexport default createTheme\n","import type { AssertContext } from 'core/types'\nimport { makeColor } from './logging'\n\nfunction createAssert(\n  CustomError = Error,\n  isSilent = false,\n  hasLogColors = true\n) {\n  return (\n    expression: boolean | string | (({ color }: AssertContext) => string),\n    message: string | (({ color }: AssertContext) => string)\n  ): void => {\n    if (isSilent) return\n\n    if (typeof expression === 'string') {\n      throw new CustomError(`\\n\\n${expression}\\n`)\n    }\n\n    const messageContext = { color: makeColor(hasLogColors) }\n\n    if (typeof expression === 'function') {\n      throw new CustomError(`\\n\\n${expression(messageContext)}\\n`)\n    }\n\n    if (expression) return\n\n    if (typeof message === 'string') {\n      throw new CustomError(`\\n\\n${message}\\n`)\n    }\n\n    if (typeof message === 'function') {\n      throw new CustomError(`\\n\\n${message(messageContext)}\\n`)\n    }\n  }\n}\n\nexport default createAssert\n","/* eslint-disable @typescript-eslint/prefer-nullish-coalescing */\nimport { getTailwindConfig, getConfigTwinValidated } from './lib/configHelpers'\nimport getStitchesPath from './lib/getStitchesPath'\nimport userPresets from './lib/userPresets'\nimport createTheme from './lib/createTheme'\nimport createAssert from './lib/createAssert'\nimport { createDebug } from './lib/logging'\nimport { createContext } from './lib/util/twImports'\nimport type {\n  PresetItem,\n  GetPackageUsed,\n  PossiblePresets,\n  CoreContext,\n  CreateCoreContext,\n  TwinConfig,\n  Assert,\n} from './types'\n\nfunction packageCheck(\n  packageToCheck: PossiblePresets,\n  params: GetPackageConfig\n): boolean {\n  return (\n    (params.config && params.config.preset === packageToCheck) ||\n    params.styledImport.from.includes(packageToCheck) ||\n    params.cssImport.from.includes(packageToCheck)\n  )\n}\n\ntype GetPackageConfig = {\n  config?: TwinConfig\n  cssImport: PresetItem\n  styledImport: PresetItem\n}\n\nfunction getPackageUsed(params: GetPackageConfig): GetPackageUsed {\n  return {\n    isEmotion: packageCheck('emotion', params),\n    isStyledComponents: packageCheck('styled-components', params),\n    isGoober: packageCheck('goober', params),\n    isStitches: packageCheck('stitches', params),\n  }\n}\n\ntype ConfigParameters = {\n  sourceRoot?: string\n  filename: string\n  config?: TwinConfig\n  assert: Assert\n}\n\nfunction getStyledConfig({\n  sourceRoot,\n  filename,\n  config,\n}: ConfigParameters): PresetItem {\n  const usedConfig =\n    (config?.styled && config) ||\n    (config?.preset && userPresets[config.preset]) ||\n    userPresets.emotion\n\n  if (typeof usedConfig.styled === 'string') {\n    return { import: 'default', from: usedConfig.styled }\n  }\n\n  if (config && config.preset === 'stitches') {\n    const stitchesPath = getStitchesPath({ sourceRoot, filename, config })\n    if (stitchesPath && usedConfig.styled) {\n      // Overwrite the stitches import data with the path from the current file\n      usedConfig.styled.from = stitchesPath\n    }\n  }\n\n  return usedConfig.styled as PresetItem\n}\n\nfunction getCssConfig({\n  sourceRoot,\n  filename,\n  config,\n}: ConfigParameters): PresetItem {\n  const usedConfig =\n    (config?.css && config) ||\n    (config?.preset && userPresets[config.preset]) ||\n    userPresets.emotion\n\n  if (typeof usedConfig.css === 'string') {\n    return { import: 'css', from: usedConfig.css }\n  }\n\n  if (config && config.preset === 'stitches') {\n    const stitchesPath = getStitchesPath({ sourceRoot, filename, config })\n    if (stitchesPath && usedConfig.css) {\n      // Overwrite the stitches import data with the path from the current file\n      usedConfig.css.from = stitchesPath\n    }\n  }\n\n  return usedConfig.css as PresetItem\n}\n\nfunction getGlobalConfig(config: TwinConfig): PresetItem {\n  const usedConfig =\n    (config.global && config) ||\n    (config.preset && userPresets[config.preset]) ||\n    userPresets.emotion\n  return usedConfig.global as PresetItem\n}\n\nfunction createCoreContext(params: CreateCoreContext): CoreContext {\n  const { sourceRoot, filename, config, isDev = false, CustomError } = params\n  const assert = createAssert(CustomError, false, config?.hasLogColors)\n  const configParameters = {\n    sourceRoot,\n    assert,\n    filename: filename ?? '',\n    config,\n  }\n  const styledImport = getStyledConfig(configParameters)\n  const cssImport = getCssConfig(configParameters)\n  const tailwindConfig =\n    params.tailwindConfig ?? getTailwindConfig(configParameters)\n\n  const packageUsed = getPackageUsed({ config, cssImport, styledImport })\n  const twinConfig = getConfigTwinValidated(config, { ...packageUsed, isDev })\n  const importConfig = {\n    styled: styledImport,\n    css: cssImport,\n    global: getGlobalConfig(config ?? {}),\n  }\n\n  return {\n    isDev,\n    assert,\n    debug: createDebug(isDev, twinConfig),\n    theme: createTheme(tailwindConfig),\n    tailwindContext: createContext(tailwindConfig),\n    packageUsed,\n    tailwindConfig,\n    twinConfig,\n    CustomError,\n    importConfig,\n  }\n}\n\nexport default createCoreContext\n","const CAMEL_FIND = /\\W+(.)/g\n\nexport default function camelize(string: string): string {\n  return string?.replace(CAMEL_FIND, (_, chr: string) => chr.toUpperCase())\n}\n","import type { AssertContext, CoreContext } from 'core/types'\n\nconst MATCH_THEME = /theme\\((.+?)\\)/\nconst MATCH_QUOTES = /[\"'`]/g\n\nfunction replaceThemeValue(\n  value: string,\n  {\n    assert,\n    theme,\n  }: { assert: CoreContext['assert']; theme: CoreContext['theme'] }\n): string {\n  const match = MATCH_THEME.exec(value)\n  if (!match) return value\n\n  const themeFunction = match[0]\n  const themeParameters = match[1].replace(MATCH_QUOTES, '').trim()\n\n  const [main, second] = themeParameters.split(',')\n  let themeValue = theme(main, second)\n\n  assert(Boolean(themeValue), ({ color }: AssertContext) =>\n    color(\n      `✕ ${color(\n        themeParameters,\n        'errorLight'\n      )} doesn’t match a theme value from the config`\n    )\n  )\n\n  // Account for the 'DEFAULT' key\n  if (typeof themeValue === 'object' && 'DEFAULT' in themeValue) {\n    themeValue = themeValue.DEFAULT as typeof themeValue\n  }\n\n  const replacedValue = value.replace(themeFunction, String(themeValue))\n\n  return replacedValue\n}\n\nexport default replaceThemeValue\n","import type { ExtractRuleStyles } from 'core/types'\n\nconst SELECTOR_PARENT_CANDIDATE = /^[ #.[]/\nconst SELECTOR_SPECIAL_STARTS = /^ [>@]/\nconst SELECTOR_ROOT = /(^| ):root(?!\\w)/g\nconst UNDERSCORE_ESCAPING = /\\\\+(_)/g\nconst WRAPPED_PARENT_SELECTORS = /(\\({3}&(.*?)\\){3})/g\n\ntype OptionalSassifyContext = {\n  selectorMatchReg: RegExp\n  sassyPseudo: boolean\n  original?: string\n}\n\ntype SassifySelectorTasks = Array<\n  (selector: string, params: OptionalSassifyContext) => string\n>\n\nconst sassifySelectorTasks: SassifySelectorTasks = [\n  (selector): string => selector.trim(),\n\n  // Prefix with the parent selector when sassyPseudo is enabled,\n  // otherwise just replace the class with the parent selector\n  (selector, { selectorMatchReg, sassyPseudo, original }): string => {\n    const out = selector.replace(\n      selectorMatchReg,\n      (match, __, offset: number) => {\n        if (selector === match) return ''\n\n        if (\n          /\\w/.test(selector[offset - 1]) &&\n          selector[offset + match.length] === ':'\n        ) {\n          if (sassyPseudo && selector[offset - 1] === undefined) return '&'\n          return '' // Cover [section&]:hover:block / .btn.loading&:before\n        }\n\n        return offset === 0 ? '' : '&'\n      }\n    )\n\n    // Fix certain matches not covered by the previous task, eg: `first:[section]:m-1`\n    // (Arbitrary variants targeting html elements)\n    if (original && out === selector && selector.includes(`.${original}`))\n      return selector.replace(`.${original}`, '')\n\n    return out\n  },\n\n  // Unwrap the pre-wrapped parent selectors (pre-wrapping avoids matching issues against word characters, eg: `[&section]:block`)\n  (selector): string => selector.replace(WRAPPED_PARENT_SELECTORS, '&$2'),\n\n  // Remove unneeded escaping from the selector\n  (selector): string => selector.replace(UNDERSCORE_ESCAPING, '$1'),\n\n  // Prefix classes/ids/attribute selectors with a parent selector so styles\n  // are applied to the current element rather than its children\n  (selector): string => {\n    if (selector.includes('&')) return selector\n\n    const addParentSelector = SELECTOR_PARENT_CANDIDATE.test(selector)\n    if (!addParentSelector) return selector\n\n    // Fix: ` > :not([hidden]) ~ :not([hidden])` / ` > *`\n    // Fix: `[@page]:x`\n    if (SELECTOR_SPECIAL_STARTS.test(selector)) return selector\n\n    return `&${selector}`\n  },\n\n  // Fix the spotty `:root` support in emotion/styled-components\n  (selector): string => selector.replace(SELECTOR_ROOT, '*:root'),\n\n  (selector): string => selector.trim(),\n]\n\nfunction sassifySelector(\n  selector: string,\n  params: ExtractRuleStyles & OptionalSassifyContext\n): string {\n  // Remove the selector if it only contains the parent selector\n  if (selector === '&') {\n    params.debug('selector not required', selector)\n    return ''\n  }\n\n  for (const task of sassifySelectorTasks) {\n    selector = task(selector, params)\n  }\n\n  return selector\n}\n\nexport default sassifySelector\n","const CLASS_SEPARATOR = /\\S+/g\nconst DEFAULTS_UNIVERSAL = '*, ::before, ::after'\nconst EMPTY_CSS_VARIABLE_VALUE = 'var(--tw-empty,/*!*/ /*!*/)'\nconst PRESERVED_ATRULE_TYPES = new Set([\n  'charset',\n  'counter-style',\n  'document',\n  'font-face',\n  'font-feature-values',\n  'import',\n  'keyframes',\n  'namespace',\n])\nconst LAYER_DEFAULTS = 'defaults'\nconst LINEFEED = /\\n/g\nconst WORD_CHARACTER = /\\w/\nconst SPACE_ID = '_'\nconst SPACE = /\\s/\nconst SPACES = /\\s+/g\n\nexport {\n  CLASS_SEPARATOR,\n  DEFAULTS_UNIVERSAL,\n  EMPTY_CSS_VARIABLE_VALUE,\n  PRESERVED_ATRULE_TYPES,\n  LAYER_DEFAULTS,\n  LINEFEED,\n  SPACE_ID,\n  SPACE,\n  SPACES,\n  WORD_CHARACTER,\n}\n","import camelize from './lib/util/camelize'\nimport deepMerge from './lib/util/deepMerge'\nimport get from './lib/util/get'\nimport replaceThemeValue from './lib/util/replaceThemeValue'\nimport sassifySelector from './lib/util/sassifySelector'\nimport { splitAtTopLevelOnly, unescape } from './lib/util/twImports'\nimport {\n  DEFAULTS_UNIVERSAL,\n  EMPTY_CSS_VARIABLE_VALUE,\n  PRESERVED_ATRULE_TYPES,\n  LAYER_DEFAULTS,\n  LINEFEED,\n} from './constants'\nimport type { ExtractRuleStyles, CssObject, TransformDecl } from './types'\nimport type * as P from 'postcss'\n\nconst ESC_COMMA = /\\\\2c/g\nconst ESC_DIGIT = /\\\\3(\\d)/g\nconst UNDERSCORE_ESCAPING = /\\\\+(_)/g\nconst BACKSLASH_ESCAPING = /\\\\\\\\/g\n\nfunction transformImportant(value: string, params: TransformDecl): string {\n  if (params.passChecks === true) return value\n  if (!params.hasImportant) return value\n\n  // Avoid adding important if the rule doesn't respect it\n  if (params.hasImportant && params.options?.respectImportant === false)\n    return value\n\n  return `${value} !important`\n}\n\nfunction transformEscaping(value: string): string {\n  return (\n    value\n      .replace(UNDERSCORE_ESCAPING, '$1')\n      // Fix the duplicate escaping babel delivers\n      .replace(BACKSLASH_ESCAPING, '\\\\')\n  )\n}\n\nconst transformValueTasks = [\n  replaceThemeValue,\n  transformImportant,\n  transformEscaping,\n]\n\nfunction transformDeclValue(value: string, params: TransformDecl): string {\n  const valueOriginal = value\n\n  for (const task of transformValueTasks) {\n    value = task(value, params)\n  }\n\n  if (value !== valueOriginal)\n    params.debug('converted theme/important', {\n      old: valueOriginal,\n      new: value,\n    })\n\n  return value\n}\n\nfunction extractFromRule(\n  rule: P.Rule,\n  params: ExtractRuleStyles\n): [string, CssObject] {\n  const selectorForUnescape = rule.selector.replace(ESC_DIGIT, '$1') // Remove digit escaping\n  const selector = unescape(selectorForUnescape).replace(LINEFEED, ' ')\n\n  return [selector, extractRuleStyles(rule.nodes, params)] as [\n    string,\n    CssObject\n  ]\n}\n\nfunction extractSelectorFromAtRule(\n  name: string,\n  value: string,\n  params: ExtractRuleStyles\n): string | undefined {\n  if (name === LAYER_DEFAULTS) {\n    if (params.includeUniversalStyles === false) return\n    return DEFAULTS_UNIVERSAL\n  }\n\n  const val = value.replace(ESC_COMMA, ',')\n\n  // Handle @screen usage in plugins, eg: `@screen md`\n  if (name === 'screen') {\n    const screenConfig = get(params, 'tailwindConfig.theme.screens') as Record<\n      string,\n      string\n    >\n    return `@media (min-width: ${screenConfig[val]})`\n  }\n\n  return `@${name} ${val}`.trim()\n}\n\nconst ruleTypes = {\n  decl(decl: P.Declaration, params: ExtractRuleStyles): CssObject | undefined {\n    const property = decl.prop.startsWith('--')\n      ? decl.prop\n      : camelize(decl.prop)\n\n    const value =\n      decl.prop.startsWith('--') && decl.value === ' '\n        ? EMPTY_CSS_VARIABLE_VALUE // valid empty value in js, unlike ` `\n        : transformDeclValue(decl.value, { ...params, decl, property })\n\n    if (value === null) return\n\n    // `background-clip: text` is still in \"unofficial\" phase and needs a\n    // prefix in Firefox, Chrome and Safari.\n    // https://caniuse.com/background-img-opts\n    if (\n      property === 'backgroundClip' &&\n      (value === 'text' || value === 'text !important')\n    )\n      return {\n        WebkitBackgroundClip: value,\n        [property]: value,\n      }\n\n    return { [property]: value }\n  },\n  // General styles, eg: `{ display: block }`\n  rule(rule: P.Rule, params: ExtractRuleStyles): CssObject | undefined {\n    if (!rule.selector) {\n      if (rule.nodes) {\n        const styles = extractRuleStyles(rule.nodes, params)\n        params.debug('rule has no selector, returning nodes', styles)\n        return styles\n      }\n\n      params.debug('no selector found in rule', rule, 'error')\n      return\n    }\n\n    let [selector, styles] = extractFromRule(rule, params)\n\n    if (selector && styles === null) return\n\n    if (params.passChecks) {\n      const out = selector ? { [selector]: styles } : styles\n      params.debug('style pass return', out)\n      return out\n    }\n\n    params.debug('styles extracted', { selector, styles })\n\n    // As classes aren't used in css-in-js we split the selector into\n    // multiple selectors and strip the ones that don't affect the current\n    // element, eg: In `.this, .sub`, .sub is stripped as it has no target\n    const selectorList = [...splitAtTopLevelOnly(selector, ',')].filter(s => {\n      // Match the selector as a class\n      const result = params.selectorMatchReg?.test(s)\n      // Only keep selectors if they contain a `&` || aren’t\n      // targeting multiple elements with classes\n      if (!result && (s.includes('&') || !s.includes('.'))) return true\n      return result\n    })\n\n    if (selectorList.length === 0) {\n      params.debug('no selector match', selector, 'warn')\n      return\n    }\n\n    if (selectorList.length === 1)\n      params.debug('matched whole selector', selectorList[0])\n    if (selectorList.length > 1)\n      params.debug('matched multiple selectors', selectorList)\n\n    selector = selectorList\n      .map(s =>\n        sassifySelector(\n          s,\n          params as ExtractRuleStyles & {\n            selectorMatchReg: RegExp\n            sassyPseudo: boolean\n          }\n        )\n      )\n      .filter(Boolean)\n      .join(',')\n\n    params.debug('sassified key', selector || styles)\n\n    if (!selector) return styles\n\n    return { [selector]: styles }\n  },\n\n  // At-rules, eg: `@media __` && `@screen md`\n  atrule(atrule: P.AtRule, params: ExtractRuleStyles): CssObject | undefined {\n    const selector = extractSelectorFromAtRule(\n      atrule.name,\n      atrule.params,\n      params\n    )\n\n    if (!selector) {\n      params.debug(\n        'no atrule selector found, removed',\n        { name: atrule.name, params: atrule.params },\n        'warn'\n      )\n      return\n    }\n\n    // Strip keyframes from animate-* classes\n    if (\n      selector.startsWith('@keyframes') &&\n      !params.passChecks &&\n      params.twinConfig.moveKeyframesToGlobalStyles\n    )\n      return\n\n    if (PRESERVED_ATRULE_TYPES.has(atrule.name)) {\n      params.debug(`${atrule.name} pass given`, selector)\n      // Rules that pass checks have no further style transformations\n      params.passChecks = true\n    }\n\n    const styles = extractRuleStyles(atrule.nodes, params)\n    if (!styles) return\n\n    let ruleset = { [selector]: styles }\n\n    if (selector === DEFAULTS_UNIVERSAL) {\n      // Add a cloned backdrop style\n      ruleset = { ...ruleset, '::backdrop': styles }\n      params.debug('universal default', styles)\n    }\n\n    params.debug('atrule', selector)\n    return ruleset\n  },\n}\n\ntype Styles = CssObject | undefined\n\nfunction extractRuleStyles(nodes: P.Node[], params: ExtractRuleStyles): Styles {\n  const styles: Styles[] = nodes\n    .map((rule): CssObject | undefined => {\n      const handler = ruleTypes[rule.type as keyof typeof ruleTypes]\n      if (!handler) return\n\n      return handler(rule as never, params)\n    })\n    .filter(Boolean)\n  if (styles.length === 0) return undefined\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return deepMerge(styles[0], ...styles.slice(1))\n}\n\nexport default extractRuleStyles\n","import deepMerge from './lib/util/deepMerge'\nimport extractRuleStyles from './extractRuleStyles'\nimport { LAYER_DEFAULTS } from './constants'\nimport type { CoreContext, CssObject, Candidate } from './types'\n\nfunction getGlobalStyles(params: CoreContext): CssObject | undefined {\n  const candidates = [...params.tailwindContext.candidateRuleMap]\n\n  const globalPluginStyles = candidates\n    .flatMap(([, candidate]: [unknown, Candidate[]]) => {\n      const out = candidate.map(([data, rule]) => {\n        if (data.layer !== LAYER_DEFAULTS) return\n        return extractRuleStyles([rule], { ...params, passChecks: true })\n      })\n      if (out.length === 0) return\n\n      return out\n    })\n    .filter(Boolean)\n\n  const [globalKey, preflightRules]: [string, Candidate[]] = candidates[0]\n  // @ts-expect-error TOFIX: Fix tuple type error\n  if (globalKey.trim() !== '*') return deepMerge(...globalPluginStyles)\n\n  // @ts-expect-error TOFIX: Fix tuple type error\n  if (!Array.isArray(preflightRules)) return deepMerge(...globalPluginStyles)\n\n  const preflightStyles = preflightRules.flatMap(([, rule]) =>\n    extractRuleStyles([rule], { ...params, passChecks: true })\n  )\n\n  return deepMerge(\n    // @ts-expect-error TOFIX: Fix tuple type error\n    ...preflightStyles,\n    ...globalPluginStyles,\n    ...globalKeyframeStyles(params)\n  )\n}\n\nfunction globalKeyframeStyles(\n  params: CoreContext\n): Array<Record<string, unknown>> {\n  if (params.twinConfig.moveKeyframesToGlobalStyles === false) return []\n  const keyframes = params.theme('keyframes')\n  if (!keyframes) return []\n\n  return Object.entries(keyframes).map(\n    ([name, frames]: [string, Record<string, unknown>]) => ({\n      [`@keyframes ${name}`]: frames,\n    })\n  )\n}\n\nexport default getGlobalStyles\n","import type { Assert, AssertContext, TailwindConfig } from 'core/types'\nimport { splitAtTopLevelOnly } from './util/twImports'\n\nconst BRACKETED = /^\\(.*?\\)$/\nconst BRACKETED_MAYBE_IMPORTANT = /\\)!?$/\nconst ESCAPE_CHARACTERS = /\\n|\\t/g\n\ntype Context = {\n  variants?: string\n  beforeImportant?: string\n  afterImportant?: string\n  tailwindConfig: TailwindConfig\n  assert: Assert\n}\n\nfunction spreadVariantGroups(classes: string, context: Context): string[] {\n  const pieces = [\n    ...splitAtTopLevelOnly(\n      classes.trim(),\n      context.tailwindConfig.separator ?? ':'\n    ),\n  ] as string[]\n\n  let groupedClasses = pieces.pop()\n  if (!groupedClasses) return [] // type guard\n\n  // Check for too many dividers used\n  // Added here instead of \"validateClasses\" as it's less error prone to check here\n  context.assert(\n    !pieces.includes(''),\n    ({ color }: AssertContext) =>\n      `${color(\n        `✕ ${String(color(classes, 'errorLight'))} has too many dividers`\n      )}\\n\\nUpdate to ${String(\n        color(\n          `${pieces\n            .filter(Boolean)\n            .join(context.tailwindConfig.separator ?? ':')}`,\n          'success'\n        )\n      )}`\n  )\n\n  let beforeImportant = context?.beforeImportant ?? ''\n  let afterImportant = context?.afterImportant ?? ''\n\n  if (!beforeImportant && groupedClasses.startsWith('!')) {\n    groupedClasses = groupedClasses.slice(1)\n    beforeImportant = '!'\n  }\n\n  if (!afterImportant && groupedClasses.endsWith('!')) {\n    groupedClasses = groupedClasses.slice(0, -1)\n    afterImportant = '!'\n  }\n\n  // Remove () brackets and split\n  const unwrapped = BRACKETED.test(groupedClasses)\n    ? groupedClasses.slice(1, -1)\n    : groupedClasses\n\n  const classList = [...splitAtTopLevelOnly(unwrapped, ' ')].filter(Boolean)\n\n  const group = classList\n    .map(className => {\n      if (\n        BRACKETED_MAYBE_IMPORTANT.test(className) &&\n        // Avoid infinite loop due to lack of separator, eg: `[em](block)`\n        !className.includes('](')\n      ) {\n        const ctx = { ...context, beforeImportant, afterImportant }\n        return expandVariantGroups(\n          [...pieces, className].join(context.tailwindConfig.separator ?? ':'),\n          ctx\n        )\n      }\n\n      return [...pieces, [beforeImportant, className, afterImportant].join('')]\n        .filter(Boolean)\n        .join(context.tailwindConfig.separator ?? ':')\n    })\n    .filter(Boolean)\n\n  return group\n}\n\nfunction expandVariantGroups(classes: string, context: Context): string {\n  const classList = [\n    ...splitAtTopLevelOnly(classes.replace(ESCAPE_CHARACTERS, ' ').trim(), ' '),\n  ]\n  if (classList.length === 1 && ['', '()'].includes(classList[0])) return ''\n\n  const expandedClasses = classList.flatMap(item =>\n    spreadVariantGroups(item, context)\n  )\n\n  return expandedClasses.join(' ')\n}\n\nexport default expandVariantGroups\n","const REGEX_SPECIAL_CHARACTERS = /[$()*+./?[\\\\\\]^{|}-]/g\n\nexport default function escapeRegex(string: string): string {\n  return string.replace(REGEX_SPECIAL_CHARACTERS, '\\\\$&')\n}\n","import { splitAtTopLevelOnly } from './twImports'\nimport type { TailwindConfig } from 'core/types'\n\nexport default function isShortCss(\n  fullClassName: string,\n  tailwindConfig: TailwindConfig\n): boolean {\n  const classPieces = [\n    ...splitAtTopLevelOnly(fullClassName, tailwindConfig.separator ?? ':'),\n  ]\n\n  const className = classPieces.slice(-1)[0]\n\n  if (!className.includes('[')) return false\n\n  // Replace brackets before splitting on them as the split function already\n  // reads brackets to determine where the top level is\n  const splitAtArbitrary = [\n    ...splitAtTopLevelOnly(className.replace(/\\[/g, '∀'), '∀'),\n  ]\n\n  // Normal class\n  if (splitAtArbitrary[0].endsWith('-')) return false\n\n  // Important prefix\n  if (splitAtArbitrary[0].endsWith('!')) return false\n\n  // Arbitrary property\n  if (splitAtArbitrary[0] === '') return false\n\n  // Slash opacity, eg: bg-red-500/fromConfig/[.555]\n  if (splitAtArbitrary[0].endsWith('/')) return false\n\n  return true\n}\n","// Split a string at a value and return an array of the two parts\nexport default function splitOnFirst(input: string, delim: string): string[] {\n  return (([first, ...rest]): [string, string] => [first, rest.join(delim)])(\n    input.split(delim)\n  )\n}\n","import replaceThemeValue from './util/replaceThemeValue'\nimport isShortCss from './util/isShortCss'\nimport splitOnFirst from './util/splitOnFirst'\nimport { splitAtTopLevelOnly } from './util/twImports'\nimport type { AssertContext, CoreContext, TailwindConfig } from 'core/types'\n// eslint-disable-next-line import/no-relative-parent-imports\nimport { SPACE_ID, SPACES } from '../constants'\n\nconst ALL_COMMAS = /,/g\nconst ALL_AMPERSANDS = /&/g\nconst ENDING_AMP_THEN_WHITESPACE = /&[\\s_]*$/\nconst ALL_CLASS_DOTS = /(?<!\\\\)(\\.)(?=\\w)/g\nconst ALL_CLASS_ATS = /(?<!\\\\)(@)(?=\\w)(?!media)/g\nconst ALL_WRAPPABLE_PARENT_SELECTORS = /&(?=([^ $)*+,.:>[_~])[\\w-])/g\nconst BASIC_SELECTOR_TYPES = /^#|^\\\\.|[^\\W_]/\n\ntype ConvertShortCssToArbitraryPropertyParameters = {\n  disableShortCss: CoreContext['twinConfig']['disableShortCss']\n  origClassName: string\n} & Pick<CoreContext, 'tailwindConfig' | 'assert' | 'isShortCssOnly'>\n\nfunction convertShortCssToArbitraryProperty(\n  className: string,\n  {\n    tailwindConfig,\n    assert,\n    disableShortCss,\n    isShortCssOnly,\n    origClassName,\n  }: ConvertShortCssToArbitraryPropertyParameters\n): string {\n  const splitArray = [\n    ...splitAtTopLevelOnly(className, tailwindConfig.separator ?? ':'),\n  ]\n\n  const lastValue = splitArray.slice(-1)[0]\n\n  let [property, value] = splitOnFirst(lastValue, '[')\n  value = value.slice(0, -1).trim()\n\n  let preSelector = ''\n\n  if (property.startsWith('!')) {\n    property = property.slice(1)\n    preSelector = '!'\n  }\n\n  const template = `${preSelector}[${[\n    property,\n    value === '' ? \"''\" : value,\n  ].join(tailwindConfig.separator ?? ':')}]`\n  splitArray.splice(-1, 1, template)\n\n  const arbitraryProperty = splitArray.join(tailwindConfig.separator ?? ':')\n\n  const isShortCssDisabled = disableShortCss && !isShortCssOnly\n  assert(!isShortCssDisabled, ({ color }) =>\n    [\n      `${String(\n        color(\n          `✕ ${String(\n            color(origClassName, 'errorLight')\n          )} uses twin’s deprecated short-css syntax`\n        )\n      )}`,\n      `Update to ${String(color(arbitraryProperty, 'success'))}`,\n      `To ignore this notice, add this to your twin config:\\n{ \"disableShortCss\": false }`,\n      `Read more at https://twinredirect.page.link/short-css`,\n    ].join('\\n\\n')\n  )\n\n  return arbitraryProperty\n}\n\ntype ConvertClassNameParameters = {\n  disableShortCss: CoreContext['twinConfig']['disableShortCss']\n} & Pick<\n  CoreContext,\n  'tailwindConfig' | 'theme' | 'assert' | 'debug' | 'isShortCssOnly'\n>\n\nfunction checkForVariantSupport({\n  className,\n  tailwindConfig,\n  assert,\n}: { className: string } & Pick<\n  CoreContext,\n  'tailwindConfig' | 'assert'\n>): void {\n  const pieces = splitAtTopLevelOnly(className, tailwindConfig.separator ?? ':')\n  const hasMultipleVariants = pieces.length > 2\n  const hasACommaInVariants = pieces.some(p => {\n    const splits = splitAtTopLevelOnly(p.slice(1, -1), ',')\n    return splits.length > 1\n  })\n  const hasIssue = hasMultipleVariants && hasACommaInVariants\n  assert(\n    !hasIssue,\n    ({ color }: AssertContext) =>\n      `${color(\n        `✕ The variants on ${String(\n          color(className, 'errorLight')\n        )} are invalid tailwind and twin classes`\n      )}\\n\\n${color(\n        `To fix, either reduce all variants into a single arbitrary variant:`,\n        'success'\n      )}\\nFrom: \\`[.this, .that]:first:block\\`\\nTo: \\`[.this:first, .that:first]:block\\`\\n\\n${color(\n        `Or split the class into separate classes instead of using commas:`,\n        'success'\n      )}\\nFrom: \\`[.this, .that]:first:block\\`\\nTo: \\`[.this]:first:block [.that]:first:block\\`\\n\\nRead more at https://twinredirect.page.link/arbitrary-variants-with-commas`\n  )\n}\n\n// Convert a twin class to a tailwindcss friendly class\nfunction convertClassName(\n  className: string,\n  {\n    tailwindConfig,\n    theme,\n    isShortCssOnly,\n    disableShortCss,\n    assert,\n    debug,\n  }: ConvertClassNameParameters\n): string {\n  checkForVariantSupport({ className, tailwindConfig, assert })\n\n  const origClassName = className\n\n  // Convert spaces to class friendly underscores\n  className = className.replace(SPACES, SPACE_ID)\n\n  // Move the bang to the front of the class\n  if (className.endsWith('!')) {\n    debug('trailing bang found', className)\n\n    const splitArray = [\n      ...splitAtTopLevelOnly(\n        className.slice(0, -1),\n        tailwindConfig.separator ?? ':'\n      ),\n    ]\n    // Place a ! before the class\n    splitArray.splice(-1, 1, `!${splitArray[splitArray.length - 1]}`)\n    className = splitArray.join(tailwindConfig.separator ?? ':')\n  }\n\n  // Convert short css to an arbitrary property, eg: `[display:block]`\n  // (Short css is deprecated)\n  if (isShortCss(className, tailwindConfig)) {\n    debug('short css found', className)\n    className = convertShortCssToArbitraryProperty(className, {\n      tailwindConfig,\n      assert,\n      disableShortCss,\n      isShortCssOnly,\n      origClassName,\n    })\n  }\n\n  // Replace theme values throughout the class\n  className = replaceThemeValue(className, { assert, theme })\n\n  // Add missing parent selectors and collapse arbitrary variants\n  className = sassifyArbitraryVariants(className, { tailwindConfig })\n\n  debug('class after format', className)\n\n  return className\n}\n\nfunction isArbitraryVariant(variant: string): boolean {\n  return variant.startsWith('[') && variant.endsWith(']')\n}\n\nfunction unbracket(variant: string): string {\n  return variant.slice(1, -1)\n}\n\nfunction sassifyArbitraryVariants(\n  fullClassName: string,\n  { tailwindConfig }: { tailwindConfig: TailwindConfig }\n): string {\n  const splitArray = [\n    ...splitAtTopLevelOnly(fullClassName, tailwindConfig.separator ?? ':'),\n  ]\n\n  const variants = splitArray.slice(0, -1)\n  const className = splitArray.slice(-1)[0]\n\n  if (variants.length === 0) return fullClassName\n\n  // Collapse arbitrary variants when they don't contain `&`.\n  // `[> div]:[.nav]:(flex block)` -> `[> div_.nav]:flex [> div_.nav]:block`\n  const collapsed = [] as string[]\n  variants.forEach((variant, index) => {\n    // We can’t match the selector if there's a character right next to the parent selector (eg: `[&section]:block`) otherwise we'd accidentally replace `.step` in classes like this:\n    // Bad: `.steps-primary .steps` -> `&-primary &`\n    // Good: `.steps-primary .steps` -> `.steps-primary &`\n    // So here we replace it with crazy brackets to identify and unwrap it later\n    if (isArbitraryVariant(variant))\n      variant = variant.replace(ALL_WRAPPABLE_PARENT_SELECTORS, '(((&)))')\n\n    if (\n      index === 0 ||\n      !isArbitraryVariant(variant) ||\n      !isArbitraryVariant(variants[index - 1])\n    )\n      return collapsed.push(variant)\n\n    const prev = collapsed[collapsed.length - 1]\n\n    if (variant.includes('&')) {\n      const prevHasParent = prev.includes('&')\n\n      // Merge with current\n      if (prevHasParent) {\n        const mergedWithCurrent = variant.replace(\n          ALL_AMPERSANDS,\n          unbracket(prev)\n        )\n        const isLast = index === variants.length - 1\n        collapsed[index - 1] = isLast\n          ? mergedWithCurrent.replace(ALL_AMPERSANDS, '')\n          : mergedWithCurrent\n        return\n      }\n\n      // Merge with previous\n      if (!prevHasParent) {\n        const mergedWithPrev = `[${unbracket(variant).replace(\n          ALL_AMPERSANDS,\n          unbracket(prev)\n        )}]`\n        collapsed[collapsed.length - 1] = mergedWithPrev\n        return\n      }\n    }\n\n    // Parentless variants are merged into the previous arbitrary variant\n    const mergedWithPrev = `[${[\n      unbracket(prev).replace(ENDING_AMP_THEN_WHITESPACE, ''),\n      unbracket(variant),\n    ].join('_')}]`\n    collapsed[collapsed.length - 1] = mergedWithPrev\n  })\n\n  // The supplied class requires the reversal of it's variants as resolveMatches adds them in reverse order\n  const reversedVariantList = [...collapsed].slice().reverse()\n  const allVariants = reversedVariantList.map((v, idx) => {\n    if (!isArbitraryVariant(v)) return v\n\n    const unwrappedVariant = unbracket(v)\n      // Unescaped dots incorrectly add the prefix within arbitrary variants (only when`prefix` is set in tailwind config)\n      // eg: tw`[.a]:first:tw-block` -> `.tw-a &:first-child`\n      .replace(ALL_CLASS_DOTS, '\\\\.')\n      // Unescaped ats will throw a conversion error\n      .replace(ALL_CLASS_ATS, '\\\\@')\n\n    const variantList = unwrappedVariant.startsWith('@')\n      ? [unwrappedVariant]\n      : // Arbitrary variants with commas are split, handled as separate selectors then joined\n        [...splitAtTopLevelOnly(unwrappedVariant, ',')]\n    const out = variantList\n      .map(variant =>\n        addParentSelector(variant, collapsed[idx - 1], collapsed[idx + 1] ?? '')\n      )\n      // Tailwindcss removes everything from a comma onwards in arbitrary variants, so we need to encode to preserve them\n      // Underscore is needed to distance the code from another possible number\n      // Eg: [path[fill='rgb(51,100,51)']]:[fill:white]\n      .join('\\\\2c_')\n      .replace(ALL_COMMAS, '\\\\2c_')\n\n    return `[${out}]`\n  })\n\n  return [...allVariants, className].join(tailwindConfig.separator ?? ':')\n}\n\nfunction addParentSelector(\n  selector: string,\n  prev: string,\n  next: string\n): string {\n  // Preserve selectors with a parent selector and media queries\n  if (selector.includes('&') || selector.startsWith('@')) return selector\n\n  // Arbitrary variants\n  // Pseudo elements get an auto parent selector prefixed\n  if (selector.startsWith(':')) return `&${selector}`\n  // Variants that start with a class/id get treated as a child\n  if (BASIC_SELECTOR_TYPES.test(selector) && !prev) return `& ${selector}`\n  // When there's more than one variant and it's at the end then prefix it\n  if (!next && prev) return `&${selector}`\n\n  return `& ${selector}`\n}\n\nexport default convertClassName\n","import extractRuleStyles from './extractRuleStyles'\nimport createAssert from './lib/createAssert'\nimport expandVariantGroups from './lib/expandVariantGroups'\nimport deepMerge from './lib/util/deepMerge'\nimport { resolveMatches, splitAtTopLevelOnly } from './lib/util/twImports'\nimport escapeRegex from './lib/util/escapeRegex'\nimport convertClassName from './lib/convertClassName'\nimport { WORD_CHARACTER } from './constants'\nimport type {\n  CoreContext,\n  CssObject,\n  ExtractRuleStyles,\n  AssertContext,\n  TailwindMatch,\n  TailwindContext,\n  TailwindConfig,\n  Assert,\n} from './types'\n\nconst IMPORTANT_OUTSIDE_BRACKETS =\n  /(:!|^!)(?=(?:(?:(?!\\)).)*\\()|[^()]*$)(?=(?:(?:(?!]).)*\\[)|[^[\\]]*$)/\nconst COMMENTS_MULTI_LINE = /(?<!\\/)\\/(?!\\/)\\*[\\S\\s]*?\\*\\//g\nconst COMMENTS_SINGLE_LINE = /(?<!:)\\/\\/.*/g\nconst CLASS_DIVIDER_PIPE = / \\| /g\nconst ALL_BRACKET_SQUARE_LEFT = /\\[/g\nconst ALL_BRACKET_SQUARE_RIGHT = /]/g\nconst ALL_BRACKET_ROUND_LEFT = /\\(/g\nconst ALL_BRACKET_ROUND_RIGHT = /\\)/g\nconst ESCAPE_CHARACTERS = /\\n|\\t/g\n\nfunction getStylesFromMatches(\n  matches: TailwindMatch[],\n  params: ExtractRuleStyles\n): CssObject | undefined {\n  if (matches.length === 0) {\n    params.debug('no matches supplied', {}, 'error')\n    return\n  }\n\n  const rulesets = matches\n    .map(([data, rule]) =>\n      extractRuleStyles([rule], { ...params, options: data.options })\n    )\n    .filter(Boolean)\n\n  if (rulesets.length === 0) {\n    params.debug('no node rulesets found', {}, 'error')\n    return\n  }\n\n  // @ts-expect-error Avoid tuple type error\n  return deepMerge(...rulesets)\n}\n\n// When removing a multiline comment, determine if a space is left or not\n// eg: You'd want a space left in this situation: tw`class1/* comment */class2`\nfunction multilineReplaceWith(\n  match: string,\n  index: number,\n  input: string\n): ' ' | '' {\n  const charBefore = input[index - 1]\n  const directPrefixMatch = charBefore && WORD_CHARACTER.exec(charBefore)\n  const charAfter = input[Number(index) + Number(match.length)]\n  const directSuffixMatch = charAfter && WORD_CHARACTER.exec(charAfter)\n  return directPrefixMatch?.[0] && directSuffixMatch && directSuffixMatch[0]\n    ? ' '\n    : ''\n}\n\nfunction validateClasses(\n  classes: string,\n  {\n    assert,\n    tailwindConfig,\n  }: { tailwindConfig: TailwindConfig; assert: CoreContext['assert'] }\n): boolean {\n  // TOFIX: Avoid counting brackets within arbitrary values\n  assert(\n    (classes.match(ALL_BRACKET_SQUARE_LEFT) ?? []).length ===\n      (classes.match(ALL_BRACKET_SQUARE_RIGHT) ?? []).length,\n    ({ color }: AssertContext) =>\n      `${color(\n        `✕ Unbalanced square brackets found in classes:\\n\\n${color(\n          classes,\n          'errorLight'\n        )}`\n      )}`\n  )\n  // TOFIX: Avoid counting brackets within arbitrary values\n  assert(\n    (classes.match(ALL_BRACKET_ROUND_LEFT) ?? []).length ===\n      (classes.match(ALL_BRACKET_ROUND_RIGHT) ?? []).length,\n    ({ color }: AssertContext) =>\n      `${color(\n        `✕ Unbalanced round brackets found in classes:\\n\\n${color(\n          classes,\n          'errorLight'\n        )}`\n      )}`\n  )\n\n  for (const className of splitAtTopLevelOnly(classes, ' ')) {\n    // Check for missing class attached to a variant\n    const classCheck = className.replace(ESCAPE_CHARACTERS, ' ').trim()\n    assert(\n      !classCheck.endsWith(tailwindConfig.separator ?? ':'),\n      ({ color }: AssertContext) =>\n        `${color(\n          `✕ The variant ${String(\n            color(classCheck, 'errorLight')\n          )} doesn’t look right`\n        )}\\n\\nUpdate to ${String(\n          color(`${classCheck}block`, 'success')\n        )} or ${String(color(`${classCheck}(block mt-4)`, 'success'))}`\n    )\n  }\n\n  return true\n}\n\nconst tasks: Array<\n  (classes: string, tailwindConfig: TailwindConfig, assert: Assert) => string\n> = [\n  (classes): string => classes.replace(CLASS_DIVIDER_PIPE, ' '),\n  (classes): string =>\n    classes.replace(COMMENTS_MULTI_LINE, multilineReplaceWith),\n  (classes): string => classes.replace(COMMENTS_SINGLE_LINE, ''),\n  (classes, tailwindConfig, assert): string =>\n    expandVariantGroups(classes, { assert, tailwindConfig }), // Expand grouped variants to individual classes\n]\n\nfunction bigSign(bigIntValue: bigint): number {\n  // @ts-expect-error Unsure of types here\n  return (bigIntValue > 0n) - (bigIntValue < 0n)\n}\n\nfunction getOrderedClassList(\n  tailwindContext: TailwindContext,\n  convertedClassList: string[],\n  classList: string[],\n  assert: CoreContext['assert']\n): Array<[order: bigint, className: string, preservedClassName: string]> {\n  assert(typeof tailwindContext?.getClassOrder === 'function', ({ color }) =>\n    color('Twin requires a newer version of tailwindcss, please update')\n  ) // `getClassOrder` was added in tailwindcss@3.0.23\n\n  let orderedClassList\n\n  try {\n    orderedClassList = tailwindContext\n      .getClassOrder(convertedClassList)\n      .map(([className, order], index): [bigint, string, string] => [\n        order || 0n,\n        className,\n        classList[index],\n      ])\n      .sort(([a], [z]) => bigSign(a - z))\n  } catch (error: unknown) {\n    assert(\n      false,\n      ({ color }) =>\n        `${color(\n          String(error).replace('with \\\\ may', 'with a single \\\\ may') // Improve error\n        )}\\n\\n${color('Found in:')} ${color(\n          convertedClassList.join(' '),\n          'errorLight'\n        )}`\n    )\n  }\n\n  return orderedClassList as Array<[bigint, string, string]>\n}\n\nfunction getStyles(\n  classes: string,\n  params: CoreContext\n): { styles: CssObject | undefined; unmatched: string[]; matched: string[] } {\n  const assert = createAssert(\n    params.CustomError,\n    params.isSilent,\n    params.twinConfig.hasLogColors\n  )\n\n  params.debug('string in', classes)\n\n  assert(\n    ![null, 'null', undefined].includes(classes),\n    ({ color }: AssertContext) =>\n      `${color(\n        `✕ Your classes need to be complete strings for Twin to detect them correctly`\n      )}\\n\\nRead more at https://twinredirect.page.link/template-literals`\n  )\n\n  const result = validateClasses(classes, {\n    tailwindConfig: params.tailwindConfig,\n    assert,\n  })\n  if (!result) return { styles: undefined, matched: [], unmatched: [] }\n\n  for (const task of tasks) {\n    classes = task(classes, params.tailwindConfig, assert)\n  }\n\n  params.debug('classes after format', classes)\n\n  const matched: string[] = []\n  const unmatched: string[] = []\n  const styles: CssObject[] = []\n\n  const commonContext = {\n    assert,\n    theme: params.theme,\n    debug: params.debug,\n  }\n\n  const convertedClassNameContext = {\n    ...commonContext,\n    tailwindConfig: params.tailwindConfig,\n    isShortCssOnly: params.isShortCssOnly,\n    disableShortCss: params.twinConfig.disableShortCss,\n  }\n\n  const classList = [...splitAtTopLevelOnly(classes, ' ')]\n\n  const convertedClassList = classList.map(c =>\n    convertClassName(c, convertedClassNameContext)\n  )\n\n  const orderedClassList = getOrderedClassList(\n    params.tailwindContext,\n    convertedClassList,\n    classList,\n    assert\n  )\n\n  const commonMatchContext = {\n    ...commonContext,\n    includeUniversalStyles: false,\n    twinConfig: params.twinConfig,\n    tailwindConfig: params.tailwindConfig,\n    tailwindContext: params.tailwindContext,\n    sassyPseudo: params.twinConfig.sassyPseudo,\n  }\n\n  for (const [, convertedClassName, className] of orderedClassList) {\n    const matches = [\n      ...resolveMatches(convertedClassName, params.tailwindContext),\n    ]\n\n    const results = getStylesFromMatches(matches, {\n      ...commonMatchContext,\n      hasImportant: IMPORTANT_OUTSIDE_BRACKETS.test(\n        escapeRegex(convertedClassName)\n      ),\n      selectorMatchReg: new RegExp(\n        // This regex specifies a list of characters allowed for the character\n        // immediately after the class ends - this avoids matching other classes\n        // eg: Input 'btn' will avoid matching '.btn-primary' in `.btn + .btn-primary`\n        `(${escapeRegex(`.${convertedClassName}`)})(?=[\\\\[.# >~+*:$\\\\)]|$)`\n      ),\n      original: convertedClassName,\n    })\n\n    if (!results) {\n      params.debug('🔥 No matching rules found', className, 'error')\n\n      // Allow tw``/tw=\"\" to pass through\n      if (className !== '') unmatched.push(className)\n\n      // If non-match and is on silent mode: Continue next iteration\n      if (params.isSilent) continue\n\n      // If non-match: Stop iteration and return\n      // (This \"for of\" loop returns to the parent function)\n      return { styles: undefined, matched, unmatched }\n    }\n\n    matched.push(className)\n    params.debug('✨ ruleset out', results, 'success')\n\n    styles.push(results)\n  }\n\n  if (styles.length === 0) return { styles: undefined, matched, unmatched }\n\n  // @ts-expect-error Avoid tuple type error\n  const mergedStyles = deepMerge(...styles)\n\n  return { styles: mergedStyles, matched, unmatched }\n}\n\nexport default getStyles\n","import get from './util/get'\nimport type {\n  T,\n  State,\n  NodePath,\n  CoreContext,\n  ImportDeclarationHandler,\n} from 'macro/types'\n\nfunction addImport({\n  types: t,\n  program,\n  mod,\n  name,\n  identifier,\n}: {\n  types: typeof T\n  program: NodePath<T.Program>\n  mod: string\n  name: string\n  identifier: T.Identifier\n}): void {\n  const importName =\n    name === 'default'\n      ? [t.importDefaultSpecifier(identifier)]\n      : name\n      ? [t.importSpecifier(identifier, t.identifier(name))]\n      : []\n  program.unshiftContainer(\n    'body',\n    t.importDeclaration(importName, t.stringLiteral(mod))\n  )\n}\n\n/**\n * Convert plain js into babel ast\n */\nfunction astify(\n  literal: unknown,\n  t: typeof T\n):\n  | T.NullLiteral\n  | T.UnaryExpression\n  | T.NumericLiteral\n  | T.BooleanLiteral\n  | T.StringLiteral\n  | T.Expression {\n  if (literal === null) {\n    return t.nullLiteral()\n  }\n\n  switch (typeof literal) {\n    case 'function': {\n      return t.unaryExpression('void', t.numericLiteral(0), true)\n    }\n\n    case 'number': {\n      return t.numericLiteral(literal)\n    }\n\n    case 'boolean': {\n      return t.booleanLiteral(literal)\n    }\n\n    case 'undefined': {\n      return t.unaryExpression('void', t.numericLiteral(0), true)\n    }\n\n    case 'string': {\n      return t.stringLiteral(literal)\n    }\n\n    default: {\n      if (Array.isArray(literal)) {\n        return t.arrayExpression(literal.map(x => astify(x, t)))\n      }\n\n      return t.objectExpression(\n        objectExpressionElements(literal as Record<string, string>, t)\n      )\n    }\n  }\n}\n\nfunction objectExpressionElements(\n  literal: Record<string, string>,\n  t: typeof T\n): T.ObjectProperty[] {\n  return Object.keys(literal)\n    .filter(k => typeof literal[k] !== 'undefined')\n    .map(\n      (k: string): T.ObjectProperty =>\n        t.objectProperty(t.stringLiteral(k), astify(literal[k], t))\n    )\n}\n\nfunction setStyledIdentifier({\n  state,\n  path,\n  coreContext,\n}: ImportDeclarationHandler): void {\n  const importFromStitches =\n    coreContext.packageUsed.isStitches &&\n    coreContext.importConfig.styled.from.includes(path.node.source.value)\n  const importFromLibrary =\n    path.node.source.value === coreContext.importConfig.styled.from\n\n  if (!importFromLibrary && !importFromStitches) return\n\n  // Look for an existing import that matches the config,\n  // if found then reuse it for the rest of the function calls\n  path.node.specifiers.some(specifier => {\n    if (\n      specifier.type === 'ImportDefaultSpecifier' &&\n      coreContext.importConfig.styled.import === 'default' &&\n      // fixes an issue in gatsby where the styled-components plugin has run\n      // before twin. fix is to ignore import aliases which babel creates\n      // https://github.com/ben-rogerson/twin.macro/issues/192\n      !specifier.local.name.startsWith('_')\n    ) {\n      state.styledIdentifier = specifier.local\n      state.existingStyledIdentifier = true\n      return true\n    }\n\n    if (\n      specifier.type === 'ImportSpecifier' &&\n      specifier.imported.type === 'Identifier' &&\n      specifier.imported.name === coreContext.importConfig.styled.import\n    ) {\n      state.styledIdentifier = specifier.local\n      state.existingStyledIdentifier = true\n      return true\n    }\n\n    state.existingStyledIdentifier = false\n    return false\n  })\n}\n\nfunction setCssIdentifier({\n  state,\n  path,\n  coreContext,\n}: ImportDeclarationHandler): void {\n  const importFromStitches =\n    coreContext.packageUsed.isStitches &&\n    coreContext.importConfig.css.from.includes(path.node.source.value)\n  const isLibraryImport =\n    path.node.source.value === coreContext.importConfig.css.from\n\n  if (!isLibraryImport && !importFromStitches) return\n\n  // Look for an existing import that matches the config,\n  // if found then reuse it for the rest of the function calls\n  path.node.specifiers.some(specifier => {\n    if (\n      specifier.type === 'ImportDefaultSpecifier' &&\n      coreContext.importConfig.css.import === 'default'\n    ) {\n      state.cssIdentifier = specifier.local\n      state.existingCssIdentifier = true\n      return true\n    }\n\n    if (\n      specifier.type === 'ImportSpecifier' &&\n      specifier.imported.type === 'Identifier' &&\n      specifier.imported.name === coreContext.importConfig.css.import\n    ) {\n      state.cssIdentifier = specifier.local\n      state.existingCssIdentifier = true\n      return true\n    }\n\n    state.existingCssIdentifier = false\n    return false\n  })\n}\n\nfunction getStringFromTTE(path: NodePath<T.TaggedTemplateExpression>): string {\n  let getRawValue = false\n  let rawValue = ''\n\n  // Convert basic interpolated variables defined in the same file\n  const evaluatedValue = (path.get('quasi').evaluate().value as string) ?? ''\n  if (evaluatedValue === '') getRawValue = true\n\n  // Evaluating strips escaping, so if there's a square bracket we know it's an\n  // arbitrary value/property/variant and should grab the raw value\n  if (evaluatedValue.includes('[')) getRawValue = true\n\n  if (getRawValue)\n    rawValue = (path.get('quasi.quasis') as Array<NodePath<T.TemplateElement>>)\n      .map(q => q.node.value.raw)\n      .join('')\n\n  // Trigger error due to non-evaluated value, eg:`w-[${sizes.width}]`\n  if (evaluatedValue.length === 0 && rawValue.length > 0) return 'null'\n\n  // Return raw classes with escaping, eg: [content\\!]:block\n  if (rawValue.length > evaluatedValue.length) return rawValue\n\n  return evaluatedValue\n}\n\n// Parse tagged template arrays (``)\nfunction parseTte(\n  path: NodePath<T.TaggedTemplateExpression>,\n  { t, state }: { t: typeof T; state: State }\n): { string: string; path: NodePath<T.TaggedTemplateExpression> } | undefined {\n  const cloneNode = t.cloneNode || t.cloneDeep\n  const tagType = path.node.tag.type\n\n  if (\n    tagType !== 'Identifier' &&\n    tagType !== 'MemberExpression' &&\n    tagType !== 'CallExpression'\n  )\n    return\n\n  const string = getStringFromTTE(path)\n\n  // Grab the path location before changing it\n  const stringLoc = path.get('quasi').node.loc\n\n  if (tagType === 'CallExpression') {\n    replaceWithLocation(\n      path.get('tag').get('callee') as NodePath,\n      // @ts-expect-error Source type doesn’t include `Identifier` as possible type\n      cloneNode(state.styledIdentifier)\n    )\n    state.isImportingStyled = true\n  } else if (tagType === 'MemberExpression') {\n    replaceWithLocation(\n      path.get('tag').get('object') as NodePath,\n      // @ts-expect-error Source type doesn’t include `Identifier` as possible type\n      cloneNode(state.styledIdentifier)\n    )\n    state.isImportingStyled = true\n  }\n\n  if (tagType === 'CallExpression' || tagType === 'MemberExpression') {\n    replaceWithLocation(\n      path,\n      t.callExpression(cloneNode(path.node.tag), [\n        t.identifier('__twPlaceholder'),\n      ]) as unknown as NodePath\n    )\n\n    path = (\n      path.get('arguments') as Array<NodePath<T.TaggedTemplateExpression>>\n    )[0]\n  }\n\n  path.node.loc = stringLoc // Restore the original path location\n\n  return { string, path }\n}\n\nfunction replaceWithLocation<EmptyArray>(\n  path: NodePath,\n  replacement: NodePath | T.Expression\n): [NodePath] | EmptyArray[] {\n  const { loc } = path.node\n  const newPaths = replacement ? path.replaceWith(replacement) : []\n  if (Array.isArray(newPaths) && newPaths.length > 0) {\n    newPaths.forEach(p => {\n      p.node.loc = loc\n    })\n  }\n\n  return newPaths\n}\n\nfunction generateUid(name: string, program: NodePath<T.Program>): T.Identifier {\n  return program.scope.generateUidIdentifier(name)\n}\n\nfunction getParentJSX(path: NodePath): NodePath<T.JSXOpeningElement> {\n  return path.findParent(p =>\n    p.isJSXOpeningElement()\n  ) as NodePath<T.JSXOpeningElement>\n}\n\nfunction getAttributeNames(jsxPath: NodePath): string[] {\n  const attributes = jsxPath.get('attributes') as Array<\n    NodePath<T.JSXAttribute>\n  >\n  const attributeNames = attributes.map(p => p.node.name?.name) as string[]\n  return attributeNames\n}\n\nfunction getCssAttributeData<NodeType extends NodePath>(\n  attributes: NodeType[]\n): {\n  index: number\n  hasCssAttribute: boolean\n  attribute: NodeType | undefined\n} {\n  if (!String(attributes))\n    return { index: 0, hasCssAttribute: false, attribute: undefined }\n  const index = attributes.findIndex(\n    attribute =>\n      attribute?.isJSXAttribute() &&\n      ((attribute.get('name.name') as NodePath).node as unknown as string) ===\n        'css'\n  )\n\n  return { index, hasCssAttribute: index >= 0, attribute: attributes[index] }\n}\n\nfunction getFunctionValue(\n  path: NodePath\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): { parent: NodePath; input: any } | undefined {\n  if (path.parent.type !== 'CallExpression') return\n\n  const parent = path.findParent(x => x.isCallExpression())\n  if (!parent) return\n\n  const argument = (parent.get('arguments') as NodePath[])[0] || ''\n\n  return {\n    parent,\n    input: argument.evaluate && (argument.evaluate().value as string),\n  }\n}\n\nfunction getTaggedTemplateValue<Path extends NodePath>(\n  path: Path\n): { parent: NodePath<T.TaggedTemplateExpression>; input: string } | undefined {\n  if (path.parent.type !== 'TaggedTemplateExpression') return\n\n  const parent = path.findParent(x =>\n    x.isTaggedTemplateExpression()\n  ) as NodePath<T.TaggedTemplateExpression>\n  if (!parent) return\n\n  if (parent.node.tag.type !== 'Identifier') return\n\n  return { parent, input: parent.get('quasi').evaluate().value as string }\n}\n\nfunction getMemberExpression(\n  path: NodePath\n): { parent: NodePath; input: string } | undefined {\n  if (path.parent.type !== 'MemberExpression') return\n\n  const parent = path.findParent(x =>\n    x.isMemberExpression()\n  ) as NodePath<T.MemberExpression>\n  if (!parent) return\n\n  return {\n    parent,\n    // @ts-expect-error name doesn't exist on node\n    input: parent.get('property').node.name as string,\n  }\n}\n\nfunction generateTaggedTemplateExpression({\n  t,\n  identifier,\n  styles,\n}: {\n  t: typeof T\n  identifier: T.Identifier\n  styles: string | undefined\n}): T.TaggedTemplateExpression {\n  const backtickStyles = t.templateElement({\n    raw: `${styles ?? ''}`,\n    cooked: `${styles ?? ''}`,\n  })\n  const ttExpression = t.taggedTemplateExpression(\n    identifier,\n    t.templateLiteral([backtickStyles], [])\n  )\n  return ttExpression\n}\n\nfunction isComponent(name: string): boolean {\n  return name.slice(0, 1).toUpperCase() === name.slice(0, 1)\n}\n\nconst jsxSingleDotError = `The css prop + tw props can only be added to jsx elements with a single dot in their name (or no dot at all).`\n\nfunction getFirstStyledArgument(\n  jsxPath: NodePath<T.JSXOpeningElement>,\n  t: typeof T,\n  assert: CoreContext['assert']\n): T.MemberExpression | T.Identifier | T.StringLiteral {\n  const path = get(jsxPath, 'node.name.name') as string\n\n  if (path)\n    return isComponent(path) ? t.identifier(path) : t.stringLiteral(path)\n\n  const dotComponent = get(jsxPath, 'node.name') as string\n  assert(Boolean(dotComponent), () => jsxSingleDotError)\n\n  // Element name has dots in it\n  const objectName = get(dotComponent, 'object.name') as string\n  assert(Boolean(objectName), () => jsxSingleDotError)\n\n  const propertyName = get(dotComponent, 'property.name') as string\n  assert(Boolean(propertyName), () => jsxSingleDotError)\n\n  return t.memberExpression(\n    t.identifier(objectName),\n    t.identifier(propertyName)\n  )\n}\n\ntype MakeStyledComponent = {\n  t: typeof T\n  secondArg: T.Expression | T.StringLiteral | T.Identifier\n  jsxPath: NodePath<T.JSXOpeningElement>\n  program: NodePath<T.Program>\n  state: State\n  coreContext: CoreContext\n}\n\nfunction makeStyledComponent({\n  t,\n  secondArg,\n  jsxPath,\n  program,\n  state,\n  coreContext,\n}: MakeStyledComponent): void {\n  const constName = program.scope.generateUidIdentifier('TwComponent')\n\n  if (!state.styledIdentifier) {\n    state.styledIdentifier = generateUid('styled', program)\n    state.isImportingStyled = true\n  }\n\n  const firstArg = getFirstStyledArgument(jsxPath, t, coreContext.assert)\n\n  const args = [firstArg, secondArg].filter(Boolean)\n  const identifier = t.callExpression(state.styledIdentifier, args)\n  const styledProps = [t.variableDeclarator(constName, identifier)]\n  const styledDefinition = t.variableDeclaration('const', styledProps)\n\n  const rootParentPath = jsxPath.findParent(p =>\n    p.parentPath ? p.parentPath.isProgram() : false\n  ) as NodePath<T.Program>\n  if (rootParentPath) rootParentPath.insertBefore(styledDefinition)\n\n  if (t.isMemberExpression(firstArg)) {\n    // Replace components with a dot, eg: Dialog.blah\n    const id = t.jsxIdentifier(constName.name)\n    jsxPath.get('name').replaceWith(id)\n    if (jsxPath.node.selfClosing) return\n    ;(jsxPath.parentPath.get('closingElement.name') as NodePath).replaceWith(id)\n  } else {\n    ;(jsxPath.node.name as T.JSXIdentifier).name = constName.name\n    if (jsxPath.node.selfClosing) return\n    // @ts-expect-error Untyped name replacement\n    jsxPath.parentPath.node.closingElement.name.name = constName.name\n  }\n}\n\nfunction getJsxAttributes(\n  path: NodePath<T.JSXElement>\n): Array<NodePath<T.JSXAttribute>> {\n  const attributes = path.get('openingElement.attributes') as Array<\n    NodePath<T.JSXAttribute>\n  >\n  return attributes.filter(a => a.isJSXAttribute())\n}\n\nexport {\n  addImport,\n  astify,\n  parseTte,\n  replaceWithLocation,\n  setStyledIdentifier,\n  setCssIdentifier,\n  generateUid,\n  getParentJSX,\n  getAttributeNames,\n  getCssAttributeData,\n  getFunctionValue,\n  getTaggedTemplateValue,\n  getMemberExpression,\n  generateTaggedTemplateExpression,\n  makeStyledComponent,\n  getJsxAttributes,\n}\n","import type { CoreContext, MacroParams } from 'macro/types'\n\nconst validImports = new Set([\n  'default',\n  'styled',\n  'css',\n  'theme',\n  'screen',\n  'TwStyle',\n  'TwComponent',\n  'ThemeStyle',\n  'GlobalStyles',\n  'globalStyles',\n])\n\nexport default function validateImports(\n  imports: MacroParams['references'],\n  coreContext: CoreContext\n): void {\n  const importTwAsNamedNotDefault = Object.keys(imports).find(\n    reference => reference === 'tw'\n  )\n  coreContext.assert(\n    !importTwAsNamedNotDefault,\n    ({ color }) =>\n      `${color(\n        `✕ import { tw } from 'twin.macro'`\n      )}\\n\\nUse the default export for \\`tw\\`:\\n\\n${color(\n        `import tw from 'twin.macro'`,\n        'success'\n      )}`\n  )\n\n  const unsupportedImport = Object.keys(imports).find(\n    reference => !validImports.has(reference)\n  )\n  coreContext.assert(\n    !unsupportedImport,\n    ({ color }) =>\n      `${color(\n        `✕ Twin doesn't recognize { ${String(unsupportedImport)} }`\n      )}\\n\\nTry one of these imports:\\n\\nimport ${color(\n        'tw',\n        'success'\n      )}, { ${color('styled', 'success')}, ${color('css', 'success')}, ${color(\n        'theme',\n        'success'\n      )}, ${color('screen', 'success')}, ${color(\n        'GlobalStyles',\n        'success'\n      )}, ${color('globalStyles', 'success')} } from 'twin.macro'`\n  )\n}\n","function isEmpty(value: unknown): boolean {\n  return (\n    value === undefined ||\n    value === null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0)\n  )\n}\n\nexport default isEmpty\n","import { addImport, makeStyledComponent } from './lib/astHelpers'\nimport isEmpty from './lib/util/isEmpty'\nimport type {\n  T,\n  AdditionalHandlerParameters,\n  HandlerParameters,\n  NodePath,\n} from './types'\n\nfunction updateCssReferences({\n  references,\n  state,\n}: AdditionalHandlerParameters): void {\n  if (state.existingCssIdentifier) return\n\n  const cssReferences = references.css\n  if (isEmpty(cssReferences)) return\n\n  cssReferences.forEach(path => {\n    // @ts-expect-error Setting value on target\n    path.node.name = state.cssIdentifier.name\n  })\n}\n\nfunction addCssImport({\n  references,\n  program,\n  t,\n  state,\n  coreContext,\n}: AdditionalHandlerParameters): void {\n  if (!state.isImportingCss) {\n    const shouldImport =\n      !isEmpty(references.css) && !state.existingCssIdentifier\n    if (!shouldImport) return\n  }\n\n  if (state.existingCssIdentifier) return\n  if (!coreContext.importConfig.css) return\n\n  addImport({\n    types: t,\n    program,\n    name: coreContext.importConfig.css.import,\n    mod: coreContext.importConfig.css.from,\n    identifier: state.cssIdentifier,\n  })\n}\n\nfunction convertHtmlElementToStyled(\n  params: HandlerParameters & { path: NodePath<T.JSXElement> }\n): void {\n  const { path, t, coreContext } = params\n  if (!coreContext.twinConfig.convertHtmlElementToStyled) return\n\n  const jsxPath = path.get('openingElement')\n\n  makeStyledComponent({\n    ...params,\n    jsxPath,\n    secondArg: t.objectExpression([]),\n  })\n}\n\nexport { updateCssReferences, addCssImport, convertHtmlElementToStyled }\n","import { addImport, replaceWithLocation } from './lib/astHelpers'\nimport isEmpty from './lib/util/isEmpty'\nimport get from './lib/util/get'\nimport type { T, NodePath, AdditionalHandlerParameters } from './types'\n\nfunction updateStyledReferences({\n  references,\n  state,\n}: AdditionalHandlerParameters): void {\n  if (state.existingStyledIdentifier) return\n\n  const styledReferences = references.styled\n  if (isEmpty(styledReferences)) return\n\n  styledReferences.forEach(path => {\n    // @ts-expect-error Setting values is untyped\n    path.node.name = state.styledIdentifier.name\n  })\n}\n\nfunction addStyledImport({\n  references,\n  program,\n  t,\n  state,\n  coreContext,\n}: AdditionalHandlerParameters): void {\n  if (!state.isImportingStyled) {\n    const shouldImport =\n      !isEmpty(references.styled) && !state.existingStyledIdentifier\n    if (!shouldImport) return\n  }\n\n  if (state.existingStyledIdentifier) return\n\n  addImport({\n    types: t,\n    program,\n    name: coreContext.importConfig.styled.import,\n    mod: coreContext.importConfig.styled.from,\n    identifier: state.styledIdentifier,\n  })\n}\n\nfunction moveDotElementToParam({\n  path,\n  t,\n}: {\n  path: NodePath\n  t: typeof T\n}): void {\n  if (path.parent.type !== 'MemberExpression') return\n\n  const parentCallExpression = path.findParent(x =>\n    x.isCallExpression()\n  ) as NodePath<T.CallExpression>\n  if (!parentCallExpression) return\n\n  const styledName = get(path, 'parentPath.node.property.name') as string\n  const styledArgs = get(parentCallExpression, 'node.arguments.0') as\n    | T.Expression\n    | T.SpreadElement\n    | T.JSXNamespacedName\n    | T.ArgumentPlaceholder\n  const args = [t.stringLiteral(styledName), styledArgs].filter(Boolean)\n  const replacement = t.callExpression(\n    (path as NodePath<T.Expression>).node,\n    args\n  )\n\n  replaceWithLocation(parentCallExpression, replacement)\n}\n\nfunction handleStyledFunction({\n  references,\n  t,\n  coreContext,\n}: AdditionalHandlerParameters): void {\n  if (!coreContext.twinConfig.convertStyledDot) return\n  if (isEmpty(references)) return\n\n  const defaultRefs = references.default || []\n  const styledRefs = references.styled || []\n\n  ;[...defaultRefs, ...styledRefs]\n    .filter(Boolean)\n    .forEach((path: NodePath): void => {\n      // convert tw.div`` & styled.div`` to styled('div', {})\n      moveDotElementToParam({ path, t })\n    })\n}\n\nexport { updateStyledReferences, addStyledImport, handleStyledFunction }\n","import {\n  replaceWithLocation,\n  astify,\n  getFunctionValue,\n  getTaggedTemplateValue,\n} from './lib/astHelpers'\nimport type { AssertContext } from 'core/types'\nimport type { AdditionalHandlerParameters, NodePath } from 'macro/types'\n\nfunction handleThemeFunction({\n  references,\n  t,\n  coreContext,\n}: AdditionalHandlerParameters): void {\n  if (!references.theme) return\n\n  references.theme.forEach((path): never[] | [Node | NodePath] => {\n    const ttValue = getTaggedTemplateValue(path) ??\n      getFunctionValue(path) ?? { input: null, parent: null }\n\n    const { input, parent } = ttValue as {\n      parent: NodePath\n      input?: string\n    }\n\n    if (input !== '')\n      coreContext.assert(\n        Boolean(input),\n        ({ color }: AssertContext) =>\n          `${color(`✕ The theme value doesn’t look right`)}\\n\\nTry ${color(\n            'theme`colors.black`',\n            'success'\n          )} or ${color(`theme('colors.black')`, 'success')}`\n      )\n\n    coreContext.assert(\n      Boolean(parent),\n      ({ color }: AssertContext) =>\n        `${color(\n          `✕ The theme value ${color(\n            input as string,\n            'errorLight'\n          )} doesn’t look right`\n        )}\\n\\nTry ${color('theme`colors.black`', 'success')} or ${color(\n          `theme('colors.black')`,\n          'success'\n        )}`\n    )\n\n    const themeValue = coreContext.theme(input as string)\n\n    coreContext.assert(Boolean(themeValue), ({ color }: AssertContext) =>\n      color(\n        `✕ ${color(\n          input as string,\n          'errorLight'\n        )} doesn’t match a theme value from the config`\n      )\n    )\n\n    return replaceWithLocation(parent, astify(themeValue, t))\n  })\n}\n\nexport { handleThemeFunction }\n","import {\n  replaceWithLocation,\n  astify,\n  getFunctionValue,\n  getTaggedTemplateValue,\n  getMemberExpression,\n} from './lib/astHelpers'\nimport type {\n  AdditionalHandlerParameters,\n  T,\n  NodePath,\n  CoreContext,\n} from './types'\n\ntype GetDirectReplacement = Pick<\n  HandleDefinition,\n  'mediaQuery' | 'parent' | 't'\n>\nfunction getDirectReplacement({\n  mediaQuery,\n  parent,\n  t,\n}: GetDirectReplacement): Expression {\n  return {\n    newPath: parent,\n    replacement: astify(mediaQuery, t),\n  }\n}\n\ntype Expression = {\n  newPath: NodePath\n  replacement: T.TemplateLiteral | T.ObjectExpression | T.Expression\n}\n\ntype HandleDefinition = {\n  mediaQuery: string\n  parent: NodePath\n  type: string\n  t: typeof T\n}\n\nfunction handleDefinition({\n  mediaQuery,\n  parent,\n  type,\n  t,\n}: HandleDefinition): undefined | (() => Expression) {\n  return {\n    TaggedTemplateExpression(): {\n      newPath: NodePath\n      replacement: T.TemplateLiteral\n    } {\n      const newPath = parent.findParent(x =>\n        x.isTaggedTemplateExpression()\n      ) as NodePath<T.TaggedTemplateExpression>\n      const query = [`${mediaQuery} { `, ` }`]\n      const quasis = [\n        t.templateElement({ raw: query[0], cooked: query[0] }, false),\n        t.templateElement({ raw: query[1], cooked: query[1] }, true),\n      ]\n      const expressions = [newPath.get('quasi').node]\n      const replacement = t.templateLiteral(quasis, expressions)\n      return { newPath, replacement }\n    },\n    CallExpression(): { newPath: NodePath; replacement: T.ObjectExpression } {\n      const newPath = parent.findParent(x =>\n        x.isCallExpression()\n      ) as NodePath<T.CallExpression>\n      const value = newPath.get('arguments')[0].node as T.Expression\n      const replacement = t.objectExpression([\n        t.objectProperty(t.stringLiteral(mediaQuery), value),\n      ])\n      return { newPath, replacement }\n    },\n    ObjectProperty(): Expression {\n      // Remove brackets around keys so merges work with tailwind screens\n      // styled.div({ [screen`2xl`]: tw`block`, ...tw`2xl:inline` })\n      // https://github.com/ben-rogerson/twin.macro/issues/379\n      // @ts-expect-error unsure of parent type\n      parent.parent.computed = false\n\n      return getDirectReplacement({ mediaQuery, parent, t })\n    },\n    ExpressionStatement: () => getDirectReplacement({ mediaQuery, parent, t }),\n    ArrowFunctionExpression: () =>\n      getDirectReplacement({ mediaQuery, parent, t }),\n    ArrayExpression: () => getDirectReplacement({ mediaQuery, parent, t }),\n    BinaryExpression: () => getDirectReplacement({ mediaQuery, parent, t }),\n    LogicalExpression: () => getDirectReplacement({ mediaQuery, parent, t }),\n    ConditionalExpression: () =>\n      getDirectReplacement({ mediaQuery, parent, t }),\n    VariableDeclarator: () => getDirectReplacement({ mediaQuery, parent, t }),\n    TemplateLiteral: () => getDirectReplacement({ mediaQuery, parent, t }),\n    TSAsExpression: () => getDirectReplacement({ mediaQuery, parent, t }),\n  }[type]\n}\n\nfunction getMediaQuery({\n  input,\n  screens,\n  assert,\n}: {\n  input: string | string[]\n  screens: Record<\n    string,\n    | string\n    | { raw?: string; min?: string; max?: string }\n    | Array<{ raw?: string; min?: string; max?: string }>\n  >\n  assert: CoreContext['assert']\n}): string {\n  const _input =\n    typeof input === 'string' ? input.split(',').map(s => s.trim()) : input\n\n  const _screens = _input.map(s => screens[s])\n\n  _input.forEach(i => {\n    assert(\n      Boolean(screens[i]),\n      ({ color }) =>\n        `${color(\n          `${\n            input\n              ? `✕ ${color(i, 'errorLight')} wasn’t found in your`\n              : 'Specify a screen value from your'\n          } tailwind config`\n        )}\\n\\nTry one of these values:\\n\\n${Object.entries(screens)\n          .map(\n            ([k, v]) =>\n              `${color('-', 'subdued')} screen(${color(\n                `'${k}'`,\n                'success'\n              )})({ ... }) (${String(v)})`\n          )\n          .join('\\n')}`\n    )\n  })\n\n  const mediaQuery = _screens\n    .map(screen => {\n      if (typeof screen === 'string') {\n        return '(min-width: ' + screen + ')'\n      }\n\n      if (!Array.isArray(screen) && typeof screen.raw === 'string') {\n        return screen.raw\n      }\n\n      return (Array.isArray(screen) ? screen : [screen])\n        .map(range =>\n          [\n            typeof range.min === 'string' ? `(min-width: ${range.min} )` : null,\n            typeof range.max === 'string' ? `(max-width: ${range.max}) ` : null,\n          ]\n            .filter(Boolean)\n            .join(' and ')\n        )\n        .join(', ')\n    })\n    .join(', ')\n\n  return mediaQuery ? '@media ' + mediaQuery : ''\n}\n\nfunction handleScreenFunction({\n  references,\n  t,\n  coreContext,\n}: AdditionalHandlerParameters): void {\n  if (!references.screen) return\n\n  const screens = coreContext.theme('screens') as Record<string, string>\n\n  references.screen.forEach(path => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const { input, parent } = getTaggedTemplateValue(path) ?? // screen.lg``\n      getFunctionValue(path) ?? // screen.lg({ })\n      getMemberExpression(path) ?? {\n        // screen`lg`\n        input: null,\n        parent: null,\n      }\n\n    const definition = handleDefinition({\n      type: (parent as NodePath).parent.type,\n      mediaQuery: getMediaQuery({\n        input: input as string,\n        screens,\n        assert: coreContext.assert,\n      }),\n      parent: parent as NodePath,\n      t,\n    })\n\n    coreContext.assert(\n      Boolean(definition),\n      ({ color }) =>\n        `${color(\n          `✕ The screen import doesn’t support that syntax`\n        )}\\n\\nTry using it like this: ${color(\n          [Object.keys(screens)[0]].map(f => `screen(\"${f}\")`).join(''),\n          'success'\n        )}`\n    )\n\n    const { newPath, replacement } = (definition as () => Expression)()\n\n    replaceWithLocation(newPath, replacement)\n  })\n}\n\nexport { handleScreenFunction }\n","// eslint-disable-next-line import/no-relative-parent-imports\nimport { getGlobalStyles } from '../core'\nimport template from '@babel/template'\nimport {\n  addImport,\n  generateUid,\n  generateTaggedTemplateExpression,\n} from './lib/astHelpers'\nimport type {\n  CoreContext,\n  AdditionalHandlerParameters,\n  NodePath,\n  State,\n  T,\n  CssObject,\n} from './types'\n\nconst KEBAB_CANDIDATES = /([\\da-z]|(?=[A-Z]))([A-Z])/g\n\ntype AddGlobalStylesImport = {\n  program: NodePath<T.Program>\n  t: typeof T\n  identifier: T.Identifier\n  coreContext: CoreContext\n}\n\nfunction addGlobalStylesImport({\n  program,\n  t,\n  identifier,\n  coreContext,\n}: AddGlobalStylesImport): void {\n  addImport({\n    types: t,\n    program,\n    identifier,\n    name: coreContext.importConfig.global.import,\n    mod: coreContext.importConfig.global.from,\n  })\n}\n\nexport type DeclarationParameters = {\n  t: typeof T\n  state: State\n  globalUid: T.Identifier\n  stylesUid: T.Identifier\n  styles: string | undefined\n}\n\nfunction getGlobalDeclarationTte({\n  t,\n  stylesUid,\n  globalUid,\n  styles,\n}: DeclarationParameters): T.VariableDeclaration {\n  return t.variableDeclaration('const', [\n    t.variableDeclarator(\n      globalUid,\n      generateTaggedTemplateExpression({ t, identifier: stylesUid, styles })\n    ),\n  ])\n}\n\nfunction getGlobalDeclarationProperty(\n  params: DeclarationParameters\n): T.VariableDeclaration {\n  const { t, stylesUid, globalUid, state, styles } = params\n\n  const ttExpression = generateTaggedTemplateExpression({\n    t,\n    identifier: state.cssIdentifier as T.Identifier,\n    styles,\n  })\n\n  const openingElement = t.jsxOpeningElement(\n    t.jsxIdentifier(stylesUid.name),\n    [\n      t.jsxAttribute(\n        t.jsxIdentifier('styles'),\n        t.jsxExpressionContainer(ttExpression)\n      ),\n    ],\n    true\n  )\n\n  const closingElement = t.jsxClosingElement(t.jsxIdentifier('close'))\n\n  const arrowFunctionExpression = t.arrowFunctionExpression(\n    [],\n    t.jsxElement(openingElement, closingElement, [], true)\n  )\n\n  const code = t.variableDeclaration('const', [\n    t.variableDeclarator(globalUid, arrowFunctionExpression),\n  ])\n\n  return code\n}\n\nfunction kebabize(string: string): string {\n  return string.replace(KEBAB_CANDIDATES, '$1-$2').toLowerCase()\n}\n\nfunction convert(k: string, v: string | number): string {\n  return typeof v === 'string'\n    ? `  ${kebabize(k)}: ${v};`\n    : `${k} {\n${convertCssObjectToString(v)}\n}`\n}\n\nfunction convertCssObjectToString(\n  cssObject: CssObject | string | number | undefined\n): string {\n  if (!cssObject) return ''\n  return Object.entries(cssObject)\n    .map(([k, v]) => convert(k, v))\n    .join('\\n')\n}\n\nfunction handleGlobalStylesFunction(params: AdditionalHandlerParameters): void {\n  const { references } = params\n  if (references.GlobalStyles) handleGlobalStylesJsx(params)\n  if (references.globalStyles) handleGlobalStylesVariable(params)\n}\n\nfunction handleGlobalStylesVariable(params: AdditionalHandlerParameters): void {\n  const { references } = params\n  if (references.globalStyles.length === 0) return\n\n  const styles = getGlobalStyles(params.coreContext)\n\n  references.globalStyles.forEach(path => {\n    const templateStyles = `(${JSON.stringify(styles)})` // `template` requires () wrapping\n    const convertedStyles = template(templateStyles, {\n      placeholderPattern: false,\n    })()\n\n    path.replaceWith(convertedStyles as NodePath)\n  })\n}\n\nfunction handleGlobalStylesJsx(params: AdditionalHandlerParameters): void {\n  const { references, program, t, state, coreContext } = params\n  if (references.GlobalStyles.length === 0) return\n\n  coreContext.assert(\n    references.GlobalStyles.length < 2,\n    ({ color }) =>\n      `${color(\n        `✕ Only one <GlobalStyles /> can be added per file`\n      )}\\n\\nNeed something custom?\\nUse the \\`globalStyles\\` import for a style object you can work with`\n  )\n\n  const path = references.GlobalStyles[0]\n  const parentPath = path.findParent(x => x.isJSXElement())\n\n  coreContext.assert(\n    Boolean(parentPath),\n    ({ color }) =>\n      `${color(\n        `✕ The \\`GlobalStyles\\` import must be added as a JSX element`\n      )}\\neg: \\`<GlobalStyles />\\`\\n\\nNeed something custom?\\nUse the \\`globalStyles\\` import for a style object you can work with`\n  )\n\n  const globalStyles = getGlobalStyles(params.coreContext)\n\n  const styles = convertCssObjectToString(globalStyles)\n\n  const globalUid = generateUid('GlobalStyles', program)\n  const stylesUid = generateUid('globalImport', program)\n  const declarationData = { t, globalUid, stylesUid, styles, state }\n\n  if (coreContext.packageUsed.isStyledComponents) {\n    const declaration = getGlobalDeclarationTte(declarationData)\n    program.unshiftContainer('body', declaration)\n    path.replaceWith(t.jSXIdentifier(globalUid.name))\n  }\n\n  if (coreContext.packageUsed.isEmotion) {\n    const declaration = getGlobalDeclarationProperty(declarationData)\n    program.unshiftContainer('body', declaration)\n    path.replaceWith(t.jSXIdentifier(globalUid.name))\n    // Check if the css import has already been imported\n    // https://github.com/ben-rogerson/twin.macro/issues/313\n    state.isImportingCss = !state.existingCssIdentifier\n  }\n\n  if (coreContext.packageUsed.isGoober) {\n    const declaration = getGlobalDeclarationTte(declarationData)\n    program.unshiftContainer('body', declaration)\n    path.replaceWith(t.jSXIdentifier(globalUid.name))\n  }\n\n  coreContext.assert(\n    Boolean(!coreContext.packageUsed.isStitches),\n    ({ color }) =>\n      `${color(\n        `✕ The ${color(\n          'GlobalStyles',\n          'errorLight'\n        )} import can’t be used with stitches`\n      )}\\n\\nUse the ${color(`globalStyles`, 'success')} import instead`\n  )\n\n  addGlobalStylesImport({\n    identifier: stylesUid,\n    t,\n    program,\n    coreContext,\n  })\n}\n\nexport { handleGlobalStylesFunction }\n","module.exports = {\n\tcompareTwoStrings:compareTwoStrings,\n\tfindBestMatch:findBestMatch\n};\n\nfunction compareTwoStrings(first, second) {\n\tfirst = first.replace(/\\s+/g, '')\n\tsecond = second.replace(/\\s+/g, '')\n\n\tif (first === second) return 1; // identical or empty\n\tif (first.length < 2 || second.length < 2) return 0; // if either is a 0-letter or 1-letter string\n\n\tlet firstBigrams = new Map();\n\tfor (let i = 0; i < first.length - 1; i++) {\n\t\tconst bigram = first.substring(i, i + 2);\n\t\tconst count = firstBigrams.has(bigram)\n\t\t\t? firstBigrams.get(bigram) + 1\n\t\t\t: 1;\n\n\t\tfirstBigrams.set(bigram, count);\n\t};\n\n\tlet intersectionSize = 0;\n\tfor (let i = 0; i < second.length - 1; i++) {\n\t\tconst bigram = second.substring(i, i + 2);\n\t\tconst count = firstBigrams.has(bigram)\n\t\t\t? firstBigrams.get(bigram)\n\t\t\t: 0;\n\n\t\tif (count > 0) {\n\t\t\tfirstBigrams.set(bigram, count - 1);\n\t\t\tintersectionSize++;\n\t\t}\n\t}\n\n\treturn (2.0 * intersectionSize) / (first.length + second.length - 2);\n}\n\nfunction findBestMatch(mainString, targetStrings) {\n\tif (!areArgsValid(mainString, targetStrings)) throw new Error('Bad arguments: First argument should be a string, second should be an array of strings');\n\t\n\tconst ratings = [];\n\tlet bestMatchIndex = 0;\n\n\tfor (let i = 0; i < targetStrings.length; i++) {\n\t\tconst currentTargetString = targetStrings[i];\n\t\tconst currentRating = compareTwoStrings(mainString, currentTargetString)\n\t\tratings.push({target: currentTargetString, rating: currentRating})\n\t\tif (currentRating > ratings[bestMatchIndex].rating) {\n\t\t\tbestMatchIndex = i\n\t\t}\n\t}\n\t\n\t\n\tconst bestMatch = ratings[bestMatchIndex]\n\t\n\treturn { ratings: ratings, bestMatch: bestMatch, bestMatchIndex: bestMatchIndex };\n}\n\nfunction areArgsValid(mainString, targetStrings) {\n\tif (typeof mainString !== 'string') return false;\n\tif (!Array.isArray(targetStrings)) return false;\n\tif (!targetStrings.length) return false;\n\tif (targetStrings.find( function (s) { return typeof s !== 'string'})) return false;\n\treturn true;\n}\n","import stringSimilarity from 'string-similarity'\nimport type { ClassErrorContext } from 'suggestions/types'\n\nexport function validateVariants(\n  variantMatch: string,\n  context: ClassErrorContext\n): string | undefined {\n  if (!variantMatch) return\n  if (variantMatch.startsWith('[')) return\n\n  const variantCandidates = [...context.variants]\n\n  // Exact variant match\n  if (variantCandidates.includes(variantMatch)) return\n\n  const results = variantCandidates\n    .map((variant: string): [string, number] | undefined => {\n      const rating = variantMatch\n        ? Number(stringSimilarity.compareTwoStrings(variant, variantMatch))\n        : 0\n      if (rating < 0.2) return\n\n      return [variant, rating]\n    })\n    .filter(Boolean) as Array<[string, number]>\n\n  const errorText = `${context.color(\n    `✕ Variant ${context.color(`${variantMatch}`, 'errorLight')} was not found`,\n    'error'\n  )}`\n\n  if (results.length === 0) return errorText\n\n  const suggestions = results\n    .sort(([, a]: [string, number], [, b]: [string, number]) => b - a)\n    .slice(0, 4)\n    .map(\n      ([i]: [string, number]): string =>\n        `${i}${context.tailwindConfig.separator ?? ':'}`\n    )\n\n  const showMore = results.length > 2 && results[0][1] - results[1][1] < 0.1\n\n  const suggestionText =\n    suggestions.length > 0\n      ? [\n          `Did you mean ${context.color(\n            suggestions.slice(0, 1).join(''),\n            'success'\n          )} ?`,\n          showMore &&\n            `More variants\\n${suggestions\n              .slice(1)\n              .map(v => `${context.color('-', 'subdued')} ${v}`)\n              .join('\\n')}`,\n        ]\n          .filter(Boolean)\n          .join('\\n\\n')\n      : ''\n\n  return [errorText, suggestionText].join('\\n\\n')\n}\n","import { validateVariants } from './validateVariants'\nimport type { ClassErrorContext } from 'suggestions/types'\n\nconst validators = [\n  // Validate the group class\n  (pieces: string[], context: ClassErrorContext): undefined | string => {\n    const className = pieces.slice(-1).join('')\n\n    if (/^!?group\\/\\S/.test(className)) {\n      return `${context.color(\n        `✕ ${context.color(\n          className,\n          'errorLight'\n        )} must be added as a className:`,\n        'error'\n      )}\\n\\n<div ${context.color(\n        `className=\"${className}\"`,\n        'success'\n      )}>\\n <div tw=\"group-hover/${String(\n        /\\/(\\w+)$/.exec(className)?.[1]\n      )}:bg-black\" />\\n</div>`\n    }\n\n    if (!pieces.includes('group')) return\n    return `${context.color(\n      `✕ ${context.color('group', 'errorLight')} must be added as a className:`,\n      'error'\n    )}\\n\\n<div ${context.color(\n      'className=\"group\"',\n      'success'\n    )}>\\n <div tw=\"group-hover:bg-black\" />\\n</div>\\n\\nRead more at https://twinredirect.page.link/group`\n  },\n  // Validate the peer class\n  (pieces: string[], context: ClassErrorContext): undefined | string => {\n    const className = pieces.slice(-1).join('')\n\n    if (/^!?peer\\/\\S/.test(className)) {\n      return `${context.color(\n        `✕ ${context.color(\n          className,\n          'errorLight'\n        )} must be added as a className:`,\n        'error'\n      )}\\n\\n<div ${context.color(\n        `className=\"${className}\"`,\n        'success'\n      )}>\\n <div tw=\"peer-hover/${String(\n        /\\/(\\w+)$/.exec(className)?.[1]\n      )}:bg-black\" />\\n</div>`\n    }\n\n    if (!pieces.includes('peer')) return\n    return `${context.color(\n      `✕ ${context.color('peer', 'errorLight')} must be added as a className:`,\n      'error'\n    )}\\n\\n<div ${context.color(\n      'className=\"peer\"',\n      'success'\n    )}>\\n<div tw=\"peer-hover:bg-black\" />\\n\\nRead more at https://twinredirect.page.link/peer`\n  },\n  // Validate the opacity\n  (pieces: string[], context: ClassErrorContext): undefined | string => {\n    const className = pieces.slice(-1).join('')\n    const opacityMatch = /\\/(\\w+)$/.exec(className)\n    if (!opacityMatch) return\n\n    const opacityConfig = context.tailwindConfig.theme?.opacity ?? {}\n    if (opacityConfig[opacityMatch[1] as keyof typeof opacityConfig]) return\n\n    const choices = Object.entries(opacityConfig)\n      .map(\n        ([k, v]: [string, string]): string =>\n          `${context.color('-', 'subdued')} ${context.color(\n            k,\n            'success'\n          )} ${context.color('>', 'subdued')} ${v}`\n      )\n      .join('\\n')\n    return `${context.color(\n      `✕ ${context.color(\n        className,\n        'errorLight'\n      )} doesn’t have an opacity from your config`,\n      'error'\n    )}\\n\\nTry one of these opacity values:\\n\\n${choices}`\n  },\n  // Validate the lead class (from the official typography plugin)\n  (pieces: string[], context: ClassErrorContext): undefined | string => {\n    if (!pieces.includes('lead')) return\n    return `${context.color(\n      `✕ ${context.color('lead', 'errorLight')} must be added as a className:`,\n      'error'\n    )}\\n\\n<div ${context.color('className=\"lead\"', 'success')}>...</div>`\n  },\n  // Validate the not-prose class (from the official typography plugin)\n  (pieces: string[], context: ClassErrorContext): undefined | string => {\n    if (!pieces.includes('not-prose')) return\n    return `${context.color(\n      `✕ ${context.color(\n        'not-prose',\n        'errorLight'\n      )} must be added as a className:`,\n      'error'\n    )}\\n\\n<div tw=\"prose\">\\n <div ${context.color(\n      'className=\"not-prose\"',\n      'success'\n    )}>...</div>\\n</div>`\n  },\n  // Validate the dark class\n  (pieces: string[], context: ClassErrorContext): undefined | string => {\n    const className = pieces.slice(-1).join('')\n    if (className !== 'dark') return\n    return `${context.color(\n      `✕ ${context.color('dark', 'errorLight')} must be added as a className:`,\n      'error'\n    )}\\n\\nAdd dark in a ${context.color(\n      'className',\n      'success'\n    )}:\\n<body ${context.color(\n      'className=\"dark\"',\n      'success'\n    )}>...</body>\\n\\nOr as a ${context.color(\n      'variant',\n      'success'\n    )}:\\n<div tw=\"${context.color(\n      'dark',\n      'success'\n    )}:(bg-white text-black)\" />\\n\\nRead more at https://twinredirect.page.link/darkLightMode`\n  },\n  // Validate the light class\n  (pieces: string[], context: ClassErrorContext): undefined | string => {\n    const className = pieces.slice(-1).join('')\n    if (className !== 'light') return\n    return `${context.color(\n      `✕ ${context.color('light', 'errorLight')} must be added as a className:`,\n      'error'\n    )}\\n\\nAdd light in a ${context.color(\n      'className',\n      'success'\n    )}:\\n<body ${context.color(\n      'className=\"light\"',\n      'success'\n    )}>...</body>\\n\\nOr as a ${context.color(\n      'variant',\n      'success'\n    )}:\\n<div tw=\"${context.color(\n      'light',\n      'success'\n    )}:(bg-white text-black)\" />\\n\\nRead more at https://twinredirect.page.link/darkLightMode`\n  },\n  // Validate any variants\n  (pieces: string[], context: ClassErrorContext): undefined | string => {\n    const variants = pieces.slice(0, -1)\n    const variantError = variants\n      .map(variant => validateVariants(variant, context))\n      .filter(Boolean)\n    if (variantError.length === 0) return\n    return variantError[0] as string\n  },\n  // If prefix is set, validate the class for the prefix\n  (pieces: string[], context: ClassErrorContext): undefined | string => {\n    const { prefix } = context.tailwindConfig\n    const className = pieces.slice(-1).join('')\n    if (prefix && !className.startsWith(prefix))\n      return `${context.color(\n        `✕ ${context.color(\n          className,\n          'errorLight'\n        )} doesn’t have the right prefix`,\n        'error'\n      )}\\n\\nAdd the ${context.color(prefix, 'success')} prefix to the class`\n  },\n]\n\nexport { validators }\n","import stringSimilarity from 'string-similarity'\nimport type { ClassErrorContext } from 'suggestions/types'\n\nconst RATING_MINIMUM = 0.2\n\ntype RateCandidate = [number, string, string]\n\nfunction rateCandidate(\n  classData: [string, string],\n  className: string,\n  matchee: string\n): RateCandidate | undefined {\n  const [classEnd, value] = classData\n\n  const candidate = `${[className, classEnd === 'DEFAULT' ? '' : classEnd]\n    .filter(Boolean)\n    .join('-')}`\n\n  const rating = Number(stringSimilarity.compareTwoStrings(matchee, candidate))\n  if (rating < RATING_MINIMUM) return\n\n  const classValue = `${String(\n    (typeof value === 'string' && (value.length === 0 ? `''` : value)) ??\n      (Array.isArray(value) && value.join(', ')) ??\n      value\n  )}${classEnd === 'DEFAULT' ? ' (DEFAULT)' : ''}`\n\n  return [rating, candidate, classValue]\n}\n\nfunction extractCandidates(\n  candidates: ClassErrorContext['candidates'],\n  matchee: string\n): RateCandidate[] {\n  const results = [] as RateCandidate[]\n\n  for (const [className, classOptionSet] of candidates) {\n    for (const classOption of classOptionSet) {\n      const { options } = classOption[0]\n      if (options?.values) {\n        // Dynamic classes like mt-xxx, bg-xxx\n        for (const value of Object.entries(options?.values)) {\n          const rated = rateCandidate(value, className, matchee)\n          // eslint-disable-next-line max-depth\n          if (rated) results.push(rated)\n        }\n      } else {\n        // Non-dynamic classes like fixed, block\n        const rated = rateCandidate(['', className], className, matchee)\n        if (rated) results.push(rated)\n      }\n    }\n  }\n\n  return results\n}\n\nexport function getClassSuggestions(\n  matchee: string,\n  context: ClassErrorContext\n): string {\n  const { color } = context\n\n  const candidates = extractCandidates(context.candidates, matchee)\n\n  const errorText = `${context.color(\n    `✕ ${context.color(matchee, 'errorLight')} was not found`,\n    'error'\n  )}`\n\n  if (candidates.length === 0) return errorText\n\n  candidates.sort(\n    ([a]: [number, string, string], [b]: [number, string, string]) => b - a\n  )\n\n  const [firstSuggestion, secondSuggestion = []] = candidates\n  const [firstRating, firstCandidate, firstClassValue] = firstSuggestion\n  const [secondRating] = secondSuggestion as RateCandidate\n\n  const hasWinningSuggestion =\n    ((secondSuggestion as RateCandidate).length > 0 &&\n      firstRating - secondRating > 0.12) ??\n    false\n\n  if (candidates.length === 1 || hasWinningSuggestion) {\n    const valueText =\n      firstClassValue === firstCandidate ? '' : ` (${firstClassValue})`\n    return [\n      errorText,\n      `Did you mean ${color(firstCandidate, 'success')} ?${valueText}`,\n    ].join('\\n\\n')\n  }\n\n  const suggestions = candidates\n    .slice(0, context.suggestionNumber)\n    .map(\n      ([, suggestion, value]: [number, string, string]): string =>\n        `${color('-', 'subdued')} ${color(suggestion, 'highlight')} ${\n          value === 'false' ? '' : `${color('>', 'subdued')} ${value}`\n        }`\n    )\n  return [errorText, 'Try one of these classes:', suggestions.join('\\n')].join(\n    '\\n\\n'\n  )\n}\n","import chalk from 'chalk'\n\nconst colors = {\n  error: chalk.hex('#ff8383'),\n  errorLight: chalk.hex('#ffd3d3'),\n  warn: chalk.yellowBright,\n  success: chalk.greenBright,\n  highlight: chalk.yellowBright,\n  subdued: chalk.hex('#999'),\n}\n\nexport default colors\n","import colors from './colors'\nimport type { MakeColor } from 'suggestions/types'\n\nexport function makeColor(hasColor: boolean): MakeColor {\n  return (message: string, type: keyof typeof colors = 'error') => {\n    if (!hasColor) return message\n    return colors[type](message)\n  }\n}\n","import type { TailwindContext, TailwindMatch } from 'suggestions/types'\n\nexport function extractClassCandidates(\n  tailwindContext: TailwindContext\n): Set<[string, TailwindMatch[]]> {\n  const candidates = new Set<[string, TailwindMatch[]]>()\n\n  for (const candidate of tailwindContext.candidateRuleMap) {\n    if (String(candidate[0]) !== '*') candidates.add(candidate)\n  }\n\n  return candidates\n}\n\nexport function extractVariantCandidates(\n  tailwindContext: TailwindContext\n): Set<string> {\n  const candidates = new Set<string>()\n\n  for (const candidate of tailwindContext.variantMap) {\n    if (candidate[0]) candidates.add(candidate[0])\n  }\n\n  return candidates\n}\n","export type JSONPrimitive = string | number | boolean | undefined\nexport type JSONValue = JSONPrimitive | JSONObject\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface JSONObject extends Record<string, JSONValue> {}\nexport function getPackageVersions(): Record<string, string> {\n  // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires, unicorn/prefer-module\n  const packageJson = require('./package.json') as JSONObject\n\n  const versions = { twinVersion: packageJson.version as string }\n\n  return versions\n}\n","import { MacroError } from 'babel-plugin-macros'\nimport { validators } from './lib/validators'\nimport { getClassSuggestions } from './lib/getClassSuggestions'\nimport { makeColor } from './lib/makeColor'\nimport {\n  extractClassCandidates,\n  extractVariantCandidates,\n} from './lib/extractors'\nimport { getPackageVersions } from './lib/getPackageVersions'\nimport type {\n  ClassErrorContext,\n  MakeColor,\n  Options,\n  TailwindContext,\n  TailwindConfig,\n} from './types'\n// eslint-disable-next-line import/no-relative-parent-imports\nimport { createCoreContext, getStyles, splitAtTopLevelOnly } from '../core'\n\nconst ALL_SPACE_IDS = /{{SPACE}}/g\n\nconst OPTION_DEFAULTS = {\n  CustomError: Error,\n  tailwindContext: undefined,\n  tailwindConfig: undefined,\n  hasLogColors: true,\n  suggestionNumber: 5,\n}\n\nfunction getVariantSuggestions(\n  variants: string[],\n  className: string,\n  context: ClassErrorContext\n): string | undefined {\n  const coreContext = createCoreContext({\n    tailwindConfig: context?.tailwindConfig,\n    CustomError: MacroError as typeof Error,\n  })\n  const { unmatched } = getStyles(className, coreContext)\n  if (unmatched.length > 0) return\n\n  const unmatchedVariants = variants.filter(v => {\n    if (v.startsWith('[')) return v\n    return !context.variants.has(v)\n  })\n  if (unmatchedVariants.length === 0) return\n\n  const problemVariant = unmatchedVariants[0]\n  return [\n    `${context.color(\n      `✕ Variant ${context.color(problemVariant, 'errorLight')} ${\n        problemVariant.startsWith('[') ? 'can’t be used' : 'was not found'\n      }`\n    )}`,\n  ].join('\\n\\n')\n}\n\nfunction getClassError(rawClass: string, context: ClassErrorContext): string {\n  const input = rawClass.replace(ALL_SPACE_IDS, ' ')\n\n  const classPieces = [\n    ...splitAtTopLevelOnly(input, context.tailwindConfig.separator ?? ':'),\n  ]\n\n  for (const validator of validators) {\n    const error = validator(classPieces, context)\n    if (error) return error\n  }\n\n  const className = classPieces.slice(-1).join('')\n  const variants = classPieces.slice(0, -1)\n\n  // Check if variants or classes with match issues\n  if (variants.length > 0) {\n    const variantSuggestions = getVariantSuggestions(\n      variants,\n      className,\n      context\n    )\n    if (variantSuggestions) return variantSuggestions\n  }\n\n  return getClassSuggestions(className, context)\n}\n\nexport type ErrorContext = {\n  CustomError: typeof Error\n  tailwindContext: TailwindContext\n  tailwindConfig: TailwindConfig\n  hasLogColors: boolean\n  suggestionNumber: number\n}\n\nfunction createErrorContext(\n  color: MakeColor,\n  context: ErrorContext\n): ClassErrorContext {\n  return {\n    color,\n    candidates: extractClassCandidates(context.tailwindContext),\n    variants: extractVariantCandidates(context.tailwindContext),\n    suggestionNumber: context.suggestionNumber,\n    CustomError: context.CustomError,\n    tailwindConfig: context.tailwindConfig,\n    tailwindContext: context.tailwindContext,\n  }\n}\n\nfunction getSuggestions(classList: string[], options: Options): void {\n  const context = { ...OPTION_DEFAULTS, ...options }\n  const color = makeColor(context.hasLogColors)\n\n  const classErrorContext = createErrorContext(color, context)\n\n  const errorText = classList\n    .map(c => getClassError(c, classErrorContext))\n    .join('\\n\\n')\n\n  const { twinVersion } = getPackageVersions()\n  const helpText = [\n    `${twinVersion ? `twin.macro@${twinVersion}` : 'twinVersion'}`,\n    `https://twinredirect.page.link/docs`,\n    `https://tailwindcss.com/docs`,\n  ].join('\\n')\n\n  throw new context.CustomError(\n    `\\n\\n${errorText}\\n\\n${color(helpText, 'subdued')}\\n`\n  )\n}\n\nexport default getSuggestions\n","import type { AddDataPropToExistingPath, T } from './types'\n\nconst SPACE_ID = '_'\nconst EXTRA_WHITESPACE = /\\s\\s+/g\nconst LINEFEED = /\\n/g\n\nfunction formatProp(classes: string): string {\n  return (\n    classes\n      // Normalize spacing\n      .replace(EXTRA_WHITESPACE, ' ')\n      // Remove newline characters\n      .replace(LINEFEED, ' ')\n      // Replace the space id\n      .replace(SPACE_ID, ' ')\n      .trim()\n  )\n}\n\nfunction addDataTwPropToPath({\n  t,\n  attributes,\n  rawClasses,\n  path,\n  state,\n  coreContext,\n  propName = 'data-tw',\n}: AddDataPropToExistingPath): void {\n  const dataTwPropAllEnvironments =\n    propName === 'data-tw' && coreContext.twinConfig.dataTwProp === 'all'\n  const dataCsPropAllEnvironments =\n    propName === 'data-cs' && coreContext.twinConfig.dataCsProp === 'all'\n  if (!state.isDev && !dataTwPropAllEnvironments && !dataCsPropAllEnvironments)\n    return\n  if (propName === 'data-tw' && !coreContext.twinConfig.dataTwProp) return\n  if (propName === 'data-cs' && !coreContext.twinConfig.dataCsProp) return\n\n  // A for in loop looping over attributes and removing the one we want\n  for (const p of attributes) {\n    if (p.type === 'JSXSpreadAttribute') continue\n    const nodeName = p.node as T.JSXAttribute\n    if (nodeName?.name && nodeName.name.name === propName) p.remove()\n  }\n\n  const classes = formatProp(rawClasses)\n\n  // Add the attribute\n  path.insertAfter(\n    t.jsxAttribute(t.jsxIdentifier(propName), t.stringLiteral(classes))\n  )\n}\n\nfunction addDataPropToExistingPath({\n  t,\n  attributes,\n  rawClasses,\n  path,\n  state,\n  coreContext,\n  propName = 'data-tw',\n}: AddDataPropToExistingPath): void {\n  const dataTwPropAllEnvironments =\n    propName === 'data-tw' && coreContext.twinConfig.dataTwProp === 'all'\n  const dataCsPropAllEnvironments =\n    propName === 'data-cs' && coreContext.twinConfig.dataCsProp === 'all'\n  if (!state.isDev && !dataTwPropAllEnvironments && !dataCsPropAllEnvironments)\n    return\n  if (propName === 'data-tw' && !coreContext.twinConfig.dataTwProp) return\n  if (propName === 'data-cs' && !coreContext.twinConfig.dataCsProp) return\n\n  // Append to the existing debug attribute\n  const dataProperty = attributes.find(\n    p =>\n      (p.node as T.JSXAttribute)?.name &&\n      (p.node as T.JSXAttribute).name.name === propName\n  )\n\n  if (dataProperty) {\n    try {\n      // Existing data prop\n      if (\n        ((dataProperty.node as T.JSXAttribute).value as T.StringLiteral).value\n      ) {\n        ;(\n          (dataProperty.node as T.JSXAttribute).value as T.StringLiteral\n        ).value = `${[\n          ((dataProperty.node as T.JSXAttribute).value as T.StringLiteral)\n            .value,\n          rawClasses,\n        ]\n          .filter(Boolean)\n          .join(' | ')}`\n        return\n      }\n\n      // New data prop\n      const attribute = (dataProperty.node as T.JSXAttribute)\n        .value as T.JSXExpressionContainer\n      // @ts-expect-error Setting value on target\n      attribute.expression.value = `${[\n        // @ts-expect-error Okay with value not on all expression types\n        (dataProperty.node.value as T.JSXExpressionContainer).expression.value,\n        rawClasses,\n      ]\n        .filter(Boolean)\n        .join(' | ')}`\n    } catch (_: unknown) {}\n\n    return\n  }\n\n  const classes = formatProp(rawClasses)\n\n  // Add a new attribute\n  path.pushContainer(\n    // @ts-expect-error Key is never\n    'attributes',\n    t.jSXAttribute(\n      t.jSXIdentifier(propName),\n      t.jSXExpressionContainer(t.stringLiteral(classes))\n    )\n  )\n}\n\nexport { addDataTwPropToPath, addDataPropToExistingPath }\n","// eslint-disable-next-line import/no-relative-parent-imports\nimport { getStyles } from '../core'\n// eslint-disable-next-line import/no-relative-parent-imports\nimport getSuggestions from '../suggestions'\nimport {\n  astify,\n  getParentJSX,\n  parseTte,\n  replaceWithLocation,\n  getAttributeNames,\n  getCssAttributeData,\n  makeStyledComponent,\n} from './lib/astHelpers'\nimport isEmpty from './lib/util/isEmpty'\nimport { addDataTwPropToPath, addDataPropToExistingPath } from './dataProp'\nimport type {\n  AdditionalHandlerParameters,\n  CoreContext,\n  JSXAttributeHandler,\n  NodePath,\n  State,\n  T,\n} from './types'\n\ntype MoveTwPropToStyled = {\n  t: typeof T\n  state: State\n  program: NodePath<T.Program>\n  astStyles: T.Expression\n  jsxPath: NodePath<T.JSXOpeningElement>\n  coreContext: CoreContext\n}\n\nfunction moveTwPropToStyled(params: MoveTwPropToStyled): void {\n  const { jsxPath, astStyles } = params\n\n  makeStyledComponent({ ...params, secondArg: astStyles })\n\n  // Remove the tw attribute\n  const tagAttributes = jsxPath.node.attributes\n  const twAttributeIndex = tagAttributes.findIndex(\n    n => n.type === 'JSXAttribute' && n.name && n.name.name === 'tw'\n  )\n  if (twAttributeIndex < 0) return\n\n  jsxPath.node.attributes.splice(twAttributeIndex, 1)\n}\n\ntype MergeIntoCssAttribute = {\n  t: typeof T\n  path: NodePath<T.JSXOpeningElement>\n  astStyles: T.Expression\n  cssAttribute: NodePath<T.JSXAttribute> | undefined\n}\n\nfunction mergeIntoCssAttribute({\n  t,\n  path,\n  astStyles,\n  cssAttribute,\n}: MergeIntoCssAttribute): void {\n  if (!cssAttribute) return\n\n  // The expression is the value as a NodePath\n  const attributeValuePath = cssAttribute.get('value')\n\n  // If it's not {} or \"\", get out of here\n  if (\n    !attributeValuePath ||\n    (!attributeValuePath.isJSXExpressionContainer() &&\n      !attributeValuePath.isStringLiteral())\n  )\n    return\n\n  const existingCssAttribute = attributeValuePath.isStringLiteral()\n    ? (attributeValuePath as unknown as NodePath<T.StringLiteral>)\n    : // @ts-expect-error get doesn’t exist on the types\n      (attributeValuePath.get(\n        'expression'\n      ) as NodePath<T.JSXExpressionContainer>)\n\n  const attributeNames = getAttributeNames(path)\n\n  const isBeforeCssAttribute =\n    attributeNames.indexOf('tw') - attributeNames.indexOf('css') < 0\n\n  if (existingCssAttribute.isArrayExpression()) {\n    // The existing css prop is an array, eg: css={[...]}\n    if (isBeforeCssAttribute) {\n      const attribute = existingCssAttribute as NodePath<\n        T.StringLiteral | T.JSXExpressionContainer\n      >\n      // @ts-expect-error never in arg0?\n      attribute.unshiftContainer('elements', astStyles)\n    } else {\n      const attribute = existingCssAttribute as NodePath<\n        T.StringLiteral | T.JSXExpressionContainer\n      >\n      // @ts-expect-error never in arg0?\n      attribute.pushContainer('elements', astStyles)\n    }\n  } else {\n    // css prop is either:\n    // TemplateLiteral\n    // <div css={`...`} tw=\"...\" />\n    // or an ObjectExpression\n    // <div css={{ ... }} tw=\"...\" />\n    // or ArrowFunctionExpression/FunctionExpression\n    // <div css={() => (...)} tw=\"...\" />\n    const existingCssAttributeNode = existingCssAttribute.node\n\n    // The existing css prop is an array, eg: css={[...]}\n    const styleArray = isBeforeCssAttribute\n      ? [astStyles, existingCssAttributeNode]\n      : [existingCssAttributeNode, astStyles]\n\n    const arrayExpression = t.arrayExpression(styleArray as T.Expression[])\n\n    const { parent } = existingCssAttribute\n    const replacement =\n      parent.type === 'JSXAttribute'\n        ? t.jsxExpressionContainer(arrayExpression)\n        : arrayExpression\n\n    existingCssAttribute.replaceWith(replacement)\n  }\n}\n\nfunction handleTwProperty({\n  path,\n  t,\n  program,\n  state,\n  coreContext,\n}: JSXAttributeHandler): void {\n  if (!path.node || path.node.name.name !== 'tw') return\n  state.hasTwAttribute = true\n\n  const nodeValue = path.node.value\n  if (!nodeValue) return\n\n  const nodeExpression = (nodeValue as T.JSXExpressionContainer).expression\n\n  // Handle `tw={\"block\"}`\n  const expressionValue =\n    nodeExpression &&\n    nodeExpression.type === 'StringLiteral' &&\n    nodeExpression.value\n  if (expressionValue === '') return // Allow `tw={\"\"}`\n\n  // Feedback for unsupported usage\n  if (nodeExpression)\n    coreContext.assert(\n      Boolean(expressionValue),\n      ({ color }) =>\n        `${color(\n          `✕ Only plain strings can be used with the \"tw\" prop`\n        )}\\n\\nTry using it like this: ${color(\n          `<div tw=\"text-black\" />`,\n          'success'\n        )} or ${color(\n          `<div tw={\"text-black\"} />`,\n          'success'\n        )}\\n\\nRead more at https://twinredirect.page.link/template-literals`\n    )\n\n  const rawClasses =\n    expressionValue || (nodeValue as T.StringLiteral).value || ''\n  const { styles, unmatched } = getStyles(rawClasses, coreContext)\n\n  if (unmatched.length > 0) {\n    getSuggestions(unmatched, {\n      CustomError: coreContext.CustomError,\n      tailwindContext: coreContext.tailwindContext,\n      tailwindConfig: coreContext.tailwindConfig,\n      hasLogColors: coreContext.twinConfig.hasLogColors,\n    })\n    return\n  }\n\n  const astStyles = astify(isEmpty(styles) ? {} : styles, t)\n\n  const jsxPath = getParentJSX(path)\n  const attributes = jsxPath.get('attributes')\n  const { attribute: cssAttribute } = getCssAttributeData(attributes)\n\n  if (coreContext.twinConfig.moveTwPropToStyled) {\n    moveTwPropToStyled({ astStyles, jsxPath, t, program, state, coreContext })\n    addDataTwPropToPath({ t, attributes, rawClasses, path, state, coreContext })\n    return\n  }\n\n  if (!cssAttribute) {\n    // Replace the tw prop with the css prop\n    path.replaceWith(\n      t.jsxAttribute(\n        t.jsxIdentifier('css'),\n        t.jsxExpressionContainer(astStyles)\n      )\n    )\n    addDataTwPropToPath({ t, attributes, rawClasses, path, state, coreContext })\n    return\n  }\n\n  // Merge tw styles into an existing css prop\n  mergeIntoCssAttribute({\n    cssAttribute: cssAttribute as NodePath<T.JSXAttribute>,\n    path: jsxPath,\n    astStyles,\n    t,\n  })\n\n  path.remove() // remove the tw prop\n\n  addDataPropToExistingPath({\n    t,\n    attributes,\n    rawClasses,\n    path: jsxPath,\n    coreContext,\n    state,\n  })\n}\n\nfunction handleTwFunction({\n  references,\n  t,\n  state,\n  coreContext,\n}: AdditionalHandlerParameters): void {\n  const defaultImportReferences = references.default || references.tw || []\n\n  defaultImportReferences.forEach(path => {\n    /**\n     * Gotcha: After twin changes a className/tw/cs prop path then the reference\n     * becomes stale and needs to be refreshed with crawl()\n     */\n    const { parentPath } = path\n    if (!(parentPath as NodePath).isTaggedTemplateExpression())\n      path.scope.crawl()\n\n    const parent = path.findParent(x =>\n      x.isTaggedTemplateExpression()\n    ) as NodePath<T.TaggedTemplateExpression>\n    if (!parent) return\n\n    // Check if the style attribute is being used\n    if (!coreContext.twinConfig.allowStyleProp) {\n      const jsxAttribute = parent.findParent(x =>\n        x.isJSXAttribute()\n      ) as NodePath<T.JSXAttribute>\n      const attributeName =\n        // @ts-expect-error No `get` on resulting path\n        jsxAttribute && (jsxAttribute.get('name').get('name').node as string)\n\n      coreContext.assert(\n        attributeName !== 'style',\n        ({ color }) =>\n          `${color(\n            `✕ Tailwind styles shouldn’t be added within a \\`style={...}\\` prop`\n          )}\\n\\nUse the tw or css prop instead: ${color(\n            '<div tw=\"\" />',\n            'success'\n          )} or ${color(\n            '<div css=\"\" />',\n            'success'\n          )}\\n\\nDisable this error by adding this in your twin config: \\`{ \"allowStyleProp\": true }\\`\\nRead more at https://twinredirect.page.link/style-prop`\n      )\n    }\n\n    const parsed = parseTte(parent, { t, state })\n    if (!parsed) return\n\n    const rawClasses = parsed.string\n    // Add tw-prop for css attributes\n    const jsxPath = path.findParent(p =>\n      p.isJSXOpeningElement()\n    ) as NodePath<T.JSXOpeningElement>\n\n    if (jsxPath) {\n      const attributes = jsxPath.get('attributes')\n      const pathData = {\n        t,\n        attributes,\n        rawClasses,\n        path: jsxPath,\n        coreContext,\n        state,\n      }\n      addDataPropToExistingPath(pathData)\n    }\n\n    const { styles, unmatched } = getStyles(rawClasses, coreContext)\n\n    if (unmatched.length > 0) {\n      getSuggestions(unmatched, {\n        CustomError: coreContext.CustomError,\n        tailwindContext: coreContext.tailwindContext,\n        tailwindConfig: coreContext.tailwindConfig,\n        hasLogColors: coreContext.twinConfig.hasLogColors,\n      })\n      return\n    }\n\n    const astStyles = astify(isEmpty(styles) ? {} : styles, t)\n    replaceWithLocation(parsed.path, astStyles)\n  })\n}\n\nexport { handleTwProperty, handleTwFunction }\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\n// eslint-disable-next-line import/no-relative-parent-imports\nimport { getStyles } from '../core'\nimport isEmpty from './lib/util/isEmpty'\nimport { addDataTwPropToPath, addDataPropToExistingPath } from './dataProp'\nimport {\n  astify,\n  getParentJSX,\n  getAttributeNames,\n  getCssAttributeData,\n} from './lib/astHelpers'\nimport type { NodePath, T, JSXAttributeHandler } from './types'\n\nfunction handleCsProperty({\n  path,\n  t,\n  state,\n  coreContext,\n}: JSXAttributeHandler): void {\n  if (coreContext.twinConfig.disableCsProp) return\n  if (!path.node || path.node.name.name !== 'cs') return\n\n  const nodeValue = path.node.value\n  const nodeExpression = (nodeValue as T.JSXExpressionContainer).expression\n\n  // Allow cs={\"property[value]\"}\n  const expressionValue =\n    nodeExpression &&\n    nodeExpression.type === 'StringLiteral' &&\n    nodeExpression.value\n\n  if (nodeExpression)\n    coreContext.assert(\n      Boolean(expressionValue),\n      ({ color }) =>\n        `${color(\n          `✕ Only complete classes can be used with the \"cs\" prop`\n        )}\\n\\nTry using it like this: ${color(\n          '<div cs=\"maxWidth[30rem]\" />',\n          'success'\n        )}\\n\\nRead more at https://twinredirect.page.link/cs-classes`\n    )\n\n  const rawClasses =\n    expressionValue || (nodeValue as T.StringLiteral).value || ''\n  const { styles } = getStyles(rawClasses, {\n    isShortCssOnly: true,\n    ...coreContext,\n  })\n  const astStyles = astify(isEmpty(styles) ? {} : styles, t)\n\n  const jsxPath = getParentJSX(path)\n  const attributes = jsxPath.get('attributes')\n  const { attribute: cssAttribute } = getCssAttributeData(attributes)\n\n  if (!cssAttribute) {\n    // Replace the tw prop with the css prop\n    path.replaceWith(\n      t.jsxAttribute(\n        t.jsxIdentifier('css'),\n        t.jsxExpressionContainer(astStyles)\n      )\n    )\n    addDataTwPropToPath({\n      t,\n      attributes,\n      rawClasses,\n      path,\n      state,\n      coreContext,\n      propName: 'data-cs',\n    })\n    return\n  }\n\n  // The expression is the value as a NodePath\n  const attributeValuePath = cssAttribute.get('value')\n\n  // If it's not {} or \"\", get out of here\n  if (\n    !attributeValuePath ||\n    // @ts-expect-error The type checking functions don't exist on NodePath\n    (!attributeValuePath.isJSXExpressionContainer() &&\n      // @ts-expect-error The type checking functions don't exist on NodePath\n      !attributeValuePath.isStringLiteral())\n  )\n    return\n\n  // @ts-expect-error The type checking functions don't exist on NodePath\n  const existingCssAttribute = attributeValuePath.isStringLiteral()\n    ? (attributeValuePath as unknown as NodePath<T.StringLiteral>)\n    : // @ts-expect-error get doesn’t exist on the types\n      (attributeValuePath.get(\n        'expression'\n      ) as NodePath<T.JSXExpressionContainer>)\n\n  const attributeNames = getAttributeNames(jsxPath)\n  const isBeforeCssAttribute =\n    attributeNames.indexOf('cs') - attributeNames.indexOf('css') < 0\n\n  if (existingCssAttribute.isArrayExpression()) {\n    // The existing css prop is an array, eg: css={[...]}\n    if (isBeforeCssAttribute) {\n      // @ts-expect-error unshiftContainer doesn't exist on NodePath\n      existingCssAttribute.unshiftContainer('elements', astStyles)\n    } else {\n      // @ts-expect-error pushContainer doesn't exist on NodePath\n      existingCssAttribute.pushContainer('elements', astStyles)\n    }\n  } else {\n    // css prop is either:\n    // TemplateLiteral\n    // <div css={`...`} cs=\"...\" />\n    // or an ObjectExpression\n    // <div css={{ ... }} cs=\"...\" />\n    // or ArrowFunctionExpression/FunctionExpression\n    // <div css={() => (...)} cs=\"...\" />\n    const existingCssAttributeNode = existingCssAttribute.node\n\n    // The existing css prop is an array, eg: css={[...]}\n    const styleArray = isBeforeCssAttribute\n      ? [astStyles, existingCssAttributeNode]\n      : [existingCssAttributeNode, astStyles]\n\n    const arrayExpression = t.arrayExpression(styleArray as T.Expression[])\n\n    const { parent } = existingCssAttribute\n    const replacement =\n      parent.type === 'JSXAttribute'\n        ? t.jsxExpressionContainer(arrayExpression)\n        : arrayExpression\n\n    existingCssAttribute.replaceWith(replacement)\n  }\n\n  path.remove() // remove the cs prop\n\n  addDataPropToExistingPath({\n    t,\n    attributes,\n    rawClasses,\n    path: jsxPath,\n    state,\n    coreContext,\n    propName: 'data-cs',\n  })\n}\n\nexport { handleCsProperty }\n","// eslint-disable-next-line import/no-relative-parent-imports\nimport { getStyles } from '../core'\nimport { addDataTwPropToPath, addDataPropToExistingPath } from './dataProp'\nimport isEmpty from './lib/util/isEmpty'\nimport {\n  astify,\n  getParentJSX,\n  getAttributeNames,\n  getCssAttributeData,\n} from './lib/astHelpers'\nimport type { JSXAttributeHandler, T, NodePath } from './types'\n\nfunction makeJsxAttribute(\n  [key, value]: [string, T.Expression | T.JSXEmptyExpression],\n  t: typeof T\n): T.JSXAttribute {\n  return t.jsxAttribute(t.jsxIdentifier(key), t.jsxExpressionContainer(value))\n}\n\nfunction handleClassNameProperty({\n  path,\n  t,\n  state,\n  coreContext,\n}: JSXAttributeHandler): void {\n  if (!coreContext.twinConfig.includeClassNames) return\n  if (path.node.name.name !== 'className') return\n\n  const nodeValue = path.node.value\n  if (!nodeValue) return\n\n  // Ignore className if it cannot be resolved\n  if ((nodeValue as T.JSXExpressionContainer).expression) return\n\n  const rawClasses = (nodeValue as T.StringLiteral).value\n  if (!rawClasses) return\n\n  const { styles, unmatched, matched } = getStyles(rawClasses, {\n    ...coreContext,\n    isSilent: true,\n  })\n  if (matched.length === 0) return\n\n  const astStyles = astify(isEmpty(styles) ? {} : styles, t)\n\n  // When classes can't be matched we add them back into the className (it exists as a few properties)\n  const unmatchedClasses = unmatched.join(' ')\n  if (!path.node.value) return\n  ;(path.node.value as T.StringLiteral).value = unmatchedClasses\n  if (path.node.value.extra) {\n    path.node.value.extra.rawValue = unmatchedClasses\n    path.node.value.extra.raw = `\"${unmatchedClasses}\"`\n  }\n\n  const jsxPath = getParentJSX(path)\n  const attributes = jsxPath.get('attributes')\n  const { attribute: cssAttribute } = getCssAttributeData(attributes)\n\n  if (!cssAttribute) {\n    const attribute = makeJsxAttribute(['css', astStyles], t)\n    if (unmatchedClasses) {\n      path.insertAfter(attribute)\n    } else {\n      path.replaceWith(attribute)\n    }\n\n    const pathParameters = {\n      t,\n      path,\n      state,\n      attributes,\n      coreContext,\n      rawClasses: matched.join(' '),\n    }\n\n    addDataTwPropToPath(pathParameters)\n    return\n  }\n\n  const cssExpression = (cssAttribute as NodePath<T.JSXAttribute>)\n    .get('value')\n    .get('expression') as NodePath<T.Expression>\n  const attributeNames = getAttributeNames(jsxPath)\n\n  const isBeforeCssAttribute =\n    attributeNames.indexOf('className') - attributeNames.indexOf('css') < 0\n\n  if (cssExpression.isArrayExpression()) {\n    // The existing css prop is an array, eg: css={[...]}\n    if (isBeforeCssAttribute) {\n      cssExpression.unshiftContainer('elements', astStyles)\n    } else {\n      cssExpression.pushContainer('elements', astStyles)\n    }\n  } else {\n    // The existing css prop is not an array, eg: css={{ ... }} / css={`...`}\n    const existingCssAttribute = cssExpression.node\n    coreContext.assert(Boolean(existingCssAttribute), ({ color }) =>\n      color(\n        `✕ An empty css prop (css=\"\") isn’t supported alongside the className prop`\n      )\n    )\n    const styleArray = isBeforeCssAttribute\n      ? [astStyles, existingCssAttribute]\n      : [existingCssAttribute, astStyles]\n    cssExpression.replaceWith(t.arrayExpression(styleArray))\n  }\n\n  if (!unmatchedClasses) path.remove()\n\n  addDataPropToExistingPath({\n    t,\n    attributes,\n    rawClasses: matched.join(' '),\n    path: jsxPath,\n    state,\n    coreContext,\n  })\n}\n\nexport { handleClassNameProperty }\n","// eslint-disable-next-line import/no-relative-parent-imports\nimport { createCoreContext } from '../core'\nimport { MacroError } from 'babel-plugin-macros'\nimport {\n  setStyledIdentifier,\n  setCssIdentifier,\n  generateUid,\n  getCssAttributeData,\n  getJsxAttributes,\n} from './lib/astHelpers'\nimport validateImports from './lib/validateImports'\nimport {\n  updateCssReferences,\n  addCssImport,\n  convertHtmlElementToStyled,\n} from './css'\nimport {\n  updateStyledReferences,\n  addStyledImport,\n  handleStyledFunction,\n} from './styled'\nimport { handleThemeFunction } from './theme'\nimport { handleScreenFunction } from './screen'\nimport { handleGlobalStylesFunction } from './globalStyles'\nimport { handleTwProperty, handleTwFunction } from './tw'\nimport { handleCsProperty } from './shortCss'\nimport { handleClassNameProperty } from './className'\nimport type { MacroParams } from 'babel-plugin-macros'\nimport type { State } from './types'\n\nconst macroTasks = [\n  handleTwFunction,\n  handleGlobalStylesFunction, // GlobalStyles import\n  updateStyledReferences, // Styled import\n  handleStyledFunction, // Convert tw.div`` & styled.div`` to styled('div', {}) (stitches)\n  updateCssReferences, // Update any usage of existing css imports\n  handleThemeFunction, // Theme import\n  handleScreenFunction, // Screen import\n  addStyledImport,\n  addCssImport, // Gotcha: Must be after addStyledImport or issues with theme`` style transpile\n]\n\nfunction twinMacro(params: MacroParams): void {\n  const t = params.babel.types\n  const program = params.state.file.path\n\n  const isDev =\n    process.env.NODE_ENV === 'development' ||\n    process.env.NODE_ENV === 'dev' ||\n    false\n\n  const coreContext = createCoreContext({\n    isDev,\n    config: params.config as undefined,\n    filename: params.state.filename ?? '',\n    sourceRoot: params.state.file.opts.sourceRoot ?? '',\n    CustomError: MacroError as typeof Error,\n  })\n\n  validateImports(params.references, coreContext)\n\n  const state: State = {\n    isDev,\n    babel: params.babel,\n    config: params.config,\n    tailwindConfigIdentifier: generateUid('tailwindConfig', program),\n    tailwindUtilsIdentifier: generateUid('tailwindUtils', program),\n    styledIdentifier: undefined,\n    cssIdentifier: undefined,\n    hasCssAttribute: false,\n  }\n\n  const handlerParameters = { t, program, state, coreContext }\n\n  program.traverse({\n    ImportDeclaration(path) {\n      setStyledIdentifier({ ...handlerParameters, path })\n      setCssIdentifier({ ...handlerParameters, path })\n    },\n    JSXElement(path) {\n      const jsxAttributes = getJsxAttributes(path)\n      const { index, hasCssAttribute } = getCssAttributeData(jsxAttributes)\n      state.hasCssAttribute = state.hasCssAttribute || hasCssAttribute\n      const attributePaths = index > 1 ? jsxAttributes.reverse() : jsxAttributes\n\n      for (const path of attributePaths) {\n        handleClassNameProperty({ ...handlerParameters, path })\n        handleTwProperty({ ...handlerParameters, path })\n        handleCsProperty({ ...handlerParameters, path })\n      }\n\n      if (hasCssAttribute)\n        convertHtmlElementToStyled({ ...handlerParameters, path })\n    },\n  })\n\n  if (state.styledIdentifier === undefined)\n    state.styledIdentifier = generateUid('styled', program)\n\n  if (state.cssIdentifier === undefined)\n    state.cssIdentifier = generateUid('css', program)\n\n  for (const task of macroTasks) {\n    // @ts-expect-error TOFIX: Adjust types for altered state\n    task({ ...handlerParameters, references: params.references })\n  }\n\n  program.scope.crawl()\n}\n\nexport default twinMacro\n","import { createMacro } from 'babel-plugin-macros'\nimport twinMacro from './macro/twin'\n\nexport default createMacro(twinMacro, { configName: 'twin' })\n"],"names":["resolve","statSync","dirname","readdirSync","fs","path","Module","callsites","resolveFrom","require","TWIN_CONFIG_DEFAULTS","allowStyleProp","autoCssProp","config","undefined","convertHtmlElementToStyled","convertStyledDot","css","import","from","dataCsProp","dataTwProp","debug","disableCsProp","disableShortCss","global","hasLogColors","includeClassNames","moveTwPropToStyled","moveKeyframesToGlobalStyles","preset","sassyPseudo","stitchesConfig","styled","configDefaultsGoober","configDefaultsStitches","configDefaultsTwin","isGoober","isStitches","isDev","isBoolean","value","allowedPresets","configTwinValidators","includes","map","p","join","disableColorVariables","toArray","array","Array","isArray","AMPERSAND_AFTER","AMPERSAND","stripAmpersands","string","replace","trim","EXTRA_VARIANTS","EXTRA_NOT_VARIANTS","defaultVariants","addVariant","extraVariants","flatMap","v","name","selector","String","variant","notVariant","s","notPseudoVariants","notConfig","variants","groupSelector","peerSelector","mode","className","concat","defaultTailwindConfig","presets","content","theme","extend","DEFAULT","zIndex","plugins","toPath","toPathRaw","createContext","createContextRaw","resolveMatches","resolveMatchesRaw","transformThemeValue","transformThemeValueRaw","resolveTailwindConfig","resolveTailwindConfigRaw","getAllConfigs","getAllConfigsRaw","splitAtTopLevelOnly","splitAtTopLevelOnlyRaw","unescape","unescapeRaw","isObject","colors","error","chalk","hex","errorLight","warn","yellowBright","success","greenBright","highlight","subdued","makeColor","hasColor","message","type","spaced","warning","logGeneralError","createDebug","twinConfig","reference","data","log","JSON","stringify","console","getTailwindConfig","sourceRoot","filename","assert","baseDirectory","process","cwd","userTailwindConfig","defaultTwinConfig","configPath","escalade","_","names","configExists","Boolean","existsSync","color","configs","requireFresh","tailwindConfig","runConfigValidator","item","validatorConfig","validator","errorMessage","Error","getConfigTwin","params","output","getConfigTwinValidated","Object","entries","reduce","result","validatedItem","getFirstValue","list","getValue","firstValue","listLength","length","listItem","find","index","isLast","checkExists","fileName","existingFileName","getRelativePath","comparePath","pathName","parse","dir","relative","getStitchesPath","configPathCheck","userPresets","emotion","goober","stitches","createTheme","getConfigValue","defaultValue","dlv","resolveThemeValue","options","pathRoot","subPaths","sassifyValues","out","assign","withAlpha","opacityValue","values","transformed","k","fromEntries","createAssert","CustomError","isSilent","expression","messageContext","packageCheck","packageToCheck","styledImport","cssImport","getPackageUsed","isEmotion","isStyledComponents","getStyledConfig","usedConfig","stitchesPath","getCssConfig","getGlobalConfig","createCoreContext","configParameters","packageUsed","importConfig","tailwindContext","CAMEL_FIND","camelize","chr","toUpperCase","MATCH_THEME","MATCH_QUOTES","replaceThemeValue","match","exec","themeFunction","themeParameters","main","second","split","themeValue","replacedValue","SELECTOR_PARENT_CANDIDATE","SELECTOR_SPECIAL_STARTS","SELECTOR_ROOT","UNDERSCORE_ESCAPING","WRAPPED_PARENT_SELECTORS","sassifySelectorTasks","selectorMatchReg","original","__","offset","test","addParentSelector","sassifySelector","task","DEFAULTS_UNIVERSAL","EMPTY_CSS_VARIABLE_VALUE","PRESERVED_ATRULE_TYPES","Set","LAYER_DEFAULTS","LINEFEED","WORD_CHARACTER","SPACE_ID","SPACES","ESC_COMMA","ESC_DIGIT","BACKSLASH_ESCAPING","transformImportant","passChecks","hasImportant","respectImportant","transformEscaping","transformValueTasks","transformDeclValue","valueOriginal","old","new","extractFromRule","rule","selectorForUnescape","extractRuleStyles","nodes","extractSelectorFromAtRule","includeUniversalStyles","val","screenConfig","get","ruleTypes","decl","property","prop","startsWith","WebkitBackgroundClip","styles","selectorList","filter","atrule","has","ruleset","handler","deepMerge","slice","getGlobalStyles","candidates","candidateRuleMap","globalPluginStyles","candidate","layer","globalKey","preflightRules","preflightStyles","globalKeyframeStyles","keyframes","frames","BRACKETED","BRACKETED_MAYBE_IMPORTANT","ESCAPE_CHARACTERS","spreadVariantGroups","classes","context","pieces","separator","groupedClasses","pop","beforeImportant","afterImportant","endsWith","unwrapped","classList","group","ctx","expandVariantGroups","expandedClasses","REGEX_SPECIAL_CHARACTERS","escapeRegex","isShortCss","fullClassName","classPieces","splitAtArbitrary","splitOnFirst","input","delim","first","rest","ALL_COMMAS","ALL_AMPERSANDS","ENDING_AMP_THEN_WHITESPACE","ALL_CLASS_DOTS","ALL_CLASS_ATS","ALL_WRAPPABLE_PARENT_SELECTORS","BASIC_SELECTOR_TYPES","convertShortCssToArbitraryProperty","isShortCssOnly","origClassName","splitArray","lastValue","preSelector","template","splice","arbitraryProperty","isShortCssDisabled","checkForVariantSupport","hasMultipleVariants","hasACommaInVariants","some","splits","hasIssue","convertClassName","sassifyArbitraryVariants","isArbitraryVariant","unbracket","collapsed","forEach","push","prev","prevHasParent","mergedWithCurrent","mergedWithPrev","reversedVariantList","reverse","allVariants","idx","unwrappedVariant","variantList","next","IMPORTANT_OUTSIDE_BRACKETS","COMMENTS_MULTI_LINE","COMMENTS_SINGLE_LINE","CLASS_DIVIDER_PIPE","ALL_BRACKET_SQUARE_LEFT","ALL_BRACKET_SQUARE_RIGHT","ALL_BRACKET_ROUND_LEFT","ALL_BRACKET_ROUND_RIGHT","getStylesFromMatches","matches","rulesets","multilineReplaceWith","charBefore","directPrefixMatch","charAfter","Number","directSuffixMatch","validateClasses","classCheck","tasks","bigSign","bigIntValue","getOrderedClassList","convertedClassList","getClassOrder","orderedClassList","order","sort","a","z","getStyles","matched","unmatched","commonContext","convertedClassNameContext","c","commonMatchContext","convertedClassName","results","RegExp","mergedStyles","addImport","types","t","program","mod","identifier","importName","importDefaultSpecifier","importSpecifier","unshiftContainer","importDeclaration","stringLiteral","astify","literal","nullLiteral","unaryExpression","numericLiteral","booleanLiteral","arrayExpression","x","objectExpression","objectExpressionElements","keys","objectProperty","setStyledIdentifier","state","coreContext","importFromStitches","node","source","importFromLibrary","specifiers","specifier","local","styledIdentifier","existingStyledIdentifier","imported","setCssIdentifier","isLibraryImport","cssIdentifier","existingCssIdentifier","getStringFromTTE","getRawValue","rawValue","evaluatedValue","evaluate","q","raw","parseTte","cloneNode","cloneDeep","tagType","tag","stringLoc","loc","replaceWithLocation","isImportingStyled","callExpression","replacement","newPaths","replaceWith","generateUid","scope","generateUidIdentifier","getParentJSX","findParent","isJSXOpeningElement","getAttributeNames","jsxPath","attributes","attributeNames","getCssAttributeData","hasCssAttribute","attribute","findIndex","isJSXAttribute","getFunctionValue","parent","isCallExpression","argument","getTaggedTemplateValue","isTaggedTemplateExpression","getMemberExpression","isMemberExpression","generateTaggedTemplateExpression","backtickStyles","templateElement","cooked","ttExpression","taggedTemplateExpression","templateLiteral","isComponent","jsxSingleDotError","getFirstStyledArgument","dotComponent","objectName","propertyName","memberExpression","makeStyledComponent","secondArg","constName","firstArg","args","styledProps","variableDeclarator","styledDefinition","variableDeclaration","rootParentPath","parentPath","isProgram","insertBefore","id","jsxIdentifier","selfClosing","closingElement","getJsxAttributes","validImports","validateImports","imports","importTwAsNamedNotDefault","unsupportedImport","isEmpty","updateCssReferences","references","cssReferences","addCssImport","isImportingCss","shouldImport","updateStyledReferences","styledReferences","addStyledImport","moveDotElementToParam","parentCallExpression","styledName","styledArgs","handleStyledFunction","defaultRefs","default","styledRefs","handleThemeFunction","ttValue","getDirectReplacement","mediaQuery","newPath","handleDefinition","TaggedTemplateExpression","query","quasis","expressions","CallExpression","ObjectProperty","computed","ExpressionStatement","ArrowFunctionExpression","ArrayExpression","BinaryExpression","LogicalExpression","ConditionalExpression","VariableDeclarator","TemplateLiteral","TSAsExpression","getMediaQuery","screens","_input","_screens","i","screen","range","min","max","handleScreenFunction","definition","f","KEBAB_CANDIDATES","addGlobalStylesImport","getGlobalDeclarationTte","stylesUid","globalUid","getGlobalDeclarationProperty","openingElement","jsxOpeningElement","jsxAttribute","jsxExpressionContainer","jsxClosingElement","arrowFunctionExpression","jsxElement","code","kebabize","toLowerCase","convert","convertCssObjectToString","cssObject","handleGlobalStylesFunction","GlobalStyles","handleGlobalStylesJsx","globalStyles","handleGlobalStylesVariable","templateStyles","convertedStyles","placeholderPattern","isJSXElement","declarationData","declaration","jSXIdentifier","validateVariants","variantMatch","variantCandidates","rating","stringSimilarity","compareTwoStrings","errorText","suggestions","b","showMore","suggestionText","validators","opacityMatch","opacityConfig","opacity","choices","variantError","prefix","RATING_MINIMUM","rateCandidate","classData","matchee","classEnd","classValue","extractCandidates","classOptionSet","classOption","rated","getClassSuggestions","firstSuggestion","secondSuggestion","firstRating","firstCandidate","firstClassValue","secondRating","hasWinningSuggestion","valueText","suggestionNumber","suggestion","extractClassCandidates","add","extractVariantCandidates","variantMap","getPackageVersions","packageJson","versions","twinVersion","version","ALL_SPACE_IDS","OPTION_DEFAULTS","getVariantSuggestions","MacroError","unmatchedVariants","problemVariant","getClassError","rawClass","variantSuggestions","createErrorContext","getSuggestions","classErrorContext","helpText","EXTRA_WHITESPACE","formatProp","addDataTwPropToPath","rawClasses","propName","dataTwPropAllEnvironments","dataCsPropAllEnvironments","nodeName","remove","insertAfter","addDataPropToExistingPath","dataProperty","pushContainer","jSXAttribute","jSXExpressionContainer","astStyles","tagAttributes","twAttributeIndex","n","mergeIntoCssAttribute","cssAttribute","attributeValuePath","isJSXExpressionContainer","isStringLiteral","existingCssAttribute","isBeforeCssAttribute","indexOf","isArrayExpression","existingCssAttributeNode","styleArray","handleTwProperty","hasTwAttribute","nodeValue","nodeExpression","expressionValue","handleTwFunction","defaultImportReferences","tw","crawl","attributeName","parsed","pathData","handleCsProperty","makeJsxAttribute","key","handleClassNameProperty","unmatchedClasses","extra","pathParameters","cssExpression","macroTasks","twinMacro","babel","file","env","NODE_ENV","opts","tailwindConfigIdentifier","tailwindUtilsIdentifier","handlerParameters","traverse","ImportDeclaration","JSXElement","jsxAttributes","attributePaths","createMacro","configName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGe,iBAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;AAC1C,CAAC,IAAI,GAAG,GAAGA,YAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC/B,CAAC,IAAI,GAAG,EAAE,KAAK,GAAGC,WAAQ,CAAC,GAAG,CAAC,CAAC;AAChC;AACA,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE;AAC3B,EAAE,GAAG,GAAGC,YAAO,CAAC,GAAG,CAAC,CAAC;AACrB,EAAE;AACF;AACA,CAAC,OAAO,IAAI,EAAE;AACd,EAAE,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAEC,cAAW,CAAC,GAAG,CAAC,CAAC,CAAC;AACxC,EAAE,IAAI,GAAG,EAAE,OAAOH,YAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACpC,EAAE,GAAG,GAAGE,YAAO,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAC3B,EAAE,IAAI,GAAG,KAAK,GAAG,EAAE,MAAM;AACzB,EAAE;AACF;;;;;;ACZA,MAAM,WAAW,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,KAAK;AACnD,CAAC,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAClC,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC,qDAAqD,EAAE,OAAO,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;AAClG,EAAE;AACF;AACA,CAAC,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AACnC,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC,sDAAsD,EAAE,OAAO,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;AACpG,EAAE;AACF;AACA,CAAC,IAAI;AACL,EAAE,OAAO,GAAGE,sBAAE,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AACrC,EAAE,CAAC,OAAO,GAAG,EAAE;AACf,EAAE,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC7B,GAAG,OAAO,GAAGC,wBAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACnC,GAAG,MAAM,IAAI,MAAM,EAAE;AACrB,GAAG,OAAO,IAAI,CAAC;AACf,GAAG,MAAM;AACT,GAAG,MAAM,GAAG,CAAC;AACb,GAAG;AACH,EAAE;AACF;AACA,CAAC,MAAM,QAAQ,GAAGA,wBAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAChD;AACA,CAAC,MAAM,eAAe,GAAG,MAAMC,0BAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE;AACjE,EAAE,EAAE,EAAE,QAAQ;AACd,EAAE,QAAQ,EAAE,QAAQ;AACpB,EAAE,KAAK,EAAEA,0BAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC;AACzC,EAAE,CAAC,CAAC;AACJ;AACA,CAAC,IAAI,MAAM,EAAE;AACb,EAAE,IAAI;AACN,GAAG,OAAO,eAAe,EAAE,CAAC;AAC5B,GAAG,CAAC,OAAO,GAAG,EAAE;AAChB,GAAG,OAAO,IAAI,CAAC;AACf,GAAG;AACH,EAAE;AACF;AACA,CAAC,OAAO,eAAe,EAAE,CAAC;AAC1B,CAAC,CAAC;AACF;AACA,IAAA,aAAc,GAAG,CAAC,OAAO,EAAE,QAAQ,KAAK,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AACvE,IAAA,MAAqB,GAAG,CAAC,OAAO,EAAE,QAAQ,KAAK,WAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAA;;;AC5CnF,MAAM,SAAS,GAAG,MAAM;AACxB,CAAC,MAAM,kBAAkB,GAAG,KAAK,CAAC,iBAAiB,CAAC;AACpD,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC,EAAE,KAAK,KAAK,KAAK,CAAC;AAC/C,CAAC,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,KAAK,CAAC,iBAAiB,GAAG,kBAAkB,CAAC;AAC9C,CAAC,OAAO,KAAK,CAAC;AACd,CAAC,CAAC;AACF;AACA,IAAc,WAAA,GAAG,SAAS,CAAC;AAC3B;AACA,IAAA,QAAsB,GAAG,SAAS,CAAA;;;ACTlC,IAAc,YAAA,GAAG,QAAQ,IAAI;AAC7B,CAAC,MAAM,MAAM,GAAGC,WAAS,EAAE,CAAC;AAC5B;AACA,CAAC,IAAI,CAAC,QAAQ,EAAE;AAChB,EAAE,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AACjC,EAAE;AACF;AACA,CAAC,IAAI,OAAO,GAAG,KAAK,CAAC;AACrB;AACA;AACA,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;AAChB;AACA,CAAC,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AAC7B,EAAE,MAAM,cAAc,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;AAC7C;AACA,EAAE,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE;AAC1C,GAAG,SAAS;AACZ,GAAG;AACH;AACA,EAAE,IAAI,cAAc,KAAK,QAAQ,EAAE;AACnC,GAAG,OAAO,GAAG,IAAI,CAAC;AAClB,GAAG,SAAS;AACZ,GAAG;AACH;AACA;AACA,EAAE,IAAI,cAAc,KAAK,WAAW,EAAE;AACtC,GAAG,SAAS;AACZ,GAAG;AACH;AACA,EAAE,IAAI,OAAO,IAAI,cAAc,KAAK,QAAQ,EAAE;AAC9C,GAAG,OAAO,cAAc,CAAC;AACzB,GAAG;AACH,EAAE;AACF,CAAC;;AC/BD,IAAc,WAAA,GAAG,QAAQ,IAAI;AAC7B,CAAC,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AACnC,EAAE,MAAM,IAAI,SAAS,CAAC,mBAAmB,CAAC,CAAC;AAC3C,EAAE;AACF;AACA,CAAC,MAAM,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC;AAC7C;AACA,CAAC,MAAM,GAAG,GAAG,UAAU,GAAGF,wBAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC;AAC/D,CAAC,MAAM,QAAQ,GAAGG,aAAW,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;AAC7C;AACA,CAAC,MAAM,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC3C;AACA,CAAC,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,EAAE;AACpC,EAAE,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;AAC3C;AACA,EAAE,OAAO,CAAC,EAAE,EAAE;AACd,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,QAAQ,EAAE;AACrD,IAAI,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3C,IAAI;AACJ,GAAG;AACH,EAAE;AACF;AACA,CAAC,OAAO,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAChC;AACA,CAAC,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAC1C;AACA,CAAC,OAAO,MAAM,KAAK,SAAS,GAAGC,eAAO,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5E,CAAC;;AC9BD,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,cAAc,EAAE,KADW;AAE3BC,EAAAA,WAAW,EAAE,KAFc;AAG3BC,EAAAA,MAAM,EAAEC,SAHmB;AAI3BC,EAAAA,0BAA0B,EAAE,KAJD;AAK3BC,EAAAA,gBAAgB,EAAE,KALS;AAM3BC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,IAAI,EAAE,EAAA;GANE;AAO3BC,EAAAA,UAAU,EAAE,KAPe;AAQ3BC,EAAAA,UAAU,EAAE,KARe;AAS3BC,EAAAA,KAAK,EAAE,KAToB;AAU3BC,EAAAA,aAAa,EAAE,IAVY;AAW3BC,EAAAA,eAAe,EAAE,IAXU;AAY3BC,EAAAA,MAAM,EAAE;AAAEP,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,IAAI,EAAE,EAAA;GAZD;AAa3BO,EAAAA,YAAY,EAAE,IAba;AAc3BC,EAAAA,iBAAiB,EAAE,KAdQ;AAe3BC,EAAAA,kBAAkB,EAAE,KAfO;AAgB3BC,EAAAA,2BAA2B,EAAE,KAhBF;AAiB3BC,EAAAA,MAAM,EAAEhB,SAjBmB;AAkB3BiB,EAAAA,WAAW,EAAE,KAlBc;AAmB3BC,EAAAA,cAAc,EAAElB,SAnBW;AAoB3BmB,EAAAA,MAAM,EAAE;AAAEf,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,IAAI,EAAE,EAAA;AAApB,GAAA;AApBmB,CAA7B;;AAwBA,MAAMe,oBAAoB,GAAG;AAAEH,EAAAA,WAAW,EAAE,IAAA;AAAf,CAA7B;;AACA,MAAMI,sBAAsB,GAAG;AAC7BJ,EAAAA,WAAW,EAAE,IADgB;AAE7Bf,EAAAA,gBAAgB,EAAE,IAFW;AAG7BY,EAAAA,kBAAkB,EAAE,IAHS;AAI7Bb,EAAAA,0BAA0B,EAAE,IAJC;AAK7BiB,EAAAA,cAAc,EAAElB,SALa;EAM7Be,2BAA2B,EAAE,IANA;;AAAA,CAA/B,CAAA;;AASA,SAASO,kBAAT,CAA4B;EAC1BC,QAD0B;EAE1BC,UAF0B;AAG1BC,EAAAA,KAAAA;AAH0B,CAA5B,EAIsC;EACpC,OAAO,EACL,GAAG7B,oBADE;IAEL,IAAI2B,QAAQ,IAAIH,oBAAhB,CAFK;IAGL,IAAII,UAAU,IAAIH,sBAAlB,CAHK;AAILd,IAAAA,UAAU,EAAEkB,KAJP;AAKLnB,IAAAA,UAAU,EAAEmB,KAAAA;GALd,CAAA;AAOD,CAAA;;AAED,SAASC,SAAT,CAAmBC,KAAnB,EAAiC;EAC/B,OAAO,OAAOA,KAAP,KAAiB,SAAxB,CAAA;AACD,CAAA;;AAED,MAAMC,cAAc,GAAG,CAAC,mBAAD,EAAsB,SAAtB,EAAiC,QAAjC,EAA2C,UAA3C,CAAvB,CAAA;AAOA,MAAMC,oBAAoB,GAAyB;AACjDb,EAAAA,MAAM,EAAE,CACLW,KAAD,IACEA,KAAK,KAAK3B,SAAV,IACC,OAAO2B,KAAP,KAAiB,QAAjB,IAA6BC,cAAc,CAACE,QAAf,CAAwBH,KAAxB,CAH1B,EAIN,qCAAqCC,cAAc,CAChDG,GADkC,CAC9BC,CAAC,IAAQ,CAAA,CAAA,EAAAA,IADqB,EAElCC,IAFkC,CAE7B,IAF6B,CAEtB,EANT,CADyC;AASjDpC,EAAAA,cAAc,EAAE,CACd6B,SADc,EAEd,mDAFc,CATiC;EAajD5B,WAAW,EAAE,CACV6B,KAAD,IAA6B,CAACA,KADnB,EAEX,6QAFW,CAboC;EAiBjDO,qBAAqB,EAAE,CACpBP,KAAD,IAA6B,CAACA,KADT,EAErB,wJAFqB,CAjB0B;AAqBjDV,EAAAA,WAAW,EAAE,CAACS,SAAD,EAAY,gDAAZ,CArBoC;AAsBjDnB,EAAAA,UAAU,EAAE,CACToB,KAAD,IAA6BD,SAAS,CAACC,KAAD,CAAT,IAAoBA,KAAK,KAAK,KADjD,EAEV,0DAFU,CAtBqC;AA0BjDrB,EAAAA,UAAU,EAAE,CACTqB,KAAD,IAA6BD,SAAS,CAACC,KAAD,CAAT,IAAoBA,KAAK,KAAK,KADjD,EAEV,0DAFU,CA1BqC;AA8BjDd,EAAAA,iBAAiB,EAAE,CACjBa,SADiB,EAEjB,sDAFiB,CA9B8B;AAkCjDjB,EAAAA,aAAa,EAAE,CACbiB,SADa,EAEb,kDAFa,CAlCkC;AAsCjDxB,EAAAA,gBAAgB,EAAE,CAChBwB,SADgB,EAEhB,qDAFgB,CAtC+B;AA0CjDZ,EAAAA,kBAAkB,EAAE,CAClBY,SADkB,EAElB,uDAFkB,CA1C6B;AA8CjDzB,EAAAA,0BAA0B,EAAE,CAC1ByB,SAD0B,EAE1B,+DAF0B,CAAA;AA9CqB,CAAnD;;AC7DwB,SAAAS,OAAA,CAAWC,KAAX,EAAmB;EACzC,IAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B,OAAOA,KAAP,CAAA;EAC1B,OAAO,CAACA,KAAD,CAAP,CAAA;AACD;;ACAD,MAAMG,eAAe,GAAG,QAAxB,CAAA;AACA,MAAMC,SAAS,GAAG,IAAlB,CAAA;;AAEA,SAASC,eAAT,CAAyBC,MAAzB,EAAuC;AACrC,EAAA,OAAO,OAAOA,MAAP,KAAkB,QAAlB,GACHA,MAAM,CAACC,OAAP,CAAeH,SAAf,EAA0B,EAA1B,CAAA,CAA8BI,IAA9B,EADG,GAEHF,MAFJ,CAAA;AAGD,CAAA;;AAED,MAAMG,cAAc,GAAG,CACrB,CAAC,KAAD,EAAQ,KAAR,CADqB,EAErB,CAAC,WAAD,EAAc,OAAd,CAFqB,EAGrB,CAAC,SAAD,EAAY,OAAZ,CAHqB,EAIrB,CAAC,OAAD,EAAU,CAAC,SAAD,EAAY,SAAZ,CAAV,CAJqB,EAKrB,MALqB,EAMrB,YANqB,EAOrB,CAAC,KAAD,EAAQ,OAAR,CAPqB,EAQrB,CAAC,cAAD,EAAiB,qBAAjB,CARqB,EASrB,CAAC,aAAD,EAAgB,oBAAhB,CATqB,CAAvB,CAAA;AAYA,MAAMC,kBAAkB,GAAG;AAEzB,CAAC,OAAD,EAAU,eAAV,CAFyB,EAGzB,CAAC,MAAD,EAAS,cAAT,CAHyB,EAIzB,CAAC,MAAD,EAAS,cAAT,CAJyB,EAKzB,CAAC,KAAD,EAAQ,kBAAR,CALyB,EAMzB,CAAC,MAAD,EAAS,mBAAT,CANyB,EAOzB,eAPyB,EAQzB,cARyB,EASzB,cATyB;AAYzB,QAZyB,EAazB,CAAC,MAAD,EAAS,SAAT,CAbyB;AAgBzB,SAhByB,EAiBzB,SAjByB,EAkBzB,eAlByB,EAmBzB,mBAnByB,EAoBzB,UApByB,EAqBzB,UArByB,EAsBzB,UAtByB,EAuBzB,OAvByB,EAwBzB,SAxByB,EAyBzB,UAzByB,EA0BzB,cA1ByB,EA2BzB,WA3ByB;AA8BzB,OA9ByB;AAiCzB,cAjCyB,EAkCzB,OAlCyB,EAmCzB,OAnCyB,EAoCzB,eApCyB,EAqCzB,QArCyB,EAsCzB,SAtCyB,EAuCzB,UAvCyB,CAA3B,CAAA;;AA0CA,SAASC,eAAT,CAAyB;EAAEhD,MAAF;AAAUiD,EAAAA,UAAAA;AAAV,CAAzB,EAA0D;AACxD,EAAA,MAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,CAAC,IAAG;IAC/C,IAAI,CAACC,IAAD,EAAOC,QAAP,IAAmBlB,OAAO,CAACgB,CAAD,CAA9B,CAAA;IACAE,QAAQ,GAAGA,QAAQ,IAAI,CAAA,EAAA,EAAKC,MAAM,CAACF,IAAD,CAAM,CAAxC,CAAA,CAAA;IACA,MAAMG,OAAO,GAAG,CAACH,IAAD,EAAOC,QAAP,CAAhB,CAH+C;;IAM/C,MAAMG,UAAU,GAAG,CACjB,CAAOF,IAAAA,EAAAA,MAAM,CAACF,IAAD,CAAQ,CAAA,CADJ,EAEhBjB,OAAO,CAACkB,QAAD,CAAP,CAA+BtB,GAA/B,CACE0B,CAAD,IAAwB,CAAA,MAAA,EAAAhB,eAAe,CAACgB,CAAD,EADxC,CAAA,CAAA,CAFgB,CAAnB,CAAA;AAOA,IAAA,OAAO,CAACF,OAAD,EAAUC,UAAV,CAAP,CAAA;GAboB,CAAtB,CADwD;;AAkBxD,EAAA,MAAME,iBAAiB,GAAGZ,kBAAkB,CAACf,GAAnB,CAAuBoB,CAAC,IAAG;IACnD,MAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBlB,OAAO,CAACgB,CAAD,CAAhC,CAAA;IACA,MAAMQ,SAAS,GAAG,CAChB,CAAOP,IAAAA,EAAAA,IAAgB,CADP,CAAA,EAEfjB,OAAO,CAACkB,QAAQ,IAAI,CAAKD,EAAAA,EAAAA,IAAgB,CAAlC,CAAA,CAAP,CAAwDrB,GAAxD,CACC0B,CAAC,IAAa,CAAA,MAAA,EAAAhB,eAAe,CAACgB,CAAD,EAD9B,CAAA,CAAA,CAFe,CAAlB,CAAA;AAOA,IAAA,OAAOE,SAAP,CAAA;AACD,GAVyB,CAA1B,CAAA;EAYA,MAAMC,QAAQ,GAAG,CAAC,GAAGX,aAAJ,EAAmB,GAAGS,iBAAtB,CAAjB,CAAA;;EAEA,KAAK,MAAM,CAACN,IAAD,EAAOC,QAAP,CAAX,IAA+BO,QAA/B,EAAyC;AACvCZ,IAAAA,UAAU,CAACI,IAAD,EAAiBjB,OAAO,CAACkB,QAAD,CAAxB,CAAV,CAAA;AACD,GAAA;;EAED,KAAK,MAAM,CAACD,IAAD,EAAOC,QAAP,CAAX,IAA+BO,QAA/B,EAAyC;AACvC,IAAA,MAAMC,aAAa,GAAI1B,OAAO,CAACkB,QAAD,CAAP,CAA+BtB,GAA/B,CAAmC0B,CAAC,IACzDA,CAAC,CAACd,OAAF,CAAUJ,eAAV,EAA2B,oBAA3B,CADqB,CAAvB,CAAA;AAGAS,IAAAA,UAAU,CAAU,CAAAI,MAAAA,EAAAA,KAAV,CAAA,EAA4BS,aAA5B,CAAV,CAAA;AACD,GAAA;;EAED,KAAK,MAAM,CAACT,IAAD,EAAOC,QAAP,CAAX,IAA+BO,QAA/B,EAAyC;AACvC,IAAA,MAAME,YAAY,GAAI3B,OAAO,CAACkB,QAAD,CAAP,CAA+BtB,GAA/B,CAAmC0B,CAAC,IACxDA,CAAC,CAACd,OAAF,CAAUJ,eAAV,EAA2B,qBAA3B,CADoB,CAAtB,CAAA;AAGAS,IAAAA,UAAU,CAAS,CAAAI,KAAAA,EAAAA,KAAT,CAAA,EAA2BU,YAA3B,CAAV,CAAA;AACD,GAhDuD;;;AAmDxDd,EAAAA,UAAU,CAAC,kBAAD,EAAqB,4BAArB,CAAV,CAAA;AACAA,EAAAA,UAAU,CAAC,kBAAD,EAAqB,4BAArB,CAAV,CAAA;AACAA,EAAAA,UAAU,CAAC,oBAAD,EAAuB,8BAAvB,CAAV,CArDwD;;AAwDxDA,EAAAA,UAAU,CAAC,cAAD,EAAiB,wBAAjB,CAAV,CAAA;AACAA,EAAAA,UAAU,CAAC,cAAD,EAAiB,wBAAjB,CAAV,CAAA;AACAA,EAAAA,UAAU,CAAC,gBAAD,EAAmB,0BAAnB,CAAV,CA1DwD;;AA6DxDA,EAAAA,UAAU,CAAC,gBAAD,EAAmB,0BAAnB,CAAV,CAAA;AACAA,EAAAA,UAAU,CAAC,WAAD,EAAc,2BAAd,CAAV,CA9DwD;;AAiExDA,EAAAA,UAAU,CAAC,WAAD,EAAc,uBAAd,CAAV,CAAA;AACAA,EAAAA,UAAU,CAAC,YAAD,EAAe,sBAAf,CAAV,CAAA;AAEAA,EAAAA,UAAU,CAAC,QAAD,EAAW,eAAX,CAAV,CApEwD;AAwExD;;AACA,EAAA,IAAI,CAACe,IAAD,EAAOC,SAAS,GAAG,QAAnB,IAAgC,EAAgBC,CAAAA,MAAhB,CAClClE,MAAM,CAAC,WAAD,EAAc,OAAd,CAD4B,CAApC,CAzEwD;;AA8ExD,EAAA,IAAIgE,IAAI,KAAK,KAAb,EAAoBA,IAAI,GAAG,OAAP,CAAA;;EAEpB,IAAIA,IAAI,KAAK,OAAb,EAAsB;AACpBf,IAAAA,UAAU,CAAC,OAAD,GAAagB,EAAAA,SAAS,IAAtB,CAAV,CAAA;AACD,GAFD,MAEO,IAAID,IAAI,KAAK,OAAb,EAAsB;AAC3Bf,IAAAA,UAAU,CAAC,OAAD,EAAU,sCAAV,CAAV,CAAA;AACD,GApFuD;AAuFvD,EAAA,CAACe,IAAD,EAAOC,SAAS,GAAG,QAAnB,CAAgC,GAAA,EAAA,CAAgBC,MAAhB,CAC/BlE,MAAM,CAAC,WAAD,EAAc,OAAd,CADyB,CAAhC,CAAA;;EAID,IAAIgE,IAAI,KAAK,OAAb,EAAsB;AACpBf,IAAAA,UAAU,CAAC,OAAD,GAAagB,EAAAA,SAAS,IAAtB,CAAV,CAAA;AACD,GAFD,MAEO,IAAID,IAAI,KAAK,OAAb,EAAsB;AAC3Bf,IAAAA,UAAU,CAAC,OAAD,EAAU,sCAAV,CAAV,CAAA;AACD,GAAA;AACF,CAAA;;AAED,MAAMkB,qBAAqB,GAAG;AAC5BC,EAAAA,OAAO,EAAE,CACP;IACEC,OAAO,EAAE,CAAC,EAAD,CADX;AAEEC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AACNF,QAAAA,OAAO,EAAE;AAAEG,UAAAA,OAAO,EAAE,EAAA;SADd;AAENC,QAAAA,MAAM,EAAE;UAAE,CAAG,EAAA,GAAA;AAAL,SAFF;;AAAA,OAAA;KAHZ;AAQEC,IAAAA,OAAO,EAAE,CAAC1B,eAAD,CARX;;GADO,CAAA;AADmB,CAA9B;;ACjKA;AAmBA,MAAM2B,MAAM,GAAGC,eAAf,CAAA;AACA,MAAMC,aAAa,GAAGC,+BAAtB,CAAA;AAEA,MAAMC,cAAc,GAAGC,4BAAvB,CAAA;AAIA,MAAMC,mBAAmB,GAAGC,0CAA5B,CAAA;AAMA,MAAMC,qBAAqB,GAAGC,4CAA9B,CAAA;AAGA,MAAMC,aAAa,GAAGC,oCAAtB,CAAA;AAGA,MAAMC,mBAAmB,GAAGC,yCAA5B,CAAA;AAIA,MAAMC,QAAQ,GAAGC,+BAAjB;;AC7CwB,SAAAC,QAAA,CAAS/D,KAAT,EAAuB;AAC7C;AACA,EAAA,OAAOA,KAAK,IAAI,IAAT,IAAiB,OAAOA,KAAP,KAAiB,QAAlC,IAA8C,CAACU,KAAK,CAACC,OAAN,CAAcX,KAAd,CAAtD,CAAA;AACD;;ACKD,MAAMgE,QAAM,GAAG;AACbC,EAAAA,KAAK,EAAEC,yBAAK,CAACC,GAAN,CAAU,SAAV,CADM;AAEbC,EAAAA,UAAU,EAAEF,yBAAK,CAACC,GAAN,CAAU,SAAV,CAFC;EAGbE,IAAI,EAAEH,yBAAK,CAACI,YAHC;EAIbC,OAAO,EAAEL,yBAAK,CAACM,WAJF;EAKbC,SAAS,EAAEP,yBAAK,CAACI,YALJ;AAMbI,EAAAA,OAAO,EAAER,yBAAK,CAACC,GAAN,CAAU,MAAV,CAAA;AANI,CAAf,CAAA;;AASA,SAASQ,WAAT,CAAmBC,QAAnB,EAAoC;AAClC,EAAA,OAAO,CAACC,OAAD,EAAkBC,IAA4B,GAAA,OAA9C,KAAyD;AAC9D,IAAA,IAAI,CAACF,QAAL,EAAe,OAAOC,OAAP,CAAA;AACf,IAAA,OAAOb,QAAM,CAACc,IAAD,CAAN,CAAaD,OAAb,CAAP,CAAA;GAFF,CAAA;AAID,CAAA;;AAED,SAASE,MAAT,CAAgBhE,MAAhB,EAA8B;EAC5B,OAAO,CAAA,IAAA,EAAOA,MAAM,CAApB,EAAA,CAAA,CAAA;AACD,CAAA;;AAED,SAASiE,OAAT,CAAiBjE,MAAjB,EAA+B;AAC7B,EAAA,OAAOiD,QAAM,CAACC,KAAP,EAAkBlD,EAAAA,EAAAA,MAAM,EAAxB,CAAP,CAAA;AACD,CAAA;;AAED,SAASkE,eAAT,CAAyBhB,KAAzB,EAA6D;EAC3D,OAAOvD,KAAK,CAACC,OAAN,CAAcsD,KAAd,CACHc,GAAAA,MAAM,CACD,CAAAC,EAAAA,OAAO,CACR,OAAOf,KAAK,CAAC,CAAD,CAAZ,KAAoB,UAApB,GAAiCA,KAAK,CAAC,CAAD,CAAL,CAASD,QAAT,CAAjC,GAAoDC,KAAK,CAAC,CAAD,CADjD,CAEF,OAAAA,KAAK,CAAC,CAAD,GAHT,CADH,GAMHc,MAAM,CAACC,OAAO,CAACf,KAAD,CAAR,CANV,CAAA;AAOD,CAAA;;AAED,SAASiB,WAAT,CAAqBpF,KAArB,EAAqCqF,UAArC,EAA8D;EAC5D,OAAO,CACLC,SADK,EAELC,IAFK,EAGLP,IAAkB,GAAA,SAHb,KAIG;IACR,IAAI,CAAChF,KAAL,EAAY,OAAA;AACZ,IAAA,IAAI,CAACqF,UAAU,CAACtG,KAAhB,EAAuB,OAAA;AAEvB,IAAA,MAAMyG,GAAG,GAAM,CAAA3D,EAAAA,MAAM,CAACqC,QAAM,CAACc,IAAD,CAAN,CAAa,GAAb,CAAD,KAAuBM,SAAS,CAAA,CAAA,EAAIzD,MAAM,CAC7DqC,QAAM,CAACc,IAAD,CAAN,CAAaS,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAb,CAD6D,GAA/D,CAJQ;;IASRI,OAAO,CAACH,GAAR,CAAYA,GAAZ,CAAA,CAAA;GAbF,CAAA;AAeD;;AC/BD,SAASI,iBAAT,CAA2B;EACzBC,UADyB;EAEzBC,QAFyB;EAGzBxH,MAHyB;AAIzByH,EAAAA,MAAAA;AAJyB,CAA3B,EAKoB;AAAA,EAAA,IAAA,WAAA,CAAA;;EAClBF,UAAU,GAAA,CAAA,WAAA,GAAGA,UAAH,KAAA,IAAA,GAAA,WAAA,GAAiB,GAA3B,CAAA;AAEA,EAAA,MAAMG,aAAa,GAAGF,QAAQ,GAAGnI,YAAO,CAACmI,QAAD,CAAV,GAAuBG,OAAO,CAACC,GAAR,EAArD,CAAA;AAEA,EAAA,MAAMC,kBAAkB,GAAG7H,MAAH,IAAGA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,MAAM,CAAEA,MAAnC,CAAA;EAEA,IAAI2F,QAAQ,CAACkC,kBAAD,CAAZ,EACE,OAAO1C,qBAAqB,CAAC;AAE3B,EAAA,GAAGE,aAAa,CAACwC,kBAAD,CAFW;AAI3B,EAAA,GAAGxC,aAAa,CAACyC,qBAAD,CAJW,CAAD,CAA5B,CAAA;AAOF,EAAA,MAAMC,UAAU,GAAGF,kBAAkB,GACjC1I,YAAO,CAACoI,UAAD,EAAaM,kBAAb,CAD0B,GAEjCG,QAAQ,CAACN,aAAD,EAAgB,CAACO,CAAD,EAAIC,KAAJ,KAAa;AACnC,IAAA,IAAIA,KAAK,CAACnG,QAAN,CAAe,oBAAf,CAAJ,EAA0C;AACxC,MAAA,OAAO,oBAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAImG,KAAK,CAACnG,QAAN,CAAe,qBAAf,CAAJ,EAA2C;AACzC,MAAA,OAAO,qBAAP,CAAA;AACD,KAAA;AACF,GARO,CAFZ,CAAA;EAYA,MAAMoG,YAAY,GAAGC,OAAO,CAACL,UAAU,IAAIM,aAAU,CAACN,UAAD,CAAzB,CAA5B,CAAA;AAEA,EAAA,IAAIF,kBAAJ,EACEJ,MAAM,CAACU,YAAD,EAAe,CAAC;AAAEG,IAAAA,KAAAA;AAAF,GAAD,KACnB,CACE,CAAG/E,EAAAA,MAAM,CACP+E,KAAK,CACH,CAAA,sBAAA,EAAyBA,KAAK,CAC5B/E,MAAM,CAACsE,kBAAD,CADsB,EAE5B,YAF4B,CAGd,CAAA,aAAA,CAJb,CADE,CAON,CARL,CAAA,EASoD,CATpD,gDAAA,CAAA,CAAA,CAUE3F,IAVF,CAUO,MAVP,CADI,CAAN,CAAA;EAcF,MAAMqG,OAAO,GAAG;AAEd,EAAA,IAAIJ,YAAY,GAAG9C,aAAa,CAACmD,WAAY,CAACT,UAAD,CAAb,CAAhB,GAAuD,EAAvE,CAFc;AAId,EAAA,GAAG1C,aAAa,CAACyC,qBAAD,CAJF,CAAhB,CAAA;AAOA,EAAA,MAAMW,cAAc,GAAGtD,qBAAqB,CAACoD,OAAD,CAA5C,CAAA;AAEA,EAAA,OAAOE,cAAP,CAAA;AACD,CAAA;;AAED,SAASC,kBAAT,CAA4B,CAACC,IAAD,EAAO/G,KAAP,CAA5B,EAGC;AACC,EAAA,MAAMgH,eAAe,GAAc9G,oBAAoB,CAAC6G,IAAD,CAAvD,CAAA;AACA,EAAA,IAAI,CAACC,eAAL,EAAsB,OAAO,IAAP,CAAA;AAEtB,EAAA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BF,eAAlC,CAAA;AAEA,EAAA,IAAI,OAAOC,SAAP,KAAqB,UAAzB,EAAqC,OAAO,KAAP,CAAA;;AAErC,EAAA,IAAI,CAACA,SAAS,CAACjH,KAAD,CAAd,EAAuB;IACrB,MAAM,IAAImH,KAAJ,CAAUlC,eAAe,CAACtD,MAAM,CAACuF,YAAD,CAAP,CAAzB,CAAN,CAAA;AACD,GAAA;;AAED,EAAA,OAAO,IAAP,CAAA;AACD,CAAA;;AAED,SAASE,aAAT,CACEhJ,MADF,EAEEiJ,MAFF,EAE0C;AAExC,EAAA,MAAMC,MAAM,GAAkB,EAC5B,GAAG3H,kBAAkB,CAAC0H,MAAD,CADO;IAE5B,GAAGjJ,MAAAA;GAFL,CAAA;AAIA,EAAA,OAAOkJ,MAAP,CAAA;AACD,CAAA;;AAED,SAASC,sBAAT,CACEnJ,MADF,EAEEiJ,MAFF,EAE0C;EAExC,MAAMlC,UAAU,GAAGiC,aAAa,CAAChJ,MAAD,EAASiJ,MAAT,CAAhC,CAFwC;;AAIxC,EAAA,OAAOG,MAAM,CAACC,OAAP,CAAetC,UAAf,CAAA,CAA2BuC,MAA3B,CAAkC,CAACC,MAAD,EAASZ,IAAT,KAAiB;IACxD,MAAMa,aAAa,GAAGb,IAAtB,CAAA;IAIA,OAAO,EACL,GAAGY,MADE;AAEL,MAAA,IAAIb,kBAAkB,CAACc,aAAD,CAAlB,IAAqC;AACvC,QAAA,CAACA,aAAa,CAAC,CAAD,CAAd,GAAoBA,aAAa,CAAC,CAAD,CAAA;OADnC,CAAA;KAFF,CAAA;GALK,EAWJ,EAXI,CAAP,CAAA;AAYD;;ACjID,SAASC,aAAT,CACEC,IADF,EAEEC,QAFF,EAKc;AAEZ,EAAA,IAAIC,UAAJ,CAAA;AACA,EAAA,MAAMC,UAAU,GAAGH,IAAI,CAACI,MAAL,GAAc,CAAjC,CAAA;EACA,MAAMC,QAAQ,GAAGL,IAAI,CAACM,IAAL,CAAU,CAACD,QAAD,EAAWE,KAAX,KAAoB;AAC7C,IAAA,MAAMC,MAAM,GAAGD,KAAK,KAAKJ,UAAzB,CAAA;AACAD,IAAAA,UAAU,GAAGD,QAAQ,CAACI,QAAD,EAAW;MAAEE,KAAF;AAASC,MAAAA,MAAAA;AAAT,KAAX,CAArB,CAAA;IACA,OAAO9B,OAAO,CAACwB,UAAD,CAAd,CAAA;AACD,GAJgB,CAAjB,CAAA;AAMA,EAAA,OAAO,CAACA,UAAD,EAAaG,QAAb,CAAP,CAAA;AACD,CAAA;;AAED,SAASI,WAAT,CACEC,QADF,EAEE7C,UAFF,EAEoB;EAElB,MAAM,GAAG3F,KAAH,CAAY6H,GAAAA,aAAa,CAC7BrH,OAAO,CAACgI,QAAD,CADsB,EAE7BC,gBAAgB,IAAIhC,aAAU,CAAClJ,YAAO,CAACoI,UAAD,EAAkB,KAAA8C,gBAAkB,CAAA,CAApC,CAAR,CAFD,CAA/B,CAAA;AAIA,EAAA,OAAOzI,KAAP,CAAA;AACD,CAAA;;AAED,SAAS0I,eAAT,CAAyBC,WAAzB,EAA8C/C,QAA9C,EAA8D;AAC5D,EAAA,MAAMgD,QAAQ,GAAGC,UAAK,CAACjD,QAAD,CAAL,CAAgBkD,GAAjC,CAAA;AACA,EAAA,OAAOC,aAAQ,CAACH,QAAD,EAAWD,WAAX,CAAf,CAAA;AACD,CAAA;;AAED,SAASK,eAAT,CAAyB;EACvBrD,UADuB;EAEvBC,QAFuB;AAGvBxH,EAAAA,MAAAA;AAHuB,CAAzB,EAQC;AAAA,EAAA,IAAA,WAAA,EAAA,qBAAA,CAAA;;EACCuH,UAAU,GAAA,CAAA,WAAA,GAAGA,UAAH,KAAA,IAAA,GAAA,WAAA,GAAiB,GAA3B,CAAA;EAEA,MAAMsD,eAAe,GAAG7K,CAAAA,qBAAAA,GAAAA,MAAM,CAACmB,cAAV,oCAA4B,CAC/C,oBAD+C,EAE/C,oBAF+C,CAAjD,CAAA;AAKA,EAAA,MAAM4G,UAAU,GAAGoC,WAAW,CAACU,eAAD,EAAkBtD,UAAlB,CAA9B,CAAA;EACA,IAAI,CAACQ,UAAL,EACE,MAAM,IAAIgB,KAAJ,CACJlC,eAAe,CAEX,CAAA7G,qCAAAA,EAAAA,MAAM,CAACmB,cAAP,IACQoC,CAAAA,EAAAA,MAAM,CAACvD,MAAM,CAACmB,cAAR,CAA0B,CAAA,CAAA,CADxC,GAEI,kBACgF,CALzE,oFAAA,CAAA,CADX,CAAN,CAAA;AAUF,EAAA,OAAOmJ,eAAe,CAACvC,UAAD,EAAaP,QAAb,CAAtB,CAAA;AACD;;ACrED;;;;;;;;AAQG;AAEH,MAAMsD,WAAW,GAAG;EAClB,mBAAqB,EAAA;AACnB1J,IAAAA,MAAM,EAAE;AAAEf,MAAAA,MAAM,EAAE,SAAV;AAAqBC,MAAAA,IAAI,EAAE,mBAAA;KADhB;AAEnBF,IAAAA,GAAG,EAAE;AAAEC,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,IAAI,EAAE,mBAAA;KAFT;AAGnBM,IAAAA,MAAM,EAAE;AAAEP,MAAAA,MAAM,EAAE,mBAAV;AAA+BC,MAAAA,IAAI,EAAE,mBAAA;AAArC,KAAA;GAJQ;AAMlByK,EAAAA,OAAO,EAAE;AACP3J,IAAAA,MAAM,EAAE;AAAEf,MAAAA,MAAM,EAAE,SAAV;AAAqBC,MAAAA,IAAI,EAAE,iBAAA;KAD5B;AAEPF,IAAAA,GAAG,EAAE;AAAEC,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,IAAI,EAAE,gBAAA;KAFrB;AAGPM,IAAAA,MAAM,EAAE;AAAEP,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,IAAI,EAAE,gBAAA;AAA1B,KAAA;GATQ;AAWlB0K,EAAAA,MAAM,EAAE;AACN5J,IAAAA,MAAM,EAAE;AAAEf,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,IAAI,EAAE,QAAA;KAD5B;AAENF,IAAAA,GAAG,EAAE;AAAEC,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,IAAI,EAAE,QAAA;KAFtB;AAGNM,IAAAA,MAAM,EAAE;AAAEP,MAAAA,MAAM,EAAE,oBAAV;AAAgCC,MAAAA,IAAI,EAAE,eAAA;AAAtC,KAAA;GAdQ;AAgBlB2K,EAAAA,QAAQ,EAAE;AACR7J,IAAAA,MAAM,EAAE;AAAEf,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,IAAI,EAAE,iBAAA;KAD1B;AAERF,IAAAA,GAAG,EAAE;AAAEC,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,IAAI,EAAE,iBAAA;KAFpB;AAGRM,IAAAA,MAAM,EAAE;AAAEP,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,IAAI,EAAE,iBAAA;AAA1B,KAAA;AAHA,GAAA;AAhBQ,CAApB;;ACVe,YAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;ACKjH,SAAS4K,WAAT,CACEzC,cADF,EACgC;AAK9B,EAAA,SAAS0C,cAAT,CAAwB3L,IAAxB,EAAwC4L,YAAxC,EAA6D;AAC3D,IAAA,OAAOC,GAAG,CAAC5C,cAAD,EAAiBjJ,IAAjB,EAAuB4L,YAAvB,CAAV,CAAA;AACD,GAAA;;EAED,SAASE,iBAAT,CACE9L,IADF,EAEE4L,YAFF,EAGEG,OAAO,GAAG,EAHZ,EAGc;IAEZ,MAAM,CAACC,QAAD,EAAW,GAAGC,QAAd,CAA0B9G,GAAAA,MAAM,CAACnF,IAAD,CAAtC,CAAA;IAEA,MAAMoC,KAAK,GAAGuJ,cAAc,CAC1B3L,IAAI,GAAG,CAAC,OAAD,EAAUgM,QAAV,EAAoB,GAAGC,QAAvB,CAAH,GAAsC,CAAC,OAAD,CADhB,EAE1BL,YAF0B,CAA5B,CAAA;IAIA,OAAOM,aAAa,CAACzG,mBAAmB,CAACuG,QAAD,CAAnB,CAA8B5J,KAA9B,EAAqC2J,OAArC,CAAD,CAApB,CAAA;AACD,GAAA;;AAED,EAAA,MAAMI,GAAG,GAAGvC,MAAM,CAACwC,MAAP,CACV,CAACpM,IAAD,EAAe4L,YAAf,KACEE,iBAAiB,CAAC9L,IAAD,EAAO4L,YAAP,CAFT,EAGV;IACES,SAAS,EAAE,CAACrM,IAAD,EAAesM,YAAf,KACTR,iBAAiB,CAAC9L,IAAD,EAAOS,SAAP,EAAkB;AAAE6L,MAAAA,YAAAA;KAApB,CAAA;AAFrB,GAHU,CAAZ,CAAA;AASA,EAAA,OAAOH,GAAP,CAAA;AACD,CAAA;;AAED,SAASD,aAAT,CACEK,MADF,EACiC;AAE/B,EAAA,IAAI,CAACpG,QAAQ,CAACoG,MAAD,CAAb,EAAuB,OAAOA,MAAP,CAAA;AACvB,EAAA,MAAMC,WAAW,GAA6B5C,MAAM,CAACC,OAAP,CAAe0C,MAAf,CAAuB/J,CAAAA,GAAvB,CAC5C,CAAC,CAACiK,CAAD,EAAI7I,CAAJ,CAAD,KAA+B,CAC7B6I,CAD6B;EAG5BtG,QAAQ,CAACvC,CAAD,CAAR,IAAesI,aAAa,CAACtI,CAAD,CAA7B,IACG,OAAOA,CAAP,KAAa,QAAb,IAAyBG,MAAM,CAACH,CAAD,CADlC,IAEEA,CAL2B,CADa,CAA9C,CAAA;AASA,EAAA,OAAOgG,MAAM,CAAC8C,WAAP,CAAmBF,WAAnB,CAAP,CAAA;AACD;;ACpDD,SAASG,YAAT,CACEC,WAAW,GAAGrD,KADhB,EAEEsD,QAAQ,GAAG,KAFb,EAGExL,YAAY,GAAG,IAHjB,EAGqB;AAEnB,EAAA,OAAO,CACLyL,UADK,EAEL7F,OAFK,KAGG;AACR,IAAA,IAAI4F,QAAJ,EAAc,OAAA;;AAEd,IAAA,IAAI,OAAOC,UAAP,KAAsB,QAA1B,EAAoC;AAClC,MAAA,MAAM,IAAIF,WAAJ,EAAuBE,IAAAA,EAAAA,UAAU,IAAjC,CAAN,CAAA;AACD,KAAA;;AAED,IAAA,MAAMC,cAAc,GAAG;MAAEjE,KAAK,EAAE/B,WAAS,CAAC1F,YAAD,CAAA;KAAzC,CAAA;;AAEA,IAAA,IAAI,OAAOyL,UAAP,KAAsB,UAA1B,EAAsC;MACpC,MAAM,IAAIF,WAAJ,CAAuB,CAAA,IAAA,EAAAE,UAAU,CAACC,cAAD,CAAoB,CAAA,EAAA,CAArD,CAAN,CAAA;AACD,KAAA;;AAED,IAAA,IAAID,UAAJ,EAAgB,OAAA;;AAEhB,IAAA,IAAI,OAAO7F,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,MAAA,MAAM,IAAI2F,WAAJ,EAAuB3F,IAAAA,EAAAA,OAAO,IAA9B,CAAN,CAAA;AACD,KAAA;;AAED,IAAA,IAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;MACjC,MAAM,IAAI2F,WAAJ,CAAuB,CAAA,IAAA,EAAA3F,OAAO,CAAC8F,cAAD,CAAoB,CAAA,EAAA,CAAlD,CAAN,CAAA;AACD,KAAA;GAxBH,CAAA;AA0BD;;AClCD;;AAkBA,SAASC,YAAT,CACEC,cADF,EAEExD,MAFF,EAE0B;AAExB,EAAA,OACGA,MAAM,CAACjJ,MAAP,IAAiBiJ,MAAM,CAACjJ,MAAP,CAAciB,MAAd,KAAyBwL,cAA3C,IACAxD,MAAM,CAACyD,YAAP,CAAoBpM,IAApB,CAAyByB,QAAzB,CAAkC0K,cAAlC,CADA,IAEAxD,MAAM,CAAC0D,SAAP,CAAiBrM,IAAjB,CAAsByB,QAAtB,CAA+B0K,cAA/B,CAHF,CAAA;AAKD,CAAA;;AAQD,SAASG,cAAT,CAAwB3D,MAAxB,EAAgD;EAC9C,OAAO;AACL4D,IAAAA,SAAS,EAAEL,YAAY,CAAC,SAAD,EAAYvD,MAAZ,CADlB;AAEL6D,IAAAA,kBAAkB,EAAEN,YAAY,CAAC,mBAAD,EAAsBvD,MAAtB,CAF3B;AAGLzH,IAAAA,QAAQ,EAAEgL,YAAY,CAAC,QAAD,EAAWvD,MAAX,CAHjB;AAILxH,IAAAA,UAAU,EAAE+K,YAAY,CAAC,UAAD,EAAavD,MAAb,CAAA;GAJ1B,CAAA;AAMD,CAAA;;AASD,SAAS8D,eAAT,CAAyB;EACvBxF,UADuB;EAEvBC,QAFuB;AAGvBxH,EAAAA,MAAAA;AAHuB,CAAzB,EAImB;AACjB,EAAA,MAAMgN,UAAU,GACb,CAAAhN,MAAM,IAAN,IAAA,GAAA,KAAA,CAAA,GAAAA,MAAM,CAAEoB,MAAR,KAAkBpB,MAAnB,IACC,CAAAA,MAAM,IAAN,IAAA,GAAA,KAAA,CAAA,GAAAA,MAAM,CAAEiB,MAAR,KAAkB6J,WAAW,CAAC9K,MAAM,CAACiB,MAAR,CAD9B,IAEA6J,WAAW,CAACC,OAHd,CAAA;;AAKA,EAAA,IAAI,OAAOiC,UAAU,CAAC5L,MAAlB,KAA6B,QAAjC,EAA2C;IACzC,OAAO;AAAEf,MAAAA,MAAM,EAAE,SAAV;MAAqBC,IAAI,EAAE0M,UAAU,CAAC5L,MAAAA;KAA7C,CAAA;AACD,GAAA;;AAED,EAAA,IAAIpB,MAAM,IAAIA,MAAM,CAACiB,MAAP,KAAkB,UAAhC,EAA4C;IAC1C,MAAMgM,YAAY,GAAGrC,eAAe,CAAC;MAAErD,UAAF;MAAcC,QAAd;AAAwBxH,MAAAA,MAAAA;AAAxB,KAAD,CAApC,CAAA;;AACA,IAAA,IAAIiN,YAAY,IAAID,UAAU,CAAC5L,MAA/B,EAAuC;AACrC;AACA4L,MAAAA,UAAU,CAAC5L,MAAX,CAAkBd,IAAlB,GAAyB2M,YAAzB,CAAA;AACD,KAAA;AACF,GAAA;;EAED,OAAOD,UAAU,CAAC5L,MAAlB,CAAA;AACD,CAAA;;AAED,SAAS8L,YAAT,CAAsB;EACpB3F,UADoB;EAEpBC,QAFoB;AAGpBxH,EAAAA,MAAAA;AAHoB,CAAtB,EAImB;AACjB,EAAA,MAAMgN,UAAU,GACb,CAAAhN,MAAM,IAAN,IAAA,GAAA,KAAA,CAAA,GAAAA,MAAM,CAAEI,GAAR,KAAeJ,MAAhB,IACC,CAAAA,MAAM,IAAN,IAAA,GAAA,KAAA,CAAA,GAAAA,MAAM,CAAEiB,MAAR,KAAkB6J,WAAW,CAAC9K,MAAM,CAACiB,MAAR,CAD9B,IAEA6J,WAAW,CAACC,OAHd,CAAA;;AAKA,EAAA,IAAI,OAAOiC,UAAU,CAAC5M,GAAlB,KAA0B,QAA9B,EAAwC;IACtC,OAAO;AAAEC,MAAAA,MAAM,EAAE,KAAV;MAAiBC,IAAI,EAAE0M,UAAU,CAAC5M,GAAAA;KAAzC,CAAA;AACD,GAAA;;AAED,EAAA,IAAIJ,MAAM,IAAIA,MAAM,CAACiB,MAAP,KAAkB,UAAhC,EAA4C;IAC1C,MAAMgM,YAAY,GAAGrC,eAAe,CAAC;MAAErD,UAAF;MAAcC,QAAd;AAAwBxH,MAAAA,MAAAA;AAAxB,KAAD,CAApC,CAAA;;AACA,IAAA,IAAIiN,YAAY,IAAID,UAAU,CAAC5M,GAA/B,EAAoC;AAClC;AACA4M,MAAAA,UAAU,CAAC5M,GAAX,CAAeE,IAAf,GAAsB2M,YAAtB,CAAA;AACD,KAAA;AACF,GAAA;;EAED,OAAOD,UAAU,CAAC5M,GAAlB,CAAA;AACD,CAAA;;AAED,SAAS+M,eAAT,CAAyBnN,MAAzB,EAA2C;EACzC,MAAMgN,UAAU,GACbhN,MAAM,CAACY,MAAP,IAAiBZ,MAAlB,IACCA,MAAM,CAACiB,MAAP,IAAiB6J,WAAW,CAAC9K,MAAM,CAACiB,MAAR,CAD7B,IAEA6J,WAAW,CAACC,OAHd,CAAA;EAIA,OAAOiC,UAAU,CAACpM,MAAlB,CAAA;AACD,CAAA;;AAED,SAASwM,iBAAT,CAA2BnE,MAA3B,EAAoD;AAAA,EAAA,IAAA,qBAAA,CAAA;;EAClD,MAAM;IAAE1B,UAAF;IAAcC,QAAd;IAAwBxH,MAAxB;AAAgC0B,IAAAA,KAAK,GAAG,KAAxC;AAA+C0K,IAAAA,WAAAA;AAA/C,GAAA,GAA+DnD,MAArE,CAAA;AACA,EAAA,MAAMxB,MAAM,GAAG0E,YAAY,CAACC,WAAD,EAAc,KAAd,EAAqBpM,MAArB,IAAA,IAAA,GAAA,KAAA,CAAA,GAAqBA,MAAM,CAAEa,YAA7B,CAA3B,CAAA;AACA,EAAA,MAAMwM,gBAAgB,GAAG;IACvB9F,UADuB;IAEvBE,MAFuB;AAGvBD,IAAAA,QAAQ,EAAEA,QAAF,IAAEA,IAAAA,GAAAA,QAAF,GAAc,EAHC;AAIvBxH,IAAAA,MAAAA;GAJF,CAAA;AAMA,EAAA,MAAM0M,YAAY,GAAGK,eAAe,CAACM,gBAAD,CAApC,CAAA;AACA,EAAA,MAAMV,SAAS,GAAGO,YAAY,CAACG,gBAAD,CAA9B,CAAA;EACA,MAAM5E,cAAc,4BAClBQ,MAAM,CAACR,cADW,KACOnB,IAAAA,GAAAA,qBAAAA,GAAAA,iBAAiB,CAAC+F,gBAAD,CAD5C,CAAA;EAGA,MAAMC,WAAW,GAAGV,cAAc,CAAC;IAAE5M,MAAF;IAAU2M,SAAV;AAAqBD,IAAAA,YAAAA;AAArB,GAAD,CAAlC,CAAA;EACA,MAAM3F,UAAU,GAAGoC,sBAAsB,CAACnJ,MAAD,EAAS,EAAE,GAAGsN,WAAL;AAAkB5L,IAAAA,KAAAA;AAAlB,GAAT,CAAzC,CAAA;AACA,EAAA,MAAM6L,YAAY,GAAG;AACnBnM,IAAAA,MAAM,EAAEsL,YADW;AAEnBtM,IAAAA,GAAG,EAAEuM,SAFc;AAGnB/L,IAAAA,MAAM,EAAEuM,eAAe,CAACnN,MAAD,IAACA,IAAAA,GAAAA,MAAD,GAAW,EAAX,CAAA;GAHzB,CAAA;EAMA,OAAO;IACL0B,KADK;IAEL+F,MAFK;AAGLhH,IAAAA,KAAK,EAAEqG,WAAW,CAACpF,KAAD,EAAQqF,UAAR,CAHb;AAILzC,IAAAA,KAAK,EAAE4G,WAAW,CAACzC,cAAD,CAJb;AAKL+E,IAAAA,eAAe,EAAE3I,aAAa,CAAC4D,cAAD,CALzB;IAML6E,WANK;IAOL7E,cAPK;IAQL1B,UARK;IASLqF,WATK;AAULmB,IAAAA,YAAAA;GAVF,CAAA;AAYD;;AC/ID,MAAME,UAAU,GAAG,SAAnB,CAAA;AAEwB,SAAAC,QAAA,CAAS/K,MAAT,EAAuB;AAC7C,EAAA,OAAOA,MAAP,IAAOA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,MAAM,CAAEC,OAAR,CAAgB6K,UAAhB,EAA4B,CAACxF,CAAD,EAAI0F,GAAJ,KAAoBA,GAAG,CAACC,WAAJ,EAAhD,CAAP,CAAA;AACD;;ACFD,MAAMC,WAAW,GAAG,gBAApB,CAAA;AACA,MAAMC,YAAY,GAAG,QAArB,CAAA;;AAEA,SAASC,iBAAT,CACEnM,KADF,EAEE;EACE6F,MADF;AAEEnD,EAAAA,KAAAA;AAFF,CAFF,EAKmE;AAEjE,EAAA,MAAM0J,KAAK,GAAGH,WAAW,CAACI,IAAZ,CAAiBrM,KAAjB,CAAd,CAAA;AACA,EAAA,IAAI,CAACoM,KAAL,EAAY,OAAOpM,KAAP,CAAA;AAEZ,EAAA,MAAMsM,aAAa,GAAGF,KAAK,CAAC,CAAD,CAA3B,CAAA;AACA,EAAA,MAAMG,eAAe,GAAGH,KAAK,CAAC,CAAD,CAAL,CAASpL,OAAT,CAAiBkL,YAAjB,EAA+B,EAA/B,CAAA,CAAmCjL,IAAnC,EAAxB,CAAA;EAEA,MAAM,CAACuL,IAAD,EAAOC,MAAP,CAAA,GAAiBF,eAAe,CAACG,KAAhB,CAAsB,GAAtB,CAAvB,CAAA;AACA,EAAA,IAAIC,UAAU,GAAGjK,KAAK,CAAC8J,IAAD,EAAOC,MAAP,CAAtB,CAAA;AAEA5G,EAAAA,MAAM,CAACW,OAAO,CAACmG,UAAD,CAAR,EAAsB,CAAC;AAAEjG,IAAAA,KAAAA;AAAF,GAAD,KAC1BA,KAAK,CACE,CAAA,EAAA,EAAAA,KAAK,CACR6F,eADQ,EAER,YAFQ,CAGT,CAAA,4CAAA,CAJE,CADD,CAAN,CAXiE;;AAqBjE,EAAA,IAAI,OAAOI,UAAP,KAAsB,QAAtB,IAAkC,SAAA,IAAaA,UAAnD,EAA+D;IAC7DA,UAAU,GAAGA,UAAU,CAAC/J,OAAxB,CAAA;AACD,GAAA;;AAED,EAAA,MAAMgK,aAAa,GAAG5M,KAAK,CAACgB,OAAN,CAAcsL,aAAd,EAA6B3K,MAAM,CAACgL,UAAD,CAAnC,CAAtB,CAAA;AAEA,EAAA,OAAOC,aAAP,CAAA;AACD;;ACpCD,MAAMC,yBAAyB,GAAG,SAAlC,CAAA;AACA,MAAMC,uBAAuB,GAAG,QAAhC,CAAA;AACA,MAAMC,aAAa,GAAG,mBAAtB,CAAA;AACA,MAAMC,qBAAmB,GAAG,SAA5B,CAAA;AACA,MAAMC,wBAAwB,GAAG,qBAAjC,CAAA;AAYA,MAAMC,oBAAoB,GAAyB,CAChDxL,QAAD,IAAsBA,QAAQ,CAACT,IAAT,EAD2B;AAIjD;AACA,CAACS,QAAD,EAAW;EAAEyL,gBAAF;EAAoB7N,WAApB;AAAiC8N,EAAAA,QAAAA;AAAjC,CAAX,KAAkE;AAChE,EAAA,MAAMrD,GAAG,GAAGrI,QAAQ,CAACV,OAAT,CACVmM,gBADU,EAEV,CAACf,KAAD,EAAQiB,EAAR,EAAYC,MAAZ,KAA8B;AAC5B,IAAA,IAAI5L,QAAQ,KAAK0K,KAAjB,EAAwB,OAAO,EAAP,CAAA;;IAExB,IACE,IAAA,CAAKmB,IAAL,CAAU7L,QAAQ,CAAC4L,MAAM,GAAG,CAAV,CAAlB,CAAA,IACA5L,QAAQ,CAAC4L,MAAM,GAAGlB,KAAK,CAAClE,MAAhB,CAAR,KAAoC,GAFtC,EAGE;AACA,MAAA,IAAI5I,WAAW,IAAIoC,QAAQ,CAAC4L,MAAM,GAAG,CAAV,CAAR,KAAyBjP,SAA5C,EAAuD,OAAO,GAAP,CAAA;MACvD,OAAO,EAAP,CAFA;AAGD,KAAA;;AAED,IAAA,OAAOiP,MAAM,KAAK,CAAX,GAAe,EAAf,GAAoB,GAA3B,CAAA;GAbQ,CAAZ,CADgE;AAmBhE;;EACA,IAAIF,QAAQ,IAAIrD,GAAG,KAAKrI,QAApB,IAAgCA,QAAQ,CAACvB,QAAT,CAAsB,CAAAiN,CAAAA,EAAAA,UAAtB,CAApC,EACE,OAAO1L,QAAQ,CAACV,OAAT,CAAiB,CAAA,CAAA,EAAIoM,QAAU,CAAA,CAA/B,EAAiC,EAAjC,CAAP,CAAA;AAEF,EAAA,OAAOrD,GAAP,CAAA;AACD,CA7BgD;AAgChDrI,QAAD,IAAsBA,QAAQ,CAACV,OAAT,CAAiBiM,wBAAjB,EAA2C,KAA3C,CAhC2B;AAmChDvL,QAAD,IAAsBA,QAAQ,CAACV,OAAT,CAAiBgM,qBAAjB,EAAsC,IAAtC,CAnC2B;AAsCjD;AACCtL,QAAD,IAAqB;EACnB,IAAIA,QAAQ,CAACvB,QAAT,CAAkB,GAAlB,CAAJ,EAA4B,OAAOuB,QAAP,CAAA;AAE5B,EAAA,MAAM8L,iBAAiB,GAAGX,yBAAyB,CAACU,IAA1B,CAA+B7L,QAA/B,CAA1B,CAAA;AACA,EAAA,IAAI,CAAC8L,iBAAL,EAAwB,OAAO9L,QAAP,CAJL;AAOnB;;EACA,IAAIoL,uBAAuB,CAACS,IAAxB,CAA6B7L,QAA7B,CAAJ,EAA4C,OAAOA,QAAP,CAAA;EAE5C,OAAO,CAAA,CAAA,EAAIA,QAAQ,CAAnB,CAAA,CAAA;AACD,CAlDgD;AAqDhDA,QAAD,IAAsBA,QAAQ,CAACV,OAAT,CAAiB+L,aAAjB,EAAgC,QAAhC,CArD2B,EAuDhDrL,QAAD,IAAsBA,QAAQ,CAACT,IAAT,EAvD2B,CAAnD,CAAA;;AA0DA,SAASwM,eAAT,CACE/L,QADF,EAEE2F,MAFF,EAEoD;AAElD;EACA,IAAI3F,QAAQ,KAAK,GAAjB,EAAsB;AACpB2F,IAAAA,MAAM,CAACxI,KAAP,CAAa,uBAAb,EAAsC6C,QAAtC,CAAA,CAAA;AACA,IAAA,OAAO,EAAP,CAAA;AACD,GAAA;;AAED,EAAA,KAAK,MAAMgM,IAAX,IAAmBR,oBAAnB,EAAyC;AACvCxL,IAAAA,QAAQ,GAAGgM,IAAI,CAAChM,QAAD,EAAW2F,MAAX,CAAf,CAAA;AACD,GAAA;;AAED,EAAA,OAAO3F,QAAP,CAAA;AACD;;AC1FD,MAAMiM,kBAAkB,GAAG,sBAA3B,CAAA;AACA,MAAMC,wBAAwB,GAAG,6BAAjC,CAAA;AACA,MAAMC,sBAAsB,GAAG,IAAIC,GAAJ,CAAQ,CACrC,SADqC,EAErC,eAFqC,EAGrC,UAHqC,EAIrC,WAJqC,EAKrC,qBALqC,EAMrC,QANqC,EAOrC,WAPqC,EAQrC,WARqC,CAAR,CAA/B,CAAA;AAUA,MAAMC,cAAc,GAAG,UAAvB,CAAA;AACA,MAAMC,UAAQ,GAAG,KAAjB,CAAA;AACA,MAAMC,cAAc,GAAG,IAAvB,CAAA;AACA,MAAMC,UAAQ,GAAG,GAAjB,CAAA;AAEA,MAAMC,MAAM,GAAG,MAAf;;ACFA,MAAMC,SAAS,GAAG,OAAlB,CAAA;AACA,MAAMC,SAAS,GAAG,UAAlB,CAAA;AACA,MAAMrB,mBAAmB,GAAG,SAA5B,CAAA;AACA,MAAMsB,kBAAkB,GAAG,OAA3B,CAAA;;AAEA,SAASC,kBAAT,CAA4BvO,KAA5B,EAA2CqH,MAA3C,EAAgE;AAAA,EAAA,IAAA,eAAA,CAAA;;AAC9D,EAAA,IAAIA,MAAM,CAACmH,UAAP,KAAsB,IAA1B,EAAgC,OAAOxO,KAAP,CAAA;EAChC,IAAI,CAACqH,MAAM,CAACoH,YAAZ,EAA0B,OAAOzO,KAAP,CAFoC;;AAK9D,EAAA,IAAIqH,MAAM,CAACoH,YAAP,IAAuB,oBAAApH,MAAM,CAACsC,OAAP,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,eAAA,CAAgB+E,gBAAhB,MAAqC,KAAhE,EACE,OAAO1O,KAAP,CAAA;EAEF,OAAO,CAAA,EAAGA,KAAK,CAAf,WAAA,CAAA,CAAA;AACD,CAAA;;AAED,SAAS2O,iBAAT,CAA2B3O,KAA3B,EAAwC;AACtC,EAAA,OACEA,KAAK,CACFgB,OADH,CACWgM,mBADX,EACgC,IADhC,CAEE;AAFF,GAGGhM,OAHH,CAGWsN,kBAHX,EAG+B,IAH/B,CADF,CAAA;AAMD,CAAA;;AAED,MAAMM,mBAAmB,GAAG,CAC1BzC,iBAD0B,EAE1BoC,kBAF0B,EAG1BI,iBAH0B,CAA5B,CAAA;;AAMA,SAASE,kBAAT,CAA4B7O,KAA5B,EAA2CqH,MAA3C,EAAgE;EAC9D,MAAMyH,aAAa,GAAG9O,KAAtB,CAAA;;AAEA,EAAA,KAAK,MAAM0N,IAAX,IAAmBkB,mBAAnB,EAAwC;AACtC5O,IAAAA,KAAK,GAAG0N,IAAI,CAAC1N,KAAD,EAAQqH,MAAR,CAAZ,CAAA;AACD,GAAA;;EAED,IAAIrH,KAAK,KAAK8O,aAAd,EACEzH,MAAM,CAACxI,KAAP,CAAa,2BAAb,EAA0C;AACxCkQ,IAAAA,GAAG,EAAED,aADmC;AAExCE,IAAAA,GAAG,EAAEhP,KAAAA;GAFP,CAAA,CAAA;AAKF,EAAA,OAAOA,KAAP,CAAA;AACD,CAAA;;AAED,SAASiP,eAAT,CACEC,IADF,EAEE7H,MAFF,EAE2B;AAEzB,EAAA,MAAM8H,mBAAmB,GAAGD,IAAI,CAACxN,QAAL,CAAcV,OAAd,CAAsBqN,SAAtB,EAAiC,IAAjC,CAA5B,CAFyB;;AAGzB,EAAA,MAAM3M,QAAQ,GAAGmC,QAAQ,CAACsL,mBAAD,CAAR,CAA8BnO,OAA9B,CAAsCgN,UAAtC,EAAgD,GAAhD,CAAjB,CAAA;EAEA,OAAO,CAACtM,QAAD,EAAW0N,iBAAiB,CAACF,IAAI,CAACG,KAAN,EAAahI,MAAb,CAA5B,CAAP,CAAA;AAID,CAAA;;AAED,SAASiI,yBAAT,CACE7N,IADF,EAEEzB,KAFF,EAGEqH,MAHF,EAG2B;EAEzB,IAAI5F,IAAI,KAAKsM,cAAb,EAA6B;AAC3B,IAAA,IAAI1G,MAAM,CAACkI,sBAAP,KAAkC,KAAtC,EAA6C,OAAA;AAC7C,IAAA,OAAO5B,kBAAP,CAAA;AACD,GAAA;;EAED,MAAM6B,GAAG,GAAGxP,KAAK,CAACgB,OAAN,CAAcoN,SAAd,EAAyB,GAAzB,CAAZ,CAPyB;;EAUzB,IAAI3M,IAAI,KAAK,QAAb,EAAuB;AACrB,IAAA,MAAMgO,YAAY,GAAGC,uBAAG,CAACrI,MAAD,EAAS,8BAAT,CAAxB,CAAA;AAIA,IAAA,QAA6BoI,mBAAAA,EAAAA,YAAY,CAACD,GAAD,EAAzC,CAAA,CAAA,CAAA;AACD,GAAA;;AAED,EAAA,OAAO,IAAI/N,IAAQ,CAAA,CAAA,EAAA+N,IAAZ,CAAA,CAAkBvO,IAAlB,EAAP,CAAA;AACD,CAAA;;AAED,MAAM0O,SAAS,GAAG;AAChBC,EAAAA,IAAI,CAACA,IAAD,EAAsBvI,MAAtB,EAA+C;AACjD,IAAA,MAAMwI,QAAQ,GAAGD,IAAI,CAACE,IAAL,CAAUC,UAAV,CAAqB,IAArB,IACbH,IAAI,CAACE,IADQ,GAEbhE,QAAQ,CAAC8D,IAAI,CAACE,IAAN,CAFZ,CAAA;AAIA,IAAA,MAAM9P,KAAK,GACT4P,IAAI,CAACE,IAAL,CAAUC,UAAV,CAAqB,IAArB,CAAA,IAA8BH,IAAI,CAAC5P,KAAL,KAAe,GAA7C,GACI4N,wBADJ;MAEIiB,kBAAkB,CAACe,IAAI,CAAC5P,KAAN,EAAa,EAAE,GAAGqH,MAAL;MAAauI,IAAb;AAAmBC,MAAAA,QAAAA;AAAnB,KAAb,CAHxB,CAAA;AAKA,IAAA,IAAI7P,KAAK,KAAK,IAAd,EAAoB,OAV6B;AAajD;AACA;;AACA,IAAA,IACE6P,QAAQ,KAAK,gBAAb,KACC7P,KAAK,KAAK,MAAV,IAAoBA,KAAK,KAAK,iBAD/B,CADF,EAIE,OAAO;AACLgQ,MAAAA,oBAAoB,EAAEhQ,KADjB;AAEL,MAAA,CAAC6P,QAAD,GAAY7P,KAAAA;KAFd,CAAA;IAKF,OAAO;AAAE,MAAA,CAAC6P,QAAD,GAAY7P,KAAAA;KAArB,CAAA;GAzBc;;AA2BhB;AACAkP,EAAAA,IAAI,CAACA,IAAD,EAAe7H,MAAf,EAAwC;AAC1C,IAAA,IAAI,CAAC6H,IAAI,CAACxN,QAAV,EAAoB;MAClB,IAAIwN,IAAI,CAACG,KAAT,EAAgB;QACd,MAAMY,MAAM,GAAGb,iBAAiB,CAACF,IAAI,CAACG,KAAN,EAAahI,MAAb,CAAhC,CAAA;AACAA,QAAAA,MAAM,CAACxI,KAAP,CAAa,uCAAb,EAAsDoR,MAAtD,CAAA,CAAA;AACA,QAAA,OAAOA,MAAP,CAAA;AACD,OAAA;;AAED5I,MAAAA,MAAM,CAACxI,KAAP,CAAa,2BAAb,EAA0CqQ,IAA1C,EAAgD,OAAhD,CAAA,CAAA;AACA,MAAA,OAAA;AACD,KAAA;;IAED,IAAI,CAACxN,QAAD,EAAWuO,MAAX,CAAA,GAAqBhB,eAAe,CAACC,IAAD,EAAO7H,MAAP,CAAxC,CAAA;AAEA,IAAA,IAAI3F,QAAQ,IAAIuO,MAAM,KAAK,IAA3B,EAAiC,OAAA;;IAEjC,IAAI5I,MAAM,CAACmH,UAAX,EAAuB;MACrB,MAAMzE,GAAG,GAAGrI,QAAQ,GAAG;AAAE,QAAA,CAACA,QAAD,GAAYuO,MAAAA;AAAd,OAAH,GAA4BA,MAAhD,CAAA;AACA5I,MAAAA,MAAM,CAACxI,KAAP,CAAa,mBAAb,EAAkCkL,GAAlC,CAAA,CAAA;AACA,MAAA,OAAOA,GAAP,CAAA;AACD,KAAA;;AAED1C,IAAAA,MAAM,CAACxI,KAAP,CAAa,kBAAb,EAAiC;MAAE6C,QAAF;AAAYuO,MAAAA,MAAAA;AAAZ,KAAjC,EAtB0C;AAyB1C;AACA;;AACA,IAAA,MAAMC,YAAY,GAAG,CAAC,GAAGvM,mBAAmB,CAACjC,QAAD,EAAW,GAAX,CAAvB,CAAA,CAAwCyO,MAAxC,CAA+CrO,CAAC,IAAG;AAAA,MAAA,IAAA,qBAAA,CAAA;;AACtE;AACA,MAAA,MAAM6F,MAAM,GAAA,CAAA,qBAAA,GAAGN,MAAM,CAAC8F,gBAAV,KAAA,IAAA,GAAA,KAAA,CAAA,GAAG,qBAAyBI,CAAAA,IAAzB,CAA8BzL,CAA9B,CAAf,CAFsE;AAItE;;AACA,MAAA,IAAI,CAAC6F,MAAD,KAAY7F,CAAC,CAAC3B,QAAF,CAAW,GAAX,CAAA,IAAmB,CAAC2B,CAAC,CAAC3B,QAAF,CAAW,GAAX,CAAhC,CAAJ,EAAsD,OAAO,IAAP,CAAA;AACtD,MAAA,OAAOwH,MAAP,CAAA;AACD,KAPoB,CAArB,CAAA;;AASA,IAAA,IAAIuI,YAAY,CAAChI,MAAb,KAAwB,CAA5B,EAA+B;AAC7Bb,MAAAA,MAAM,CAACxI,KAAP,CAAa,mBAAb,EAAkC6C,QAAlC,EAA4C,MAA5C,CAAA,CAAA;AACA,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,IAAIwO,YAAY,CAAChI,MAAb,KAAwB,CAA5B,EACEb,MAAM,CAACxI,KAAP,CAAa,wBAAb,EAAuCqR,YAAY,CAAC,CAAD,CAAnD,CAAA,CAAA;AACF,IAAA,IAAIA,YAAY,CAAChI,MAAb,GAAsB,CAA1B,EACEb,MAAM,CAACxI,KAAP,CAAa,4BAAb,EAA2CqR,YAA3C,CAAA,CAAA;IAEFxO,QAAQ,GAAGwO,YAAY,CACpB9P,GADQ,CACJ0B,CAAC,IACJ2L,eAAe,CACb3L,CADa,EAEbuF,MAFa,CAFR,EAUR8I,MAVQ,CAUD3J,OAVC,CAWRlG,CAAAA,IAXQ,CAWH,GAXG,CAAX,CAAA;AAaA+G,IAAAA,MAAM,CAACxI,KAAP,CAAa,eAAb,EAA8B6C,QAAQ,IAAIuO,MAA1C,CAAA,CAAA;AAEA,IAAA,IAAI,CAACvO,QAAL,EAAe,OAAOuO,MAAP,CAAA;IAEf,OAAO;AAAE,MAAA,CAACvO,QAAD,GAAYuO,MAAAA;KAArB,CAAA;GA3Fc;;AA8FhB;AACAG,EAAAA,MAAM,CAACA,MAAD,EAAmB/I,MAAnB,EAA4C;AAChD,IAAA,MAAM3F,QAAQ,GAAG4N,yBAAyB,CACxCc,MAAM,CAAC3O,IADiC,EAExC2O,MAAM,CAAC/I,MAFiC,EAGxCA,MAHwC,CAA1C,CAAA;;IAMA,IAAI,CAAC3F,QAAL,EAAe;AACb2F,MAAAA,MAAM,CAACxI,KAAP,CACE,mCADF,EAEE;QAAE4C,IAAI,EAAE2O,MAAM,CAAC3O,IAAf;QAAqB4F,MAAM,EAAE+I,MAAM,CAAC/I,MAAAA;AAApC,OAFF,EAGE,MAHF,CAAA,CAAA;AAKA,MAAA,OAAA;AACD,KAd+C;;;AAiBhD,IAAA,IACE3F,QAAQ,CAACqO,UAAT,CAAoB,YAApB,KACA,CAAC1I,MAAM,CAACmH,UADR,IAEAnH,MAAM,CAAClC,UAAP,CAAkB/F,2BAHpB,EAKE,OAAA;;IAEF,IAAIyO,sBAAsB,CAACwC,GAAvB,CAA2BD,MAAM,CAAC3O,IAAlC,CAAJ,EAA6C;MAC3C4F,MAAM,CAACxI,KAAP,CAAgB,CAAAuR,EAAAA,MAAM,CAAC3O,IAAiB,CAAxC,WAAA,CAAA,EAA0CC,QAA1C,CAAA,CAD2C;;MAG3C2F,MAAM,CAACmH,UAAP,GAAoB,IAApB,CAAA;AACD,KAAA;;IAED,MAAMyB,MAAM,GAAGb,iBAAiB,CAACgB,MAAM,CAACf,KAAR,EAAehI,MAAf,CAAhC,CAAA;IACA,IAAI,CAAC4I,MAAL,EAAa,OAAA;AAEb,IAAA,IAAIK,OAAO,GAAG;AAAE,MAAA,CAAC5O,QAAD,GAAYuO,MAAAA;KAA5B,CAAA;;IAEA,IAAIvO,QAAQ,KAAKiM,kBAAjB,EAAqC;AACnC;MACA2C,OAAO,GAAG,EAAE,GAAGA,OAAL;QAAc,YAAcL,EAAAA,MAAAA;OAAtC,CAAA;AACA5I,MAAAA,MAAM,CAACxI,KAAP,CAAa,mBAAb,EAAkCoR,MAAlC,CAAA,CAAA;AACD,KAAA;;AAED5I,IAAAA,MAAM,CAACxI,KAAP,CAAa,QAAb,EAAuB6C,QAAvB,CAAA,CAAA;AACA,IAAA,OAAO4O,OAAP,CAAA;AACD,GAAA;;AA1Ie,CAAlB,CAAA;;AA+IA,SAASlB,iBAAT,CAA2BC,KAA3B,EAA4ChI,MAA5C,EAAqE;AACnE,EAAA,MAAM4I,MAAM,GAAaZ,KAAK,CAC3BjP,GADsB,CACjB8O,IAAD,IAAgC;AACnC,IAAA,MAAMqB,OAAO,GAAGZ,SAAS,CAACT,IAAI,CAACpK,IAAN,CAAzB,CAAA;IACA,IAAI,CAACyL,OAAL,EAAc,OAAA;AAEd,IAAA,OAAOA,OAAO,CAACrB,IAAD,EAAgB7H,MAAhB,CAAd,CAAA;AACD,GANsB,CAOtB8I,CAAAA,MAPsB,CAOf3J,OAPe,CAAzB,CAAA;EAQA,IAAIyJ,MAAM,CAAC/H,MAAP,KAAkB,CAAtB,EAAyB,OAAO7J,SAAP,CAT0C;;AAYnE,EAAA,OAAOmS,6BAAS,CAACP,MAAM,CAAC,CAAD,CAAP,EAAY,GAAGA,MAAM,CAACQ,KAAP,CAAa,CAAb,CAAf,CAAhB,CAAA;AACD;;AC3PD,SAASC,eAAT,CAAyBrJ,MAAzB,EAA4C;EAC1C,MAAMsJ,UAAU,GAAG,CAAC,GAAGtJ,MAAM,CAACuE,eAAP,CAAuBgF,gBAA3B,CAAnB,CAAA;EAEA,MAAMC,kBAAkB,GAAGF,UAAU,CAClCpP,OADwB,CAChB,CAAC,GAAGuP,SAAH,CAAD,KAA0C;AACjD,IAAA,MAAM/G,GAAG,GAAG+G,SAAS,CAAC1Q,GAAV,CAAc,CAAC,CAACiF,IAAD,EAAO6J,IAAP,CAAD,KAAiB;AACzC,MAAA,IAAI7J,IAAI,CAAC0L,KAAL,KAAehD,cAAnB,EAAmC,OAAA;MACnC,OAAOqB,iBAAiB,CAAC,CAACF,IAAD,CAAD,EAAS,EAAE,GAAG7H,MAAL;AAAamH,QAAAA,UAAU,EAAE,IAAA;AAAzB,OAAT,CAAxB,CAAA;AACD,KAHW,CAAZ,CAAA;AAIA,IAAA,IAAIzE,GAAG,CAAC7B,MAAJ,KAAe,CAAnB,EAAsB,OAAA;AAEtB,IAAA,OAAO6B,GAAP,CAAA;AACD,GATwB,CAUxBoG,CAAAA,MAVwB,CAUjB3J,OAViB,CAA3B,CAAA;EAYA,MAAM,CAACwK,SAAD,EAAYC,cAAZ,CAAA,GAAqDN,UAAU,CAAC,CAAD,CAArE,CAf0C;;AAiB1C,EAAA,IAAIK,SAAS,CAAC/P,IAAV,EAAA,KAAqB,GAAzB,EAA8B,OAAOuP,6BAAS,CAAC,GAAGK,kBAAJ,CAAhB,CAjBY;;AAoB1C,EAAA,IAAI,CAACnQ,KAAK,CAACC,OAAN,CAAcsQ,cAAd,CAAL,EAAoC,OAAOT,6BAAS,CAAC,GAAGK,kBAAJ,CAAhB,CAAA;AAEpC,EAAA,MAAMK,eAAe,GAAGD,cAAc,CAAC1P,OAAf,CAAuB,CAAC,GAAG2N,IAAH,CAAD,KAC7CE,iBAAiB,CAAC,CAACF,IAAD,CAAD,EAAS,EAAE,GAAG7H,MAAL;AAAamH,IAAAA,UAAU,EAAE,IAAA;AAAzB,GAAT,CADK,CAAxB,CAAA;AAIA,EAAA,OAAOgC,6BAAS;EAEd,GAAGU,eAFW,EAGd,GAAGL,kBAHW,EAId,GAAGM,oBAAoB,CAAC9J,MAAD,CAJT,CAAhB,CAAA;AAMD,CAAA;;AAED,SAAS8J,oBAAT,CACE9J,MADF,EACqB;EAEnB,IAAIA,MAAM,CAAClC,UAAP,CAAkB/F,2BAAlB,KAAkD,KAAtD,EAA6D,OAAO,EAAP,CAAA;AAC7D,EAAA,MAAMgS,SAAS,GAAG/J,MAAM,CAAC3E,KAAP,CAAa,WAAb,CAAlB,CAAA;AACA,EAAA,IAAI,CAAC0O,SAAL,EAAgB,OAAO,EAAP,CAAA;AAEhB,EAAA,OAAO5J,MAAM,CAACC,OAAP,CAAe2J,SAAf,CAA0BhR,CAAAA,GAA1B,CACL,CAAC,CAACqB,IAAD,EAAO4P,MAAP,CAAD,MAAwD;IACtD,CAAe,CAAA,WAAA,EAAA5P,IAAM,CAAA,CAArB,GAAwB4P,MAAAA;AAD8B,GAAxD,CADK,CAAP,CAAA;AAKD;;AChDD,MAAMC,SAAS,GAAG,WAAlB,CAAA;AACA,MAAMC,yBAAyB,GAAG,OAAlC,CAAA;AACA,MAAMC,mBAAiB,GAAG,QAA1B,CAAA;;AAUA,SAASC,mBAAT,CAA6BC,OAA7B,EAA8CC,OAA9C,EAA8D;AAAA,EAAA,IAAA,qBAAA,EAAA,qBAAA,EAAA,qBAAA,CAAA;;AAC5D,EAAA,MAAMC,MAAM,GAAG,CACb,GAAGjO,mBAAmB,CACpB+N,OAAO,CAACzQ,IAAR,EADoB,EAEpB0Q,CAAAA,qBAAAA,GAAAA,OAAO,CAAC9K,cAAR,CAAuBgL,SAFH,KAEgB,IAAA,GAAA,qBAAA,GAAA,GAFhB,CADT,CAAf,CAAA;AAOA,EAAA,IAAIC,cAAc,GAAGF,MAAM,CAACG,GAAP,EAArB,CAAA;AACA,EAAA,IAAI,CAACD,cAAL,EAAqB,OAAO,EAAP,CATuC;AAW5D;AACA;;EACAH,OAAO,CAAC9L,MAAR,CACE,CAAC+L,MAAM,CAACzR,QAAP,CAAgB,EAAhB,CADH,EAEE,CAAC;AAAEuG,IAAAA,KAAAA;GAAH,KAAA;AAAA,IAAA,IAAA,sBAAA,CAAA;;AAAA,IAAA,OACE,GAAGA,KAAK,MACD/E,MAAM,CAAC+E,KAAK,CAACgL,OAAD,EAAU,YAAV,CAAN,CAA8B,CADnC,sBAAA,CAAA,CAEU,iBAAA/P,MAAM,CACtB+E,KAAK,IACAkL,MAAM,CACNzB,MADA,CACO3J,OADP,EAEAlG,IAFA,CAAA,CAAA,sBAAA,GAEKqR,OAAO,CAAC9K,cAAR,CAAuBgL,SAF5B,KAAA,IAAA,GAAA,sBAAA,GAEyC,GAFzC,CAE6C,CAAA,CAH7C,EAIH,SAJG,CADiB,CAOvB,CAVH,CAAA,CAAA;GAFF,CAAA,CAAA;EAeA,IAAIG,eAAe,4BAAGL,OAAH,IAAA,IAAA,GAAA,KAAA,CAAA,GAAGA,OAAO,CAAEK,eAAZ,oCAA+B,EAAlD,CAAA;EACA,IAAIC,cAAc,4BAAGN,OAAH,IAAA,IAAA,GAAA,KAAA,CAAA,GAAGA,OAAO,CAAEM,cAAZ,oCAA8B,EAAhD,CAAA;;EAEA,IAAI,CAACD,eAAD,IAAoBF,cAAc,CAAC/B,UAAf,CAA0B,GAA1B,CAAxB,EAAwD;AACtD+B,IAAAA,cAAc,GAAGA,cAAc,CAACrB,KAAf,CAAqB,CAArB,CAAjB,CAAA;AACAuB,IAAAA,eAAe,GAAG,GAAlB,CAAA;AACD,GAAA;;EAED,IAAI,CAACC,cAAD,IAAmBH,cAAc,CAACI,QAAf,CAAwB,GAAxB,CAAvB,EAAqD;IACnDJ,cAAc,GAAGA,cAAc,CAACrB,KAAf,CAAqB,CAArB,EAAwB,CAAC,CAAzB,CAAjB,CAAA;AACAwB,IAAAA,cAAc,GAAG,GAAjB,CAAA;AACD,GAvC2D;;;AA0C5D,EAAA,MAAME,SAAS,GAAGb,SAAS,CAAC/D,IAAV,CAAeuE,cAAf,CACdA,GAAAA,cAAc,CAACrB,KAAf,CAAqB,CAArB,EAAwB,CAAC,CAAzB,CADc,GAEdqB,cAFJ,CAAA;AAIA,EAAA,MAAMM,SAAS,GAAG,CAAC,GAAGzO,mBAAmB,CAACwO,SAAD,EAAY,GAAZ,CAAvB,CAAA,CAAyChC,MAAzC,CAAgD3J,OAAhD,CAAlB,CAAA;AAEA,EAAA,MAAM6L,KAAK,GAAGD,SAAS,CACpBhS,GADW,CACPiC,SAAS,IAAG;AAAA,IAAA,IAAA,sBAAA,CAAA;;AACf,IAAA,IACEkP,yBAAyB,CAAChE,IAA1B,CAA+BlL,SAA/B,CACA;AACA,IAAA,CAACA,SAAS,CAAClC,QAAV,CAAmB,IAAnB,CAHH,EAIE;AAAA,MAAA,IAAA,sBAAA,CAAA;;AACA,MAAA,MAAMmS,GAAG,GAAG,EAAE,GAAGX,OAAL;QAAcK,eAAd;AAA+BC,QAAAA,cAAAA;OAA3C,CAAA;MACA,OAAOM,mBAAmB,CACxB,CAAC,GAAGX,MAAJ,EAAYvP,SAAZ,EAAuB/B,IAAvB,CAAA,CAAA,sBAAA,GAA4BqR,OAAO,CAAC9K,cAAR,CAAuBgL,SAAnD,KAAA,IAAA,GAAA,sBAAA,GAAgE,GAAhE,CADwB,EAExBS,GAFwB,CAA1B,CAAA;AAID,KAAA;;AAED,IAAA,OAAO,CAAC,GAAGV,MAAJ,EAAY,CAACI,eAAD,EAAkB3P,SAAlB,EAA6B4P,cAA7B,CAA6C3R,CAAAA,IAA7C,CAAkD,EAAlD,CAAZ,CAAA,CACJ6P,MADI,CACG3J,OADH,CAAA,CAEJlG,IAFI,CAAA,CAAA,sBAAA,GAECqR,OAAO,CAAC9K,cAAR,CAAuBgL,SAFxB,KAAA,IAAA,GAAA,sBAAA,GAEqC,GAFrC,CAAP,CAAA;AAGD,GAjBW,CAkBX1B,CAAAA,MAlBW,CAkBJ3J,OAlBI,CAAd,CAAA;AAoBA,EAAA,OAAO6L,KAAP,CAAA;AACD,CAAA;;AAED,SAASE,mBAAT,CAA6Bb,OAA7B,EAA8CC,OAA9C,EAA8D;AAC5D,EAAA,MAAMS,SAAS,GAAG,CAChB,GAAGzO,mBAAmB,CAAC+N,OAAO,CAAC1Q,OAAR,CAAgBwQ,mBAAhB,EAAmC,GAAnC,CAAwCvQ,CAAAA,IAAxC,EAAD,EAAiD,GAAjD,CADN,CAAlB,CAAA;EAGA,IAAImR,SAAS,CAAClK,MAAV,KAAqB,CAArB,IAA0B,CAAC,EAAD,EAAK,IAAL,EAAW/H,QAAX,CAAoBiS,SAAS,CAAC,CAAD,CAA7B,CAA9B,EAAiE,OAAO,EAAP,CAAA;AAEjE,EAAA,MAAMI,eAAe,GAAGJ,SAAS,CAAC7Q,OAAV,CAAkBwF,IAAI,IAC5C0K,mBAAmB,CAAC1K,IAAD,EAAO4K,OAAP,CADG,CAAxB,CAAA;AAIA,EAAA,OAAOa,eAAe,CAAClS,IAAhB,CAAqB,GAArB,CAAP,CAAA;AACD;;ACjGD,MAAMmS,wBAAwB,GAAG,uBAAjC,CAAA;AAEwB,SAAAC,WAAA,CAAY3R,MAAZ,EAA0B;AAChD,EAAA,OAAOA,MAAM,CAACC,OAAP,CAAeyR,wBAAf,EAAyC,MAAzC,CAAP,CAAA;AACD;;ACDa,SAAUE,UAAV,CACZC,aADY,EAEZ/L,cAFY,EAEkB;AAAA,EAAA,IAAA,qBAAA,CAAA;;AAE9B,EAAA,MAAMgM,WAAW,GAAG,CAClB,GAAGlP,mBAAmB,CAACiP,aAAD,EAAgB/L,CAAAA,qBAAAA,GAAAA,cAAc,CAACgL,SAA/B,KAA4C,IAAA,GAAA,qBAAA,GAAA,GAA5C,CADJ,CAApB,CAAA;EAIA,MAAMxP,SAAS,GAAGwQ,WAAW,CAACpC,KAAZ,CAAkB,CAAC,CAAnB,CAAsB,CAAA,CAAtB,CAAlB,CAAA;EAEA,IAAI,CAACpO,SAAS,CAAClC,QAAV,CAAmB,GAAnB,CAAL,EAA8B,OAAO,KAAP,CARA;AAW9B;;AACA,EAAA,MAAM2S,gBAAgB,GAAG,CACvB,GAAGnP,mBAAmB,CAACtB,SAAS,CAACrB,OAAV,CAAkB,KAAlB,EAAyB,GAAzB,CAAD,EAAgC,GAAhC,CADC,CAAzB,CAZ8B;;AAiB9B,EAAA,IAAI8R,gBAAgB,CAAC,CAAD,CAAhB,CAAoBZ,QAApB,CAA6B,GAA7B,CAAJ,EAAuC,OAAO,KAAP,CAjBT;;AAoB9B,EAAA,IAAIY,gBAAgB,CAAC,CAAD,CAAhB,CAAoBZ,QAApB,CAA6B,GAA7B,CAAJ,EAAuC,OAAO,KAAP,CApBT;;EAuB9B,IAAIY,gBAAgB,CAAC,CAAD,CAAhB,KAAwB,EAA5B,EAAgC,OAAO,KAAP,CAvBF;;EA0B9B,IAAIA,gBAAgB,CAAC,CAAD,CAAhB,CAAoBZ,QAApB,CAA6B,GAA7B,CAAJ,EAAuC,OAAO,KAAP,CAAA;AAEvC,EAAA,OAAO,IAAP,CAAA;AACD;;AClCD;AACc,SAAUa,YAAV,CAAuBC,KAAvB,EAAsCC,KAAtC,EAAmD;EAC/D,OAAO,CAAC,CAAC,CAACC,KAAD,EAAQ,GAAGC,IAAX,CAAD,KAAwC,CAACD,KAAD,EAAQC,IAAI,CAAC7S,IAAL,CAAU2S,KAAV,CAAR,CAAzC,EACLD,KAAK,CAACtG,KAAN,CAAYuG,KAAZ,CADK,CAAP,CAAA;AAGD;;ACGD,MAAMG,UAAU,GAAG,IAAnB,CAAA;AACA,MAAMC,cAAc,GAAG,IAAvB,CAAA;AACA,MAAMC,0BAA0B,GAAG,UAAnC,CAAA;AACA,MAAMC,cAAc,GAAG,oBAAvB,CAAA;AACA,MAAMC,aAAa,GAAG,4BAAtB,CAAA;AACA,MAAMC,8BAA8B,GAAG,8BAAvC,CAAA;AACA,MAAMC,oBAAoB,GAAG,gBAA7B,CAAA;;AAOA,SAASC,kCAAT,CACEtR,SADF,EAEE;EACEwE,cADF;EAEEhB,MAFF;EAGE9G,eAHF;EAIE6U,cAJF;AAKEC,EAAAA,aAAAA;AALF,CAFF,EAQiD;AAAA,EAAA,IAAA,qBAAA,EAAA,sBAAA,EAAA,sBAAA,CAAA;;AAE/C,EAAA,MAAMC,UAAU,GAAG,CACjB,GAAGnQ,mBAAmB,CAACtB,SAAD,EAAYwE,CAAAA,qBAAAA,GAAAA,cAAc,CAACgL,SAA3B,KAAwC,IAAA,GAAA,qBAAA,GAAA,GAAxC,CADL,CAAnB,CAAA;EAIA,MAAMkC,SAAS,GAAGD,UAAU,CAACrD,KAAX,CAAiB,CAAC,CAAlB,CAAqB,CAAA,CAArB,CAAlB,CAAA;EAEA,IAAI,CAACZ,QAAD,EAAW7P,KAAX,CAAA,GAAoB+S,YAAY,CAACgB,SAAD,EAAY,GAAZ,CAApC,CAAA;EACA/T,KAAK,GAAGA,KAAK,CAACyQ,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAmBxP,CAAAA,IAAnB,EAAR,CAAA;EAEA,IAAI+S,WAAW,GAAG,EAAlB,CAAA;;AAEA,EAAA,IAAInE,QAAQ,CAACE,UAAT,CAAoB,GAApB,CAAJ,EAA8B;AAC5BF,IAAAA,QAAQ,GAAGA,QAAQ,CAACY,KAAT,CAAe,CAAf,CAAX,CAAA;AACAuD,IAAAA,WAAW,GAAG,GAAd,CAAA;AACD,GAAA;;EAED,MAAMC,QAAQ,GAAM,CAAA,EAAAD,WAAe,CAAA,CAAA,EAAA,CACjCnE,QADiC,EAEjC7P,KAAK,KAAK,EAAV,GAAe,IAAf,GAAsBA,KAFW,CAGjCM,CAAAA,IAHiC,CAG5BuG,CAAAA,sBAAAA,GAAAA,cAAc,CAACgL,SAHa,KAAA,IAAA,GAAA,sBAAA,GAGA,GAHA,CAGI,CAHvC,CAAA,CAAA,CAAA;EAIAiC,UAAU,CAACI,MAAX,CAAkB,CAAC,CAAnB,EAAsB,CAAtB,EAAyBD,QAAzB,CAAA,CAAA;EAEA,MAAME,iBAAiB,GAAGL,UAAU,CAACxT,IAAX,CAAgBuG,CAAAA,sBAAAA,GAAAA,cAAc,CAACgL,SAA/B,KAA4C,IAAA,GAAA,sBAAA,GAAA,GAA5C,CAA1B,CAAA;AAEA,EAAA,MAAMuC,kBAAkB,GAAGrV,eAAe,IAAI,CAAC6U,cAA/C,CAAA;AACA/N,EAAAA,MAAM,CAAC,CAACuO,kBAAF,EAAsB,CAAC;AAAE1N,IAAAA,KAAAA;AAAF,GAAD,KAC1B,CACE,CAAA,EAAG/E,MAAM,CACP+E,KAAK,CACH,CAAK/E,EAAAA,EAAAA,MAAM,CACT+E,KAAK,CAACmN,aAAD,EAAgB,YAAhB,CADI,CAEgC,CAAA,wCAAA,CAHxC,CADE,CAMN,CAAA,CAPL,EAQe,CAAA,UAAA,EAAAlS,MAAM,CAAC+E,KAAK,CAACyN,iBAAD,EAAoB,SAApB,CAAN,CAAuC,EAR5D,EASsF,CAAA,kFAAA,CATtF,EAUyD,CAVzD,qDAAA,CAAA,CAAA,CAWE7T,IAXF,CAWO,MAXP,CADI,CAAN,CAAA;AAeA,EAAA,OAAO6T,iBAAP,CAAA;AACD,CAAA;;AASD,SAASE,sBAAT,CAAgC;EAC9BhS,SAD8B;EAE9BwE,cAF8B;AAG9BhB,EAAAA,MAAAA;AAH8B,CAAhC,EAOC;AAAA,EAAA,IAAA,sBAAA,CAAA;;EACC,MAAM+L,MAAM,GAAGjO,mBAAmB,CAACtB,SAAD,EAAYwE,CAAAA,sBAAAA,GAAAA,cAAc,CAACgL,SAA3B,KAAwC,IAAA,GAAA,sBAAA,GAAA,GAAxC,CAAlC,CAAA;AACA,EAAA,MAAMyC,mBAAmB,GAAG1C,MAAM,CAAC1J,MAAP,GAAgB,CAA5C,CAAA;AACA,EAAA,MAAMqM,mBAAmB,GAAG3C,MAAM,CAAC4C,IAAP,CAAYnU,CAAC,IAAG;AAC1C,IAAA,MAAMoU,MAAM,GAAG9Q,mBAAmB,CAACtD,CAAC,CAACoQ,KAAF,CAAQ,CAAR,EAAW,CAAC,CAAZ,CAAD,EAAiB,GAAjB,CAAlC,CAAA;AACA,IAAA,OAAOgE,MAAM,CAACvM,MAAP,GAAgB,CAAvB,CAAA;AACD,GAH2B,CAA5B,CAAA;AAIA,EAAA,MAAMwM,QAAQ,GAAGJ,mBAAmB,IAAIC,mBAAxC,CAAA;AACA1O,EAAAA,MAAM,CACJ,CAAC6O,QADG,EAEJ,CAAC;AAAEhO,IAAAA,KAAAA;AAAF,GAAD,KACE,CAAA,EAAGA,KAAK,CACN,CAAqB/E,kBAAAA,EAAAA,MAAM,CACzB+E,KAAK,CAACrE,SAAD,EAAY,YAAZ,CADoB,CAEc,CAAA,sCAAA,CAHnC,QAIAqE,KAAK,EAAA,mEAAA,CAAA,EAEX,SAFW,CAG2E,CAAA,oFAAA,EAAAA,KAAK,CACxB,CADwB,iEAAA,CAAA,EAE3F,SAF2F,CAG5F,uKAbC,CAAN,CAAA;AAeD;;;AAGD,SAASiO,gBAAT,CACEtS,SADF,EAEE;EACEwE,cADF;EAEEnE,KAFF;EAGEkR,cAHF;EAIE7U,eAJF;EAKE8G,MALF;AAMEhH,EAAAA,KAAAA;AANF,CAFF,EAS+B;AAE7BwV,EAAAA,sBAAsB,CAAC;IAAEhS,SAAF;IAAawE,cAAb;AAA6BhB,IAAAA,MAAAA;AAA7B,GAAD,CAAtB,CAAA;AAEA,EAAA,MAAMgO,aAAa,GAAGxR,SAAtB,CAJ6B;;EAO7BA,SAAS,GAAGA,SAAS,CAACrB,OAAV,CAAkBmN,MAAlB,EAA0BD,UAA1B,CAAZ,CAP6B;;AAU7B,EAAA,IAAI7L,SAAS,CAAC6P,QAAV,CAAmB,GAAnB,CAAJ,EAA6B;AAAA,IAAA,IAAA,sBAAA,EAAA,sBAAA,CAAA;;AAC3BrT,IAAAA,KAAK,CAAC,qBAAD,EAAwBwD,SAAxB,CAAL,CAAA;IAEA,MAAMyR,UAAU,GAAG,CACjB,GAAGnQ,mBAAmB,CACpBtB,SAAS,CAACoO,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,CADoB,EAEpB5J,CAAAA,sBAAAA,GAAAA,cAAc,CAACgL,SAFK,qCAEQ,GAFR,CADL,CAAnB,CAH2B;;AAU3BiC,IAAAA,UAAU,CAACI,MAAX,CAAkB,CAAC,CAAnB,EAAsB,CAAtB,EAAyB,CAAIJ,CAAAA,EAAAA,UAAU,CAACA,UAAU,CAAC5L,MAAX,GAAoB,CAArB,CAAuB,CAA9D,CAAA,CAAA,CAAA;IACA7F,SAAS,GAAGyR,UAAU,CAACxT,IAAX,CAAA,CAAA,sBAAA,GAAgBuG,cAAc,CAACgL,SAA/B,KAA4C,IAAA,GAAA,sBAAA,GAAA,GAA5C,CAAZ,CAAA;AACD,GAtB4B;AAyB7B;;;AACA,EAAA,IAAIc,UAAU,CAACtQ,SAAD,EAAYwE,cAAZ,CAAd,EAA2C;AACzChI,IAAAA,KAAK,CAAC,iBAAD,EAAoBwD,SAApB,CAAL,CAAA;AACAA,IAAAA,SAAS,GAAGsR,kCAAkC,CAACtR,SAAD,EAAY;MACxDwE,cADwD;MAExDhB,MAFwD;MAGxD9G,eAHwD;MAIxD6U,cAJwD;AAKxDC,MAAAA,aAAAA;AALwD,KAAZ,CAA9C,CAAA;AAOD,GAnC4B;;;AAsC7BxR,EAAAA,SAAS,GAAG8J,iBAAiB,CAAC9J,SAAD,EAAY;IAAEwD,MAAF;AAAUnD,IAAAA,KAAAA;GAAtB,CAA7B,CAtC6B;;AAyC7BL,EAAAA,SAAS,GAAGuS,wBAAwB,CAACvS,SAAD,EAAY;AAAEwE,IAAAA,cAAAA;AAAF,GAAZ,CAApC,CAAA;AAEAhI,EAAAA,KAAK,CAAC,oBAAD,EAAuBwD,SAAvB,CAAL,CAAA;AAEA,EAAA,OAAOA,SAAP,CAAA;AACD,CAAA;;AAED,SAASwS,kBAAT,CAA4BjT,OAA5B,EAA2C;EACzC,OAAOA,OAAO,CAACmO,UAAR,CAAmB,GAAnB,CAA2BnO,IAAAA,OAAO,CAACsQ,QAAR,CAAiB,GAAjB,CAAlC,CAAA;AACD,CAAA;;AAED,SAAS4C,SAAT,CAAmBlT,OAAnB,EAAkC;EAChC,OAAOA,OAAO,CAAC6O,KAAR,CAAc,CAAd,EAAiB,CAAC,CAAlB,CAAP,CAAA;AACD,CAAA;;AAED,SAASmE,wBAAT,CACEhC,aADF,EAEE;AAAE/L,EAAAA,cAAAA;AAAF,CAFF,EAEwD;AAAA,EAAA,IAAA,sBAAA,EAAA,sBAAA,CAAA;;AAEtD,EAAA,MAAMiN,UAAU,GAAG,CACjB,GAAGnQ,mBAAmB,CAACiP,aAAD,EAAgB/L,CAAAA,sBAAAA,GAAAA,cAAc,CAACgL,SAA/B,KAA4C,IAAA,GAAA,sBAAA,GAAA,GAA5C,CADL,CAAnB,CAAA;EAIA,MAAM5P,QAAQ,GAAG6R,UAAU,CAACrD,KAAX,CAAiB,CAAjB,EAAoB,CAAC,CAArB,CAAjB,CAAA;EACA,MAAMpO,SAAS,GAAGyR,UAAU,CAACrD,KAAX,CAAiB,CAAC,CAAlB,CAAqB,CAAA,CAArB,CAAlB,CAAA;EAEA,IAAIxO,QAAQ,CAACiG,MAAT,KAAoB,CAAxB,EAA2B,OAAO0K,aAAP,CAT2B;AAYtD;;EACA,MAAMmC,SAAS,GAAG,EAAlB,CAAA;AACA9S,EAAAA,QAAQ,CAAC+S,OAAT,CAAiB,CAACpT,OAAD,EAAUyG,KAAV,KAAmB;AAClC;AACA;AACA;AACA;AACA,IAAA,IAAIwM,kBAAkB,CAACjT,OAAD,CAAtB,EACEA,OAAO,GAAGA,OAAO,CAACZ,OAAR,CAAgByS,8BAAhB,EAAgD,SAAhD,CAAV,CAAA;IAEF,IACEpL,KAAK,KAAK,CAAV,IACA,CAACwM,kBAAkB,CAACjT,OAAD,CADnB,IAEA,CAACiT,kBAAkB,CAAC5S,QAAQ,CAACoG,KAAK,GAAG,CAAT,CAAT,CAHrB,EAKE,OAAO0M,SAAS,CAACE,IAAV,CAAerT,OAAf,CAAP,CAAA;IAEF,MAAMsT,IAAI,GAAGH,SAAS,CAACA,SAAS,CAAC7M,MAAV,GAAmB,CAApB,CAAtB,CAAA;;AAEA,IAAA,IAAItG,OAAO,CAACzB,QAAR,CAAiB,GAAjB,CAAJ,EAA2B;MACzB,MAAMgV,aAAa,GAAGD,IAAI,CAAC/U,QAAL,CAAc,GAAd,CAAtB,CADyB;;AAIzB,MAAA,IAAIgV,aAAJ,EAAmB;AACjB,QAAA,MAAMC,iBAAiB,GAAGxT,OAAO,CAACZ,OAAR,CACxBqS,cADwB,EAExByB,SAAS,CAACI,IAAD,CAFe,CAA1B,CAAA;QAIA,MAAM5M,MAAM,GAAGD,KAAK,KAAKpG,QAAQ,CAACiG,MAAT,GAAkB,CAA3C,CAAA;AACA6M,QAAAA,SAAS,CAAC1M,KAAK,GAAG,CAAT,CAAT,GAAuBC,MAAM,GACzB8M,iBAAiB,CAACpU,OAAlB,CAA0BqS,cAA1B,EAA0C,EAA1C,CADyB,GAEzB+B,iBAFJ,CAAA;AAGA,QAAA,OAAA;AACD,OAdwB;;;MAiBzB,IAAI,CAACD,aAAL,EAAoB;AAClB,QAAA,MAAME,cAAc,GAAG,CAAA,CAAA,EAAIP,SAAS,CAAClT,OAAD,CAAT,CAAmBZ,OAAnB,CACzBqS,cADyB,EAEzByB,SAAS,CAACI,IAAD,CAFgB,EAA3B,CAAA,CAAA,CAAA;QAIAH,SAAS,CAACA,SAAS,CAAC7M,MAAV,GAAmB,CAApB,CAAT,GAAkCmN,cAAlC,CAAA;AACA,QAAA,OAAA;AACD,OAAA;AACF,KA1CiC;;;IA6ClC,MAAMA,cAAc,GAAO,CAAA,CAAA,EAAA,CACzBP,SAAS,CAACI,IAAD,CAAT,CAAgBlU,OAAhB,CAAwBsS,0BAAxB,EAAoD,EAApD,CADyB,EAEzBwB,SAAS,CAAClT,OAAD,CAFgB,CAAA,CAGzBtB,IAHyB,CAGpB,GAHoB,EAA3B,CAAA,CAAA,CAAA;IAIAyU,SAAS,CAACA,SAAS,CAAC7M,MAAV,GAAmB,CAApB,CAAT,GAAkCmN,cAAlC,CAAA;AACD,GAlDD,EAdsD;;EAmEtD,MAAMC,mBAAmB,GAAG,CAAC,GAAGP,SAAJ,CAAetE,CAAAA,KAAf,EAAuB8E,CAAAA,OAAvB,EAA5B,CAAA;EACA,MAAMC,WAAW,GAAGF,mBAAmB,CAAClV,GAApB,CAAwB,CAACoB,CAAD,EAAIiU,GAAJ,KAAW;AACrD,IAAA,IAAI,CAACZ,kBAAkB,CAACrT,CAAD,CAAvB,EAA4B,OAAOA,CAAP,CAAA;AAE5B,IAAA,MAAMkU,gBAAgB,GAAGZ,SAAS,CAACtT,CAAD,CAAT;AAEvB;AAFuB,KAGtBR,OAHsB,CAGduS,cAHc,EAGE,KAHF,CAIvB;AAJuB,KAKtBvS,OALsB,CAKdwS,aALc,EAKC,KALD,CAAzB,CAAA;IAOA,MAAMmC,WAAW,GAAGD,gBAAgB,CAAC3F,UAAjB,CAA4B,GAA5B,CAChB,GAAA,CAAC2F,gBAAD,CADgB;AAGhB,IAAA,CAAC,GAAG/R,mBAAmB,CAAC+R,gBAAD,EAAmB,GAAnB,CAAvB,CAHJ,CAAA;AAIA,IAAA,MAAM3L,GAAG,GAAG4L,WAAW,CACpBvV,GADS,CACLwB,OAAO,IAAA;AAAA,MAAA,IAAA,UAAA,CAAA;;AAAA,MAAA,OACV4L,iBAAiB,CAAC5L,OAAD,EAAUmT,SAAS,CAACU,GAAG,GAAG,CAAP,CAAnB,EAA8BV,CAAAA,UAAAA,GAAAA,SAAS,CAACU,GAAG,GAAG,CAAP,CAAvC,KAAA,IAAA,GAAA,UAAA,GAAoD,EAApD,CADP,CAAA;AAAA,KADF,CAIV;AACA;AACA;KACCnV,IAPS,CAOJ,OAPI,CAAA,CAQTU,OARS,CAQDoS,UARC,EAQW,OARX,CAAZ,CAAA;IAUA,OAAO,CAAA,CAAA,EAAIrJ,GAAG,CAAd,CAAA,CAAA,CAAA;AACD,GAzBmB,CAApB,CAAA;AA2BA,EAAA,OAAO,CAAC,GAAGyL,WAAJ,EAAiBnT,SAAjB,CAAA,CAA4B/B,IAA5B,CAAA,CAAA,sBAAA,GAAiCuG,cAAc,CAACgL,SAAhD,KAAA,IAAA,GAAA,sBAAA,GAA6D,GAA7D,CAAP,CAAA;AACD,CAAA;;AAED,SAASrE,iBAAT,CACE9L,QADF,EAEEwT,IAFF,EAGEU,IAHF,EAGc;AAEZ;AACA,EAAA,IAAIlU,QAAQ,CAACvB,QAAT,CAAkB,GAAlB,KAA0BuB,QAAQ,CAACqO,UAAT,CAAoB,GAApB,CAA9B,EAAwD,OAAOrO,QAAP,CAH5C;AAMZ;;AACA,EAAA,IAAIA,QAAQ,CAACqO,UAAT,CAAoB,GAApB,CAAJ,EAA8B,OAAO,CAAIrO,CAAAA,EAAAA,QAAQ,CAAnB,CAAA,CAPlB;;AASZ,EAAA,IAAIgS,oBAAoB,CAACnG,IAArB,CAA0B7L,QAA1B,CAAuC,IAAA,CAACwT,IAA5C,EAAkD,OAAO,CAAA,EAAA,EAAKxT,QAAQ,CAAA,CAApB,CATtC;;EAWZ,IAAI,CAACkU,IAAD,IAASV,IAAb,EAAmB,OAAO,CAAA,CAAA,EAAIxT,QAAQ,CAAnB,CAAA,CAAA;EAEnB,OAAO,CAAA,EAAA,EAAKA,QAAQ,CAApB,CAAA,CAAA;AACD;;ACrRD,MAAMmU,0BAA0B,GAC9B,qEADF,CAAA;AAEA,MAAMC,mBAAmB,GAAG,gCAA5B,CAAA;AACA,MAAMC,oBAAoB,GAAG,eAA7B,CAAA;AACA,MAAMC,kBAAkB,GAAG,OAA3B,CAAA;AACA,MAAMC,uBAAuB,GAAG,KAAhC,CAAA;AACA,MAAMC,wBAAwB,GAAG,IAAjC,CAAA;AACA,MAAMC,sBAAsB,GAAG,KAA/B,CAAA;AACA,MAAMC,uBAAuB,GAAG,KAAhC,CAAA;AACA,MAAM5E,iBAAiB,GAAG,QAA1B,CAAA;;AAEA,SAAS6E,oBAAT,CACEC,OADF,EAEEjP,MAFF,EAE2B;AAEzB,EAAA,IAAIiP,OAAO,CAACpO,MAAR,KAAmB,CAAvB,EAA0B;AACxBb,IAAAA,MAAM,CAACxI,KAAP,CAAa,qBAAb,EAAoC,EAApC,EAAwC,OAAxC,CAAA,CAAA;AACA,IAAA,OAAA;AACD,GAAA;;EAED,MAAM0X,QAAQ,GAAGD,OAAO,CACrBlW,GADc,CACV,CAAC,CAACiF,IAAD,EAAO6J,IAAP,CAAD,KACHE,iBAAiB,CAAC,CAACF,IAAD,CAAD,EAAS,EAAE,GAAG7H,MAAL;IAAasC,OAAO,EAAEtE,IAAI,CAACsE,OAAAA;AAA3B,GAAT,CAFJ,CAAA,CAIdwG,MAJc,CAIP3J,OAJO,CAAjB,CAAA;;AAMA,EAAA,IAAI+P,QAAQ,CAACrO,MAAT,KAAoB,CAAxB,EAA2B;AACzBb,IAAAA,MAAM,CAACxI,KAAP,CAAa,wBAAb,EAAuC,EAAvC,EAA2C,OAA3C,CAAA,CAAA;AACA,IAAA,OAAA;AACD,GAhBwB;;;AAmBzB,EAAA,OAAO2R,6BAAS,CAAC,GAAG+F,QAAJ,CAAhB,CAAA;AACD;AAGD;;;AACA,SAASC,oBAAT,CACEpK,KADF,EAEE/D,KAFF,EAGE2K,KAHF,EAGe;AAEb,EAAA,MAAMyD,UAAU,GAAGzD,KAAK,CAAC3K,KAAK,GAAG,CAAT,CAAxB,CAAA;EACA,MAAMqO,iBAAiB,GAAGD,UAAU,IAAIxI,cAAc,CAAC5B,IAAf,CAAoBoK,UAApB,CAAxC,CAAA;AACA,EAAA,MAAME,SAAS,GAAG3D,KAAK,CAAC4D,MAAM,CAACvO,KAAD,CAAN,GAAgBuO,MAAM,CAACxK,KAAK,CAAClE,MAAP,CAAvB,CAAvB,CAAA;EACA,MAAM2O,iBAAiB,GAAGF,SAAS,IAAI1I,cAAc,CAAC5B,IAAf,CAAoBsK,SAApB,CAAvC,CAAA;AACA,EAAA,OAAOD,iBAAiB,IAAjB,IAAA,IAAAA,iBAAiB,CAAG,CAAH,CAAjB,IAA0BG,iBAA1B,IAA+CA,iBAAiB,CAAC,CAAD,CAAhE,GACH,GADG,GAEH,EAFJ,CAAA;AAGD,CAAA;;AAED,SAASC,eAAT,CACEpF,OADF,EAEE;EACE7L,MADF;AAEEgB,EAAAA,cAAAA;AAFF,CAFF,EAKsE;AAAA,EAAA,IAAA,cAAA,EAAA,eAAA,EAAA,eAAA,EAAA,eAAA,CAAA;;AAEpE;EACAhB,MAAM,CACJ,CAAC6L,CAAAA,cAAAA,GAAAA,OAAO,CAACtF,KAAR,CAAc6J,uBAAd,CAAD,KAA2C,IAAA,GAAA,cAAA,GAAA,EAA3C,EAA+C/N,MAA/C,KACE,CAACwJ,CAAAA,eAAAA,GAAAA,OAAO,CAACtF,KAAR,CAAc8J,wBAAd,CAAD,KAAA,IAAA,GAAA,eAAA,GAA4C,EAA5C,EAAgDhO,MAF9C,EAGJ,CAAC;AAAExB,IAAAA,KAAAA;AAAF,GAAD,KACE,CAAGA,EAAAA,KAAK,sDAC+CA,KAAK,CACxDgL,OADwD,EAExD,YAFwD,CAGzD,CAJK,CAAA,CAKP,CATC,CAAA,CAAN,CAHoE;;EAepE7L,MAAM,CACJ,CAAC6L,CAAAA,eAAAA,GAAAA,OAAO,CAACtF,KAAR,CAAc+J,sBAAd,CAAD,KAA0C,IAAA,GAAA,eAAA,GAAA,EAA1C,EAA8CjO,MAA9C,KACE,CAACwJ,CAAAA,eAAAA,GAAAA,OAAO,CAACtF,KAAR,CAAcgK,uBAAd,CAAD,KAAA,IAAA,GAAA,eAAA,GAA2C,EAA3C,EAA+ClO,MAF7C,EAGJ,CAAC;AAAExB,IAAAA,KAAAA;AAAF,GAAD,KACE,CAAA,EAAGA,KAAK,qDAC8CA,KAAK,CACvDgL,OADuD,EAEvD,YAFuD,CAGxD,CAJK,CAAA,CAKP,EATC,CAAN,CAAA;;EAYA,KAAK,MAAMrP,SAAX,IAAwBsB,mBAAmB,CAAC+N,OAAD,EAAU,GAAV,CAA3C,EAA2D;AAAA,IAAA,IAAA,qBAAA,CAAA;;AACzD;IACA,MAAMqF,UAAU,GAAG1U,SAAS,CAACrB,OAAV,CAAkBwQ,iBAAlB,EAAqC,GAArC,CAA0CvQ,CAAAA,IAA1C,EAAnB,CAAA;AACA4E,IAAAA,MAAM,CACJ,CAACkR,UAAU,CAAC7E,QAAX,CAAA,CAAA,qBAAA,GAAoBrL,cAAc,CAACgL,SAAnC,KAAA,IAAA,GAAA,qBAAA,GAAgD,GAAhD,CADG,EAEJ,CAAC;AAAEnL,MAAAA,KAAAA;AAAF,KAAD,KACK,CAAAA,EAAAA,KAAK,CACN,CAAiB/E,cAAAA,EAAAA,MAAM,CACrB+E,KAAK,CAACqQ,UAAD,EAAa,YAAb,CADgB,CAEtB,qBAHK,CAIP,CAAA,cAAA,EAAiBpV,MAAM,CACtB+E,KAAK,CAAI,CAAA,EAAAqQ,UAAiB,CAArB,KAAA,CAAA,EAAuB,SAAvB,CADiB,CAEvB,OAAOpV,MAAM,CAAC+E,KAAK,CAAI,CAAA,EAAAqQ,UAAwB,CAA5B,YAAA,CAAA,EAA8B,SAA9B,CAAN,CAA+C,EAT3D,CAAN,CAAA;AAWD,GAAA;;AAED,EAAA,OAAO,IAAP,CAAA;AACD,CAAA;;AAED,MAAMC,KAAK,GAEP,CACDtF,OAAD,IAAqBA,OAAO,CAAC1Q,OAAR,CAAgBgV,kBAAhB,EAAoC,GAApC,CADnB,EAEDtE,OAAD,IACEA,OAAO,CAAC1Q,OAAR,CAAgB8U,mBAAhB,EAAqCU,oBAArC,CAHA,EAID9E,OAAD,IAAqBA,OAAO,CAAC1Q,OAAR,CAAgB+U,oBAAhB,EAAsC,EAAtC,CAJnB,EAKF,CAACrE,OAAD,EAAU7K,cAAV,EAA0BhB,MAA1B,KACE0M,mBAAmB,CAACb,OAAD,EAAU;EAAE7L,MAAF;AAAUgB,EAAAA,cAAAA;AAAV,CAAV,CANnB;AAAA,CAFJ,CAAA;;AAWA,SAASoQ,OAAT,CAAiBC,WAAjB,EAAoC;AAClC;EACA,OAAO,CAACA,WAAW,GAAG,EAAf,KAAsBA,WAAW,GAAG,EAApC,CAAP,CAAA;AACD,CAAA;;AAED,SAASC,mBAAT,CACEvL,eADF,EAEEwL,kBAFF,EAGEhF,SAHF,EAIEvM,MAJF,EAI+B;EAE7BA,MAAM,CAAC,QAAO+F,eAAP,IAAOA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,eAAe,CAAEyL,aAAxB,CAAA,KAA0C,UAA3C,EAAuD,CAAC;AAAE3Q,IAAAA,KAAAA;AAAF,GAAD,KAC3DA,KAAK,CAAC,6DAAD,CADD,CAAN,CAF6B;;AAM7B,EAAA,IAAI4Q,gBAAJ,CAAA;;EAEA,IAAI;IACFA,gBAAgB,GAAG1L,eAAe,CAC/ByL,aADgB,CACFD,kBADE,CAAA,CAEhBhX,GAFgB,CAEZ,CAAC,CAACiC,SAAD,EAAYkV,KAAZ,CAAD,EAAqBlP,KAArB,KAAyD,CAC5DkP,KAAK,IAAI,EADmD,EAE5DlV,SAF4D,EAG5D+P,SAAS,CAAC/J,KAAD,CAHmD,CAF7C,EAOhBmP,IAPgB,CAOX,CAAC,CAACC,CAAD,CAAD,EAAM,CAACC,CAAD,CAAN,KAAcT,OAAO,CAACQ,CAAC,GAAGC,CAAL,CAPV,CAAnB,CAAA;GADF,CASE,OAAOzT,KAAP,EAAuB;IACvB4B,MAAM,CACJ,KADI,EAEJ,CAAC;AAAEa,MAAAA,KAAAA;AAAF,KAAD,KACK,CAAA,EAAAA,KAAK,CACN/E,MAAM,CAACsC,KAAD,CAAN,CAAcjD,OAAd,CAAsB,aAAtB,EAAqC,sBAArC,CADM;AAAA,KAEP,OAAO0F,KAAK,CAAC,WAAD,CAAiB,CAAA,CAAA,EAAAA,KAAK,CACjC0Q,kBAAkB,CAAC9W,IAAnB,CAAwB,GAAxB,CADiC,EAEjC,YAFiC,CAGlC,EARC,CAAN,CAAA;AAUD,GAAA;;AAED,EAAA,OAAOgX,gBAAP,CAAA;AACD,CAAA;;AAED,SAASK,SAAT,CACEjG,OADF,EAEErK,MAFF,EAEqB;AAEnB,EAAA,MAAMxB,MAAM,GAAG0E,YAAY,CACzBlD,MAAM,CAACmD,WADkB,EAEzBnD,MAAM,CAACoD,QAFkB,EAGzBpD,MAAM,CAAClC,UAAP,CAAkBlG,YAHO,CAA3B,CAAA;AAMAoI,EAAAA,MAAM,CAACxI,KAAP,CAAa,WAAb,EAA0B6S,OAA1B,CAAA,CAAA;AAEA7L,EAAAA,MAAM,CACJ,CAAC,CAAC,IAAD,EAAO,MAAP,EAAexH,SAAf,CAAA,CAA0B8B,QAA1B,CAAmCuR,OAAnC,CADG,EAEJ,CAAC;AAAEhL,IAAAA,KAAAA;AAAF,GAAD,KACK,CAAAA,EAAAA,KAAK,CACN,CADM,4EAAA,CAAA,CAEP,mEALC,CAAN,CAAA;AAQA,EAAeoQ,eAAe,CAACpF,OAAD,EAAU;IACtC7K,cAAc,EAAEQ,MAAM,CAACR,cADe;AAEtChB,IAAAA,MAAAA;AAFsC,GAAV,EAA9B;;AAMA,EAAA,KAAK,MAAM6H,IAAX,IAAmBsJ,KAAnB,EAA0B;IACxBtF,OAAO,GAAGhE,IAAI,CAACgE,OAAD,EAAUrK,MAAM,CAACR,cAAjB,EAAiChB,MAAjC,CAAd,CAAA;AACD,GAAA;;AAEDwB,EAAAA,MAAM,CAACxI,KAAP,CAAa,sBAAb,EAAqC6S,OAArC,CAAA,CAAA;EAEA,MAAMkG,OAAO,GAAa,EAA1B,CAAA;EACA,MAAMC,SAAS,GAAa,EAA5B,CAAA;EACA,MAAM5H,MAAM,GAAgB,EAA5B,CAAA;AAEA,EAAA,MAAM6H,aAAa,GAAG;IACpBjS,MADoB;IAEpBnD,KAAK,EAAE2E,MAAM,CAAC3E,KAFM;IAGpB7D,KAAK,EAAEwI,MAAM,CAACxI,KAAAA;GAHhB,CAAA;AAMA,EAAA,MAAMkZ,yBAAyB,GAAG,EAChC,GAAGD,aAD6B;IAEhCjR,cAAc,EAAEQ,MAAM,CAACR,cAFS;IAGhC+M,cAAc,EAAEvM,MAAM,CAACuM,cAHS;AAIhC7U,IAAAA,eAAe,EAAEsI,MAAM,CAAClC,UAAP,CAAkBpG,eAAAA;GAJrC,CAAA;EAOA,MAAMqT,SAAS,GAAG,CAAC,GAAGzO,mBAAmB,CAAC+N,OAAD,EAAU,GAAV,CAAvB,CAAlB,CAAA;AAEA,EAAA,MAAM0F,kBAAkB,GAAGhF,SAAS,CAAChS,GAAV,CAAc4X,CAAC,IACxCrD,gBAAgB,CAACqD,CAAD,EAAID,yBAAJ,CADS,CAA3B,CAAA;AAIA,EAAA,MAAMT,gBAAgB,GAAGH,mBAAmB,CAC1C9P,MAAM,CAACuE,eADmC,EAE1CwL,kBAF0C,EAG1ChF,SAH0C,EAI1CvM,MAJ0C,CAA5C,CAAA;AAOA,EAAA,MAAMoS,kBAAkB,GAAG,EACzB,GAAGH,aADsB;AAEzBvI,IAAAA,sBAAsB,EAAE,KAFC;IAGzBpK,UAAU,EAAEkC,MAAM,CAAClC,UAHM;IAIzB0B,cAAc,EAAEQ,MAAM,CAACR,cAJE;IAKzB+E,eAAe,EAAEvE,MAAM,CAACuE,eALC;AAMzBtM,IAAAA,WAAW,EAAE+H,MAAM,CAAClC,UAAP,CAAkB7F,WAAAA;GANjC,CAAA;;EASA,KAAK,MAAM,GAAG4Y,kBAAH,EAAuB7V,SAAvB,CAAX,IAAgDiV,gBAAhD,EAAkE;AAChE,IAAA,MAAMhB,OAAO,GAAG,CACd,GAAGnT,cAAc,CAAC+U,kBAAD,EAAqB7Q,MAAM,CAACuE,eAA5B,CADH,CAAhB,CAAA;IAIA,MAAMuM,OAAO,GAAG9B,oBAAoB,CAACC,OAAD,EAAU,EAC5C,GAAG2B,kBADyC;MAE5CxJ,YAAY,EAAEoH,0BAA0B,CAACtI,IAA3B,CACZmF,WAAW,CAACwF,kBAAD,CADC,CAF8B;MAK5C/K,gBAAgB,EAAE,IAAIiL,MAAJ;AAEhB;AACA;AACA,MAAA,CAAA,CAAA,EAAI1F,WAAW,CAAC,CAAA,CAAA,EAAIwF,kBAAoB,CAAzB,CAAA,2BAJC,CAL0B;AAW5C9K,MAAAA,QAAQ,EAAE8K,kBAAAA;AAXkC,KAAV,CAApC,CAAA;;IAcA,IAAI,CAACC,OAAL,EAAc;MACZ9Q,MAAM,CAACxI,KAAP,CAAa,4BAAb,EAA2CwD,SAA3C,EAAsD,OAAtD,CAAA,CADY;;MAIZ,IAAIA,SAAS,KAAK,EAAlB,EAAsBwV,SAAS,CAAC5C,IAAV,CAAe5S,SAAf,CAAA,CAJV;;AAOZ,MAAA,IAAIgF,MAAM,CAACoD,QAAX,EAAqB,SAPT;AAUZ;;MACA,OAAO;AAAEwF,QAAAA,MAAM,EAAE5R,SAAV;QAAqBuZ,OAArB;AAA8BC,QAAAA,SAAAA;OAArC,CAAA;AACD,KAAA;;IAEDD,OAAO,CAAC3C,IAAR,CAAa5S,SAAb,CAAA,CAAA;AACAgF,IAAAA,MAAM,CAACxI,KAAP,CAAa,eAAb,EAA8BsZ,OAA9B,EAAuC,SAAvC,CAAA,CAAA;IAEAlI,MAAM,CAACgF,IAAP,CAAYkD,OAAZ,CAAA,CAAA;AACD,GAAA;;AAED,EAAA,IAAIlI,MAAM,CAAC/H,MAAP,KAAkB,CAAtB,EAAyB,OAAO;AAAE+H,IAAAA,MAAM,EAAE5R,SAAV;IAAqBuZ,OAArB;AAA8BC,IAAAA,SAAAA;AAA9B,GAAP,CA5GN;;AA+GnB,EAAA,MAAMQ,YAAY,GAAG7H,6BAAS,CAAC,GAAGP,MAAJ,CAA9B,CAAA;EAEA,OAAO;AAAEA,IAAAA,MAAM,EAAEoI,YAAV;IAAwBT,OAAxB;AAAiCC,IAAAA,SAAAA;GAAxC,CAAA;AACD;;ACzRD,SAASS,SAAT,CAAmB;AACjBC,EAAAA,KAAK,EAAEC,CADU;EAEjBC,OAFiB;EAGjBC,GAHiB;EAIjBjX,IAJiB;AAKjBkX,EAAAA,UAAAA;AALiB,CAAnB,EAYC;AACC,EAAA,MAAMC,UAAU,GACdnX,IAAI,KAAK,SAAT,GACI,CAAC+W,CAAC,CAACK,sBAAF,CAAyBF,UAAzB,CAAD,CADJ,GAEIlX,IAAI,GACJ,CAAC+W,CAAC,CAACM,eAAF,CAAkBH,UAAlB,EAA8BH,CAAC,CAACG,UAAF,CAAalX,IAAb,CAA9B,CAAD,CADI,GAEJ,EALN,CAAA;AAMAgX,EAAAA,OAAO,CAACM,gBAAR,CACE,MADF,EAEEP,CAAC,CAACQ,iBAAF,CAAoBJ,UAApB,EAAgCJ,CAAC,CAACS,aAAF,CAAgBP,GAAhB,CAAhC,CAFF,CAAA,CAAA;AAID,CAAA;AAED;;AAEG;;;AACH,SAASQ,MAAT,CACEC,OADF,EAEEX,CAFF,EAEa;EAQX,IAAIW,OAAO,KAAK,IAAhB,EAAsB;IACpB,OAAOX,CAAC,CAACY,WAAF,EAAP,CAAA;AACD,GAAA;;AAED,EAAA,QAAQ,OAAOD,OAAf;AACE,IAAA,KAAK,UAAL;AAAiB,MAAA;AACf,QAAA,OAAOX,CAAC,CAACa,eAAF,CAAkB,MAAlB,EAA0Bb,CAAC,CAACc,cAAF,CAAiB,CAAjB,CAA1B,EAA+C,IAA/C,CAAP,CAAA;AACD,OAAA;;AAED,IAAA,KAAK,QAAL;AAAe,MAAA;AACb,QAAA,OAAOd,CAAC,CAACc,cAAF,CAAiBH,OAAjB,CAAP,CAAA;AACD,OAAA;;AAED,IAAA,KAAK,SAAL;AAAgB,MAAA;AACd,QAAA,OAAOX,CAAC,CAACe,cAAF,CAAiBJ,OAAjB,CAAP,CAAA;AACD,OAAA;;AAED,IAAA,KAAK,WAAL;AAAkB,MAAA;AAChB,QAAA,OAAOX,CAAC,CAACa,eAAF,CAAkB,MAAlB,EAA0Bb,CAAC,CAACc,cAAF,CAAiB,CAAjB,CAA1B,EAA+C,IAA/C,CAAP,CAAA;AACD,OAAA;;AAED,IAAA,KAAK,QAAL;AAAe,MAAA;AACb,QAAA,OAAOd,CAAC,CAACS,aAAF,CAAgBE,OAAhB,CAAP,CAAA;AACD,OAAA;;AAED,IAAA;AAAS,MAAA;AACP,QAAA,IAAIzY,KAAK,CAACC,OAAN,CAAcwY,OAAd,CAAJ,EAA4B;AAC1B,UAAA,OAAOX,CAAC,CAACgB,eAAF,CAAkBL,OAAO,CAAC/Y,GAAR,CAAYqZ,CAAC,IAAIP,MAAM,CAACO,CAAD,EAAIjB,CAAJ,CAAvB,CAAlB,CAAP,CAAA;AACD,SAAA;;QAED,OAAOA,CAAC,CAACkB,gBAAF,CACLC,wBAAwB,CAACR,OAAD,EAAoCX,CAApC,CADnB,CAAP,CAAA;AAGD,OAAA;AA7BH,GAAA;AA+BD,CAAA;;AAED,SAASmB,wBAAT,CACER,OADF,EAEEX,CAFF,EAEa;AAEX,EAAA,OAAOhR,MAAM,CAACoS,IAAP,CAAYT,OAAZ,CAAA,CACJhJ,MADI,CACG9F,CAAC,IAAI,OAAO8O,OAAO,CAAC9O,CAAD,CAAd,KAAsB,WAD9B,CAAA,CAEJjK,GAFI,CAGFiK,CAAD,IACEmO,CAAC,CAACqB,cAAF,CAAiBrB,CAAC,CAACS,aAAF,CAAgB5O,CAAhB,CAAjB,EAAqC6O,MAAM,CAACC,OAAO,CAAC9O,CAAD,CAAR,EAAamO,CAAb,CAA3C,CAJC,CAAP,CAAA;AAMD,CAAA;;AAED,SAASsB,mBAAT,CAA6B;EAC3BC,KAD2B;EAE3Bnc,IAF2B;AAG3Boc,EAAAA,WAAAA;AAH2B,CAA7B,EAI2B;EACzB,MAAMC,kBAAkB,GACtBD,WAAW,CAACtO,WAAZ,CAAwB7L,UAAxB,IACAma,WAAW,CAACrO,YAAZ,CAAyBnM,MAAzB,CAAgCd,IAAhC,CAAqCyB,QAArC,CAA8CvC,IAAI,CAACsc,IAAL,CAAUC,MAAV,CAAiBna,KAA/D,CAFF,CAAA;AAGA,EAAA,MAAMoa,iBAAiB,GACrBxc,IAAI,CAACsc,IAAL,CAAUC,MAAV,CAAiBna,KAAjB,KAA2Bga,WAAW,CAACrO,YAAZ,CAAyBnM,MAAzB,CAAgCd,IAD7D,CAAA;AAGA,EAAA,IAAI,CAAC0b,iBAAD,IAAsB,CAACH,kBAA3B,EAA+C,OAPtB;AAUzB;;EACArc,IAAI,CAACsc,IAAL,CAAUG,UAAV,CAAqB7F,IAArB,CAA0B8F,SAAS,IAAG;AACpC,IAAA,IACEA,SAAS,CAACxV,IAAV,KAAmB,wBAAnB,IACAkV,WAAW,CAACrO,YAAZ,CAAyBnM,MAAzB,CAAgCf,MAAhC,KAA2C,SAD3C;AAGA;AACA;IACA,CAAC6b,SAAS,CAACC,KAAV,CAAgB9Y,IAAhB,CAAqBsO,UAArB,CAAgC,GAAhC,CANH,EAOE;AACAgK,MAAAA,KAAK,CAACS,gBAAN,GAAyBF,SAAS,CAACC,KAAnC,CAAA;MACAR,KAAK,CAACU,wBAAN,GAAiC,IAAjC,CAAA;AACA,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;IAED,IACEH,SAAS,CAACxV,IAAV,KAAmB,iBAAnB,IACAwV,SAAS,CAACI,QAAV,CAAmB5V,IAAnB,KAA4B,YAD5B,IAEAwV,SAAS,CAACI,QAAV,CAAmBjZ,IAAnB,KAA4BuY,WAAW,CAACrO,YAAZ,CAAyBnM,MAAzB,CAAgCf,MAH9D,EAIE;AACAsb,MAAAA,KAAK,CAACS,gBAAN,GAAyBF,SAAS,CAACC,KAAnC,CAAA;MACAR,KAAK,CAACU,wBAAN,GAAiC,IAAjC,CAAA;AACA,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;IAEDV,KAAK,CAACU,wBAAN,GAAiC,KAAjC,CAAA;AACA,IAAA,OAAO,KAAP,CAAA;GAzBF,CAAA,CAAA;AA2BD,CAAA;;AAED,SAASE,gBAAT,CAA0B;EACxBZ,KADwB;EAExBnc,IAFwB;AAGxBoc,EAAAA,WAAAA;AAHwB,CAA1B,EAI2B;EACzB,MAAMC,kBAAkB,GACtBD,WAAW,CAACtO,WAAZ,CAAwB7L,UAAxB,IACAma,WAAW,CAACrO,YAAZ,CAAyBnN,GAAzB,CAA6BE,IAA7B,CAAkCyB,QAAlC,CAA2CvC,IAAI,CAACsc,IAAL,CAAUC,MAAV,CAAiBna,KAA5D,CAFF,CAAA;AAGA,EAAA,MAAM4a,eAAe,GACnBhd,IAAI,CAACsc,IAAL,CAAUC,MAAV,CAAiBna,KAAjB,KAA2Bga,WAAW,CAACrO,YAAZ,CAAyBnN,GAAzB,CAA6BE,IAD1D,CAAA;AAGA,EAAA,IAAI,CAACkc,eAAD,IAAoB,CAACX,kBAAzB,EAA6C,OAPpB;AAUzB;;EACArc,IAAI,CAACsc,IAAL,CAAUG,UAAV,CAAqB7F,IAArB,CAA0B8F,SAAS,IAAG;AACpC,IAAA,IACEA,SAAS,CAACxV,IAAV,KAAmB,wBAAnB,IACAkV,WAAW,CAACrO,YAAZ,CAAyBnN,GAAzB,CAA6BC,MAA7B,KAAwC,SAF1C,EAGE;AACAsb,MAAAA,KAAK,CAACc,aAAN,GAAsBP,SAAS,CAACC,KAAhC,CAAA;MACAR,KAAK,CAACe,qBAAN,GAA8B,IAA9B,CAAA;AACA,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;IAED,IACER,SAAS,CAACxV,IAAV,KAAmB,iBAAnB,IACAwV,SAAS,CAACI,QAAV,CAAmB5V,IAAnB,KAA4B,YAD5B,IAEAwV,SAAS,CAACI,QAAV,CAAmBjZ,IAAnB,KAA4BuY,WAAW,CAACrO,YAAZ,CAAyBnN,GAAzB,CAA6BC,MAH3D,EAIE;AACAsb,MAAAA,KAAK,CAACc,aAAN,GAAsBP,SAAS,CAACC,KAAhC,CAAA;MACAR,KAAK,CAACe,qBAAN,GAA8B,IAA9B,CAAA;AACA,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;IAEDf,KAAK,CAACe,qBAAN,GAA8B,KAA9B,CAAA;AACA,IAAA,OAAO,KAAP,CAAA;GArBF,CAAA,CAAA;AAuBD,CAAA;;AAED,SAASC,gBAAT,CAA0Bnd,IAA1B,EAAoE;AAAA,EAAA,IAAA,qBAAA,CAAA;;EAClE,IAAIod,WAAW,GAAG,KAAlB,CAAA;AACA,EAAA,IAAIC,QAAQ,GAAG,EAAf,CAFkE;;AAKlE,EAAA,MAAMC,cAAc,GAAA,CAAA,qBAAA,GAAItd,IAAI,CAAC8R,GAAL,CAAS,OAAT,CAAA,CAAkByL,QAAlB,EAAA,CAA6Bnb,KAAjC,KAAA,IAAA,GAAA,qBAAA,GAAqD,EAAzE,CAAA;EACA,IAAIkb,cAAc,KAAK,EAAvB,EAA2BF,WAAW,GAAG,IAAd,CANuC;AASlE;;EACA,IAAIE,cAAc,CAAC/a,QAAf,CAAwB,GAAxB,CAAJ,EAAkC6a,WAAW,GAAG,IAAd,CAAA;EAElC,IAAIA,WAAJ,EACEC,QAAQ,GAAIrd,IAAI,CAAC8R,GAAL,CAAS,cAAT,CACTtP,CAAAA,GADS,CACLgb,CAAC,IAAIA,CAAC,CAAClB,IAAF,CAAOla,KAAP,CAAaqb,GADb,CAET/a,CAAAA,IAFS,CAEJ,EAFI,CAAZ,CAbgE;;AAkBlE,EAAA,IAAI4a,cAAc,CAAChT,MAAf,KAA0B,CAA1B,IAA+B+S,QAAQ,CAAC/S,MAAT,GAAkB,CAArD,EAAwD,OAAO,MAAP,CAlBU;;EAqBlE,IAAI+S,QAAQ,CAAC/S,MAAT,GAAkBgT,cAAc,CAAChT,MAArC,EAA6C,OAAO+S,QAAP,CAAA;AAE7C,EAAA,OAAOC,cAAP,CAAA;AACD;;;AAGD,SAASI,QAAT,CACE1d,IADF,EAEE;EAAE4a,CAAF;AAAKuB,EAAAA,KAAAA;AAAL,CAFF,EAE6C;EAE3C,MAAMwB,SAAS,GAAG/C,CAAC,CAAC+C,SAAF,IAAe/C,CAAC,CAACgD,SAAnC,CAAA;EACA,MAAMC,OAAO,GAAG7d,IAAI,CAACsc,IAAL,CAAUwB,GAAV,CAAc5W,IAA9B,CAAA;EAEA,IACE2W,OAAO,KAAK,YAAZ,IACAA,OAAO,KAAK,kBADZ,IAEAA,OAAO,KAAK,gBAHd,EAKE,OAAA;AAEF,EAAA,MAAM1a,MAAM,GAAGga,gBAAgB,CAACnd,IAAD,CAA/B,CAZ2C;;EAe3C,MAAM+d,SAAS,GAAG/d,IAAI,CAAC8R,GAAL,CAAS,OAAT,CAAA,CAAkBwK,IAAlB,CAAuB0B,GAAzC,CAAA;;EAEA,IAAIH,OAAO,KAAK,gBAAhB,EAAkC;IAChCI,mBAAmB,CACjBje,IAAI,CAAC8R,GAAL,CAAS,KAAT,CAAA,CAAgBA,GAAhB,CAAoB,QAApB,CADiB;AAGjB6L,IAAAA,SAAS,CAACxB,KAAK,CAACS,gBAAP,CAHQ,CAAnB,CAAA;IAKAT,KAAK,CAAC+B,iBAAN,GAA0B,IAA1B,CAAA;AACD,GAPD,MAOO,IAAIL,OAAO,KAAK,kBAAhB,EAAoC;IACzCI,mBAAmB,CACjBje,IAAI,CAAC8R,GAAL,CAAS,KAAT,CAAA,CAAgBA,GAAhB,CAAoB,QAApB,CADiB;AAGjB6L,IAAAA,SAAS,CAACxB,KAAK,CAACS,gBAAP,CAHQ,CAAnB,CAAA;IAKAT,KAAK,CAAC+B,iBAAN,GAA0B,IAA1B,CAAA;AACD,GAAA;;AAED,EAAA,IAAIL,OAAO,KAAK,gBAAZ,IAAgCA,OAAO,KAAK,kBAAhD,EAAoE;IAClEI,mBAAmB,CACjBje,IADiB,EAEjB4a,CAAC,CAACuD,cAAF,CAAiBR,SAAS,CAAC3d,IAAI,CAACsc,IAAL,CAAUwB,GAAX,CAA1B,EAA2C,CACzClD,CAAC,CAACG,UAAF,CAAa,iBAAb,CADyC,CAA3C,CAFiB,CAAnB,CAAA;IAOA/a,IAAI,GACFA,IAAI,CAAC8R,GAAL,CAAS,WAAT,CAAA,CACA,CADA,CADF,CAAA;AAGD,GAAA;;AAED9R,EAAAA,IAAI,CAACsc,IAAL,CAAU0B,GAAV,GAAgBD,SAAhB,CA9C2C;;EAgD3C,OAAO;IAAE5a,MAAF;AAAUnD,IAAAA,IAAAA;GAAjB,CAAA;AACD,CAAA;;AAED,SAASie,mBAAT,CACEje,IADF,EAEEoe,WAFF,EAEsC;EAEpC,MAAM;AAAEJ,IAAAA,GAAAA;GAAQhe,GAAAA,IAAI,CAACsc,IAArB,CAAA;EACA,MAAM+B,QAAQ,GAAGD,WAAW,GAAGpe,IAAI,CAACse,WAAL,CAAiBF,WAAjB,CAAH,GAAmC,EAA/D,CAAA;;EACA,IAAItb,KAAK,CAACC,OAAN,CAAcsb,QAAd,CAA2BA,IAAAA,QAAQ,CAAC/T,MAAT,GAAkB,CAAjD,EAAoD;AAClD+T,IAAAA,QAAQ,CAACjH,OAAT,CAAiB3U,CAAC,IAAG;AACnBA,MAAAA,CAAC,CAAC6Z,IAAF,CAAO0B,GAAP,GAAaA,GAAb,CAAA;KADF,CAAA,CAAA;AAGD,GAAA;;AAED,EAAA,OAAOK,QAAP,CAAA;AACD,CAAA;;AAED,SAASE,WAAT,CAAqB1a,IAArB,EAAmCgX,OAAnC,EAA+D;AAC7D,EAAA,OAAOA,OAAO,CAAC2D,KAAR,CAAcC,qBAAd,CAAoC5a,IAApC,CAAP,CAAA;AACD,CAAA;;AAED,SAAS6a,YAAT,CAAsB1e,IAAtB,EAAoC;EAClC,OAAOA,IAAI,CAAC2e,UAAL,CAAgBlc,CAAC,IACtBA,CAAC,CAACmc,mBAAF,EADK,CAAP,CAAA;AAGD,CAAA;;AAED,SAASC,iBAAT,CAA2BC,OAA3B,EAA4C;AAC1C,EAAA,MAAMC,UAAU,GAAGD,OAAO,CAAChN,GAAR,CAAY,YAAZ,CAAnB,CAAA;AAGA,EAAA,MAAMkN,cAAc,GAAGD,UAAU,CAACvc,GAAX,CAAeC,CAAC,IAAA;AAAA,IAAA,IAAA,YAAA,CAAA;;AAAA,IAAA,OAAA,CAAA,YAAA,GAAIA,CAAC,CAAC6Z,IAAF,CAAOzY,IAAX,KAAA,IAAA,GAAA,KAAA,CAAA,GAAI,aAAaA,IAAjB,CAAA;AAAA,GAAhB,CAAvB,CAAA;AACA,EAAA,OAAOmb,cAAP,CAAA;AACD,CAAA;;AAED,SAASC,mBAAT,CACEF,UADF,EACwB;AAMtB,EAAA,IAAI,CAAChb,MAAM,CAACgb,UAAD,CAAX,EACE,OAAO;AAAEtU,IAAAA,KAAK,EAAE,CAAT;AAAYyU,IAAAA,eAAe,EAAE,KAA7B;AAAoCC,IAAAA,SAAS,EAAE1e,SAAAA;GAAtD,CAAA;EACF,MAAMgK,KAAK,GAAGsU,UAAU,CAACK,SAAX,CACZD,SAAS,IACP,CAAAA,SAAS,IAAT,IAAA,GAAA,KAAA,CAAA,GAAAA,SAAS,CAAEE,cAAX,EACEF,KAAAA,SAAS,CAACrN,GAAV,CAAc,WAAd,CAAwCwK,CAAAA,IAAxC,KACA,KAJQ,CAAd,CAAA;EAOA,OAAO;IAAE7R,KAAF;IAASyU,eAAe,EAAEzU,KAAK,IAAI,CAAnC;IAAsC0U,SAAS,EAAEJ,UAAU,CAACtU,KAAD,CAAA;GAAlE,CAAA;AACD,CAAA;;AAED,SAAS6U,gBAAT,CACEtf,IADF;AAAA;AAIE,EAAA,IAAIA,IAAI,CAACuf,MAAL,CAAYrY,IAAZ,KAAqB,gBAAzB,EAA2C,OAAA;AAE3C,EAAA,MAAMqY,MAAM,GAAGvf,IAAI,CAAC2e,UAAL,CAAgB9C,CAAC,IAAIA,CAAC,CAAC2D,gBAAF,EAArB,CAAf,CAAA;EACA,IAAI,CAACD,MAAL,EAAa,OAAA;EAEb,MAAME,QAAQ,GAAIF,MAAM,CAACzN,GAAP,CAAW,WAAX,CAAA,CAAuC,CAAvC,CAAA,IAA6C,EAA/D,CAAA;EAEA,OAAO;IACLyN,MADK;IAELnK,KAAK,EAAEqK,QAAQ,CAAClC,QAAT,IAAsBkC,QAAQ,CAAClC,QAAT,EAAoBnb,CAAAA,KAAAA;GAFnD,CAAA;AAID,CAAA;;AAED,SAASsd,sBAAT,CACE1f,IADF,EACY;AAEV,EAAA,IAAIA,IAAI,CAACuf,MAAL,CAAYrY,IAAZ,KAAqB,0BAAzB,EAAqD,OAAA;AAErD,EAAA,MAAMqY,MAAM,GAAGvf,IAAI,CAAC2e,UAAL,CAAgB9C,CAAC,IAC9BA,CAAC,CAAC8D,0BAAF,EADa,CAAf,CAAA;EAGA,IAAI,CAACJ,MAAL,EAAa,OAAA;EAEb,IAAIA,MAAM,CAACjD,IAAP,CAAYwB,GAAZ,CAAgB5W,IAAhB,KAAyB,YAA7B,EAA2C,OAAA;EAE3C,OAAO;IAAEqY,MAAF;IAAUnK,KAAK,EAAEmK,MAAM,CAACzN,GAAP,CAAW,OAAX,CAAA,CAAoByL,QAApB,EAA+Bnb,CAAAA,KAAAA;GAAvD,CAAA;AACD,CAAA;;AAED,SAASwd,mBAAT,CACE5f,IADF,EACgB;AAEd,EAAA,IAAIA,IAAI,CAACuf,MAAL,CAAYrY,IAAZ,KAAqB,kBAAzB,EAA6C,OAAA;AAE7C,EAAA,MAAMqY,MAAM,GAAGvf,IAAI,CAAC2e,UAAL,CAAgB9C,CAAC,IAC9BA,CAAC,CAACgE,kBAAF,EADa,CAAf,CAAA;EAGA,IAAI,CAACN,MAAL,EAAa,OAAA;EAEb,OAAO;IACLA,MADK;AAEL;IACAnK,KAAK,EAAEmK,MAAM,CAACzN,GAAP,CAAW,UAAX,CAAA,CAAuBwK,IAAvB,CAA4BzY,IAAAA;GAHrC,CAAA;AAKD,CAAA;;AAED,SAASic,gCAAT,CAA0C;EACxClF,CADwC;EAExCG,UAFwC;AAGxC1I,EAAAA,MAAAA;AAHwC,CAA1C,EAQC;AACC,EAAA,MAAM0N,cAAc,GAAGnF,CAAC,CAACoF,eAAF,CAAkB;AACvCvC,IAAAA,GAAG,EAAE,CAAGpL,EAAAA,MAAH,WAAGA,MAAH,GAAa,EAAI,CADiB,CAAA;AAEvC4N,IAAAA,MAAM,EAAE,CAAG5N,EAAAA,MAAH,IAAGA,IAAAA,GAAAA,MAAH,GAAa,EAAI,CAAA,CAAA;AAFc,GAAlB,CAAvB,CAAA;AAIA,EAAA,MAAM6N,YAAY,GAAGtF,CAAC,CAACuF,wBAAF,CACnBpF,UADmB,EAEnBH,CAAC,CAACwF,eAAF,CAAkB,CAACL,cAAD,CAAlB,EAAoC,EAApC,CAFmB,CAArB,CAAA;AAIA,EAAA,OAAOG,YAAP,CAAA;AACD,CAAA;;AAED,SAASG,WAAT,CAAqBxc,IAArB,EAAiC;AAC/B,EAAA,OAAOA,IAAI,CAACgP,KAAL,CAAW,CAAX,EAAc,CAAd,CAAA,CAAiBzE,WAAjB,EAAA,KAAmCvK,IAAI,CAACgP,KAAL,CAAW,CAAX,EAAc,CAAd,CAA1C,CAAA;AACD,CAAA;;AAED,MAAMyN,iBAAiB,GAAG,CAA1B,6GAAA,CAAA,CAAA;;AAEA,SAASC,sBAAT,CACEzB,OADF,EAEElE,CAFF,EAGE3S,MAHF,EAG+B;AAE7B,EAAA,MAAMjI,IAAI,GAAG8R,uBAAG,CAACgN,OAAD,EAAU,gBAAV,CAAhB,CAAA;EAEA,IAAI9e,IAAJ,EACE,OAAOqgB,WAAW,CAACrgB,IAAD,CAAX,GAAoB4a,CAAC,CAACG,UAAF,CAAa/a,IAAb,CAApB,GAAyC4a,CAAC,CAACS,aAAF,CAAgBrb,IAAhB,CAAhD,CAAA;AAEF,EAAA,MAAMwgB,YAAY,GAAG1O,uBAAG,CAACgN,OAAD,EAAU,WAAV,CAAxB,CAAA;EACA7W,MAAM,CAACW,OAAO,CAAC4X,YAAD,CAAR,EAAwB,MAAMF,iBAA9B,CAAN,CAR6B;;AAW7B,EAAA,MAAMG,UAAU,GAAG3O,uBAAG,CAAC0O,YAAD,EAAe,aAAf,CAAtB,CAAA;EACAvY,MAAM,CAACW,OAAO,CAAC6X,UAAD,CAAR,EAAsB,MAAMH,iBAA5B,CAAN,CAAA;AAEA,EAAA,MAAMI,YAAY,GAAG5O,uBAAG,CAAC0O,YAAD,EAAe,eAAf,CAAxB,CAAA;EACAvY,MAAM,CAACW,OAAO,CAAC8X,YAAD,CAAR,EAAwB,MAAMJ,iBAA9B,CAAN,CAAA;AAEA,EAAA,OAAO1F,CAAC,CAAC+F,gBAAF,CACL/F,CAAC,CAACG,UAAF,CAAa0F,UAAb,CADK,EAEL7F,CAAC,CAACG,UAAF,CAAa2F,YAAb,CAFK,CAAP,CAAA;AAID,CAAA;;AAWD,SAASE,mBAAT,CAA6B;EAC3BhG,CAD2B;EAE3BiG,SAF2B;EAG3B/B,OAH2B;EAI3BjE,OAJ2B;EAK3BsB,KAL2B;AAM3BC,EAAAA,WAAAA;AAN2B,CAA7B,EAOsB;EACpB,MAAM0E,SAAS,GAAGjG,OAAO,CAAC2D,KAAR,CAAcC,qBAAd,CAAoC,aAApC,CAAlB,CAAA;;AAEA,EAAA,IAAI,CAACtC,KAAK,CAACS,gBAAX,EAA6B;IAC3BT,KAAK,CAACS,gBAAN,GAAyB2B,WAAW,CAAC,QAAD,EAAW1D,OAAX,CAApC,CAAA;IACAsB,KAAK,CAAC+B,iBAAN,GAA0B,IAA1B,CAAA;AACD,GAAA;;EAED,MAAM6C,QAAQ,GAAGR,sBAAsB,CAACzB,OAAD,EAAUlE,CAAV,EAAawB,WAAW,CAACnU,MAAzB,CAAvC,CAAA;EAEA,MAAM+Y,IAAI,GAAG,CAACD,QAAD,EAAWF,SAAX,CAAsBtO,CAAAA,MAAtB,CAA6B3J,OAA7B,CAAb,CAAA;EACA,MAAMmS,UAAU,GAAGH,CAAC,CAACuD,cAAF,CAAiBhC,KAAK,CAACS,gBAAvB,EAAyCoE,IAAzC,CAAnB,CAAA;EACA,MAAMC,WAAW,GAAG,CAACrG,CAAC,CAACsG,kBAAF,CAAqBJ,SAArB,EAAgC/F,UAAhC,CAAD,CAApB,CAAA;EACA,MAAMoG,gBAAgB,GAAGvG,CAAC,CAACwG,mBAAF,CAAsB,OAAtB,EAA+BH,WAA/B,CAAzB,CAAA;EAEA,MAAMI,cAAc,GAAGvC,OAAO,CAACH,UAAR,CAAmBlc,CAAC,IACzCA,CAAC,CAAC6e,UAAF,GAAe7e,CAAC,CAAC6e,UAAF,CAAaC,SAAb,EAAf,GAA0C,KADrB,CAAvB,CAAA;AAGA,EAAA,IAAIF,cAAJ,EAAoBA,cAAc,CAACG,YAAf,CAA4BL,gBAA5B,CAAA,CAAA;;AAEpB,EAAA,IAAIvG,CAAC,CAACiF,kBAAF,CAAqBkB,QAArB,CAAJ,EAAoC;AAClC;IACA,MAAMU,EAAE,GAAG7G,CAAC,CAAC8G,aAAF,CAAgBZ,SAAS,CAACjd,IAA1B,CAAX,CAAA;AACAib,IAAAA,OAAO,CAAChN,GAAR,CAAY,MAAZ,CAAoBwM,CAAAA,WAApB,CAAgCmD,EAAhC,CAAA,CAAA;AACA,IAAA,IAAI3C,OAAO,CAACxC,IAAR,CAAaqF,WAAjB,EAA8B,OAAA;IAC5B7C,OAAO,CAACwC,UAAR,CAAmBxP,GAAnB,CAAuB,qBAAvB,CAAA,CAA2DwM,WAA3D,CAAuEmD,EAAvE,CAAA,CAAA;AACH,GAND,MAMO;IACH3C,OAAO,CAACxC,IAAR,CAAazY,IAAb,CAAsCA,IAAtC,GAA6Cid,SAAS,CAACjd,IAAvD,CAAA;AACF,IAAA,IAAIib,OAAO,CAACxC,IAAR,CAAaqF,WAAjB,EAA8B,OAFzB;;AAIL7C,IAAAA,OAAO,CAACwC,UAAR,CAAmBhF,IAAnB,CAAwBsF,cAAxB,CAAuC/d,IAAvC,CAA4CA,IAA5C,GAAmDid,SAAS,CAACjd,IAA7D,CAAA;AACD,GAAA;AACF,CAAA;;AAED,SAASge,gBAAT,CACE7hB,IADF,EAC8B;AAE5B,EAAA,MAAM+e,UAAU,GAAG/e,IAAI,CAAC8R,GAAL,CAAS,2BAAT,CAAnB,CAAA;EAGA,OAAOiN,UAAU,CAACxM,MAAX,CAAkBsH,CAAC,IAAIA,CAAC,CAACwF,cAAF,EAAvB,CAAP,CAAA;AACD;;ACpdD,MAAMyC,YAAY,GAAG,IAAI5R,GAAJ,CAAQ,CAC3B,SAD2B,EAE3B,QAF2B,EAG3B,KAH2B,EAI3B,OAJ2B,EAK3B,QAL2B,EAM3B,SAN2B,EAO3B,aAP2B,EAQ3B,YAR2B,EAS3B,cAT2B,EAU3B,cAV2B,CAAR,CAArB,CAAA;AAac,SAAU6R,eAAV,CACZC,OADY,EAEZ5F,WAFY,EAEY;AAExB,EAAA,MAAM6F,yBAAyB,GAAGrY,MAAM,CAACoS,IAAP,CAAYgG,OAAZ,CAAqBxX,CAAAA,IAArB,CAChChD,SAAS,IAAIA,SAAS,KAAK,IADK,CAAlC,CAAA;AAGA4U,EAAAA,WAAW,CAACnU,MAAZ,CACE,CAACga,yBADH,EAEE,CAAC;AAAEnZ,IAAAA,KAAAA;AAAF,GAAD,KACK,CAAA,EAAAA,KAAK,CACN,CADM,iCAAA,CAAA,CAEP,CAA6CA,0CAAAA,EAAAA,KAAK,CACpB,CAAA,2BAAA,CADoB,EAEjD,SAFiD,CAGhD,CARP,CAAA,CAAA,CAAA;AAWA,EAAA,MAAMoZ,iBAAiB,GAAGtY,MAAM,CAACoS,IAAP,CAAYgG,OAAZ,CAAqBxX,CAAAA,IAArB,CACxBhD,SAAS,IAAI,CAACsa,YAAY,CAACrP,GAAb,CAAiBjL,SAAjB,CADU,CAA1B,CAAA;AAGA4U,EAAAA,WAAW,CAACnU,MAAZ,CACE,CAACia,iBADH,EAEE,CAAC;AAAEpZ,IAAAA,KAAAA;AAAF,GAAD,KACE,CAAA,EAAGA,KAAK,CACN,CAA8B/E,2BAAAA,EAAAA,MAAM,CAACme,iBAAD,CAAmB,CAAA,EAAA,CADjD,CAEP,CAAA,wCAAA,EAA2CpZ,KAAK,CAC/C,IAD+C,EAE/C,SAF+C,CAGzC,CAAAA,IAAAA,EAAAA,KAAK,CAAC,QAAD,EAAW,SAAX,CAA0B,CAAA,EAAA,EAAAA,KAAK,CAAC,KAAD,EAAQ,SAAR,CAAuB,CAAAA,EAAAA,EAAAA,KAAK,CACtE,OADsE,EAEtE,SAFsE,CAGlE,CAAA,EAAA,EAAAA,KAAK,CAAC,QAAD,EAAW,SAAX,EAA0BA,EAAAA,EAAAA,KAAK,CACxC,cADwC,EAExC,SAFwC,CAGzC,CAAA,EAAA,EAAKA,KAAK,CAAC,cAAD,EAAiB,SAAjB,CAA2B,CAd1C,oBAAA,CAAA,CAAA,CAAA;AAgBD;;ACpDD,SAASqZ,OAAT,CAAiB/f,KAAjB,EAA+B;AAC7B,EAAA,OACEA,KAAK,KAAK3B,SAAV,IACA2B,KAAK,KAAK,IADV,IAEC,OAAOA,KAAP,KAAiB,QAAjB,IAA6BwH,MAAM,CAACoS,IAAP,CAAY5Z,KAAZ,CAAA,CAAmBkI,MAAnB,KAA8B,CAF5D,IAGC,OAAOlI,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACiB,IAAN,EAAaiH,CAAAA,MAAb,KAAwB,CAJxD,CAAA;AAMD;;ACED,SAAS8X,mBAAT,CAA6B;EAC3BC,UAD2B;AAE3BlG,EAAAA,KAAAA;AAF2B,CAA7B,EAG8B;EAC5B,IAAIA,KAAK,CAACe,qBAAV,EAAiC,OAAA;AAEjC,EAAA,MAAMoF,aAAa,GAAGD,UAAU,CAACzhB,GAAjC,CAAA;AACA,EAAA,IAAIuhB,OAAO,CAACG,aAAD,CAAX,EAA4B,OAAA;AAE5BA,EAAAA,aAAa,CAAClL,OAAd,CAAsBpX,IAAI,IAAG;AAC3B;IACAA,IAAI,CAACsc,IAAL,CAAUzY,IAAV,GAAiBsY,KAAK,CAACc,aAAN,CAAoBpZ,IAArC,CAAA;GAFF,CAAA,CAAA;AAID,CAAA;;AAED,SAAS0e,YAAT,CAAsB;EACpBF,UADoB;EAEpBxH,OAFoB;EAGpBD,CAHoB;EAIpBuB,KAJoB;AAKpBC,EAAAA,WAAAA;AALoB,CAAtB,EAM8B;AAC5B,EAAA,IAAI,CAACD,KAAK,CAACqG,cAAX,EAA2B;AACzB,IAAA,MAAMC,YAAY,GAChB,CAACN,OAAO,CAACE,UAAU,CAACzhB,GAAZ,CAAR,IAA4B,CAACub,KAAK,CAACe,qBADrC,CAAA;IAEA,IAAI,CAACuF,YAAL,EAAmB,OAAA;AACpB,GAAA;;EAED,IAAItG,KAAK,CAACe,qBAAV,EAAiC,OAAA;AACjC,EAAA,IAAI,CAACd,WAAW,CAACrO,YAAZ,CAAyBnN,GAA9B,EAAmC,OAAA;AAEnC8Z,EAAAA,SAAS,CAAC;AACRC,IAAAA,KAAK,EAAEC,CADC;IAERC,OAFQ;AAGRhX,IAAAA,IAAI,EAAEuY,WAAW,CAACrO,YAAZ,CAAyBnN,GAAzB,CAA6BC,MAH3B;AAIRia,IAAAA,GAAG,EAAEsB,WAAW,CAACrO,YAAZ,CAAyBnN,GAAzB,CAA6BE,IAJ1B;IAKRia,UAAU,EAAEoB,KAAK,CAACc,aAAAA;AALV,GAAD,CAAT,CAAA;AAOD,CAAA;;AAED,SAASvc,0BAAT,CACE+I,MADF,EAC8D;EAE5D,MAAM;IAAEzJ,IAAF;IAAQ4a,CAAR;AAAWwB,IAAAA,WAAAA;AAAX,GAAA,GAA2B3S,MAAjC,CAAA;AACA,EAAA,IAAI,CAAC2S,WAAW,CAAC7U,UAAZ,CAAuB7G,0BAA5B,EAAwD,OAAA;AAExD,EAAA,MAAMoe,OAAO,GAAG9e,IAAI,CAAC8R,GAAL,CAAS,gBAAT,CAAhB,CAAA;EAEA8O,mBAAmB,CAAC,EAClB,GAAGnX,MADe;IAElBqV,OAFkB;AAGlB+B,IAAAA,SAAS,EAAEjG,CAAC,CAACkB,gBAAF,CAAmB,EAAnB,CAAA;AAHO,GAAD,CAAnB,CAAA;AAKD;;ACzDD,SAAS4G,sBAAT,CAAgC;EAC9BL,UAD8B;AAE9BlG,EAAAA,KAAAA;AAF8B,CAAhC,EAG8B;EAC5B,IAAIA,KAAK,CAACU,wBAAV,EAAoC,OAAA;AAEpC,EAAA,MAAM8F,gBAAgB,GAAGN,UAAU,CAACzgB,MAApC,CAAA;AACA,EAAA,IAAIugB,OAAO,CAACQ,gBAAD,CAAX,EAA+B,OAAA;AAE/BA,EAAAA,gBAAgB,CAACvL,OAAjB,CAAyBpX,IAAI,IAAG;AAC9B;IACAA,IAAI,CAACsc,IAAL,CAAUzY,IAAV,GAAiBsY,KAAK,CAACS,gBAAN,CAAuB/Y,IAAxC,CAAA;GAFF,CAAA,CAAA;AAID,CAAA;;AAED,SAAS+e,eAAT,CAAyB;EACvBP,UADuB;EAEvBxH,OAFuB;EAGvBD,CAHuB;EAIvBuB,KAJuB;AAKvBC,EAAAA,WAAAA;AALuB,CAAzB,EAM8B;AAC5B,EAAA,IAAI,CAACD,KAAK,CAAC+B,iBAAX,EAA8B;AAC5B,IAAA,MAAMuE,YAAY,GAChB,CAACN,OAAO,CAACE,UAAU,CAACzgB,MAAZ,CAAR,IAA+B,CAACua,KAAK,CAACU,wBADxC,CAAA;IAEA,IAAI,CAAC4F,YAAL,EAAmB,OAAA;AACpB,GAAA;;EAED,IAAItG,KAAK,CAACU,wBAAV,EAAoC,OAAA;AAEpCnC,EAAAA,SAAS,CAAC;AACRC,IAAAA,KAAK,EAAEC,CADC;IAERC,OAFQ;AAGRhX,IAAAA,IAAI,EAAEuY,WAAW,CAACrO,YAAZ,CAAyBnM,MAAzB,CAAgCf,MAH9B;AAIRia,IAAAA,GAAG,EAAEsB,WAAW,CAACrO,YAAZ,CAAyBnM,MAAzB,CAAgCd,IAJ7B;IAKRia,UAAU,EAAEoB,KAAK,CAACS,gBAAAA;AALV,GAAD,CAAT,CAAA;AAOD,CAAA;;AAED,SAASiG,qBAAT,CAA+B;EAC7B7iB,IAD6B;AAE7B4a,EAAAA,CAAAA;AAF6B,CAA/B,EAMC;AACC,EAAA,IAAI5a,IAAI,CAACuf,MAAL,CAAYrY,IAAZ,KAAqB,kBAAzB,EAA6C,OAAA;AAE7C,EAAA,MAAM4b,oBAAoB,GAAG9iB,IAAI,CAAC2e,UAAL,CAAgB9C,CAAC,IAC5CA,CAAC,CAAC2D,gBAAF,EAD2B,CAA7B,CAAA;EAGA,IAAI,CAACsD,oBAAL,EAA2B,OAAA;AAE3B,EAAA,MAAMC,UAAU,GAAGjR,uBAAG,CAAC9R,IAAD,EAAO,+BAAP,CAAtB,CAAA;AACA,EAAA,MAAMgjB,UAAU,GAAGlR,uBAAG,CAACgR,oBAAD,EAAuB,kBAAvB,CAAtB,CAAA;AAKA,EAAA,MAAM9B,IAAI,GAAG,CAACpG,CAAC,CAACS,aAAF,CAAgB0H,UAAhB,CAAD,EAA8BC,UAA9B,CAAA,CAA0CzQ,MAA1C,CAAiD3J,OAAjD,CAAb,CAAA;EACA,MAAMwV,WAAW,GAAGxD,CAAC,CAACuD,cAAF,CACjBne,IAA+B,CAACsc,IADf,EAElB0E,IAFkB,CAApB,CAAA;AAKA/C,EAAAA,mBAAmB,CAAC6E,oBAAD,EAAuB1E,WAAvB,CAAnB,CAAA;AACD,CAAA;;AAED,SAAS6E,oBAAT,CAA8B;EAC5BZ,UAD4B;EAE5BzH,CAF4B;AAG5BwB,EAAAA,WAAAA;AAH4B,CAA9B,EAI8B;AAC5B,EAAA,IAAI,CAACA,WAAW,CAAC7U,UAAZ,CAAuB5G,gBAA5B,EAA8C,OAAA;AAC9C,EAAA,IAAIwhB,OAAO,CAACE,UAAD,CAAX,EAAyB,OAAA;AAEzB,EAAA,MAAMa,WAAW,GAAGb,UAAU,CAACc,OAAX,IAAsB,EAA1C,CAAA;AACA,EAAA,MAAMC,UAAU,GAAGf,UAAU,CAACzgB,MAAX,IAAqB,EAAxC,CAAA;AAEC,EAAA,CAAC,GAAGshB,WAAJ,EAAiB,GAAGE,UAApB,CAAA,CACE7Q,MADF,CACS3J,OADT,CAAA,CAEEwO,OAFF,CAEWpX,IAAD,IAAyB;AAChC;AACA6iB,IAAAA,qBAAqB,CAAC;MAAE7iB,IAAF;AAAQ4a,MAAAA,CAAAA;AAAR,KAAD,CAArB,CAAA;GAJH,CAAA,CAAA;AAMF;;ACjFD,SAASyI,mBAAT,CAA6B;EAC3BhB,UAD2B;EAE3BzH,CAF2B;AAG3BwB,EAAAA,WAAAA;AAH2B,CAA7B,EAI8B;AAC5B,EAAA,IAAI,CAACiG,UAAU,CAACvd,KAAhB,EAAuB,OAAA;AAEvBud,EAAAA,UAAU,CAACvd,KAAX,CAAiBsS,OAAjB,CAA0BpX,IAAD,IAAsC;AAAA,IAAA,IAAA,IAAA,EAAA,qBAAA,CAAA;;IAC7D,MAAMsjB,OAAO,GAAG5D,CAAAA,IAAAA,GAAAA,CAAAA,qBAAAA,GAAAA,sBAAsB,CAAC1f,IAAD,CAAzB,KAAA,IAAA,GAAA,qBAAA,GACXsf,gBAAgB,CAACtf,IAAD,CADL,KACe,IAAA,GAAA,IAAA,GAAA;AAAEoV,MAAAA,KAAK,EAAE,IAAT;AAAemK,MAAAA,MAAM,EAAE,IAAA;KADnD,CAAA;IAGA,MAAM;MAAEnK,KAAF;AAASmK,MAAAA,MAAAA;AAAT,KAAA,GAAoB+D,OAA1B,CAAA;AAKA,IAAA,IAAIlO,KAAK,KAAK,EAAd,EACEgH,WAAW,CAACnU,MAAZ,CACEW,OAAO,CAACwM,KAAD,CADT,EAEE,CAAC;AAAEtM,MAAAA,KAAAA;KAAH,QACKA,KAAK,CAAuC,sCAAvC,YAAmDA,KAAK,CAC9D,qBAD8D,EAE9D,SAF8D,CAG/D,OAAOA,KAAK,wBAAA,EAA0B,SAA1B,CAAoC,CANrD,CAAA,CAAA,CAAA;IASFsT,WAAW,CAACnU,MAAZ,CACEW,OAAO,CAAC2W,MAAD,CADT,EAEE,CAAC;AAAEzW,MAAAA,KAAAA;KAAH,MACKA,EAAAA,KAAK,sBACeA,KAAK,CACxBsM,KADwB,EAExB,YAFwB,CAGJ,CAJhB,mBAAA,CAAA,EAKItM,QAAAA,EAAAA,KAAK,CAAC,qBAAD,EAAwB,SAAxB,CAAyC,CAAA,IAAA,EAAAA,KAAK,CACtC,CADsC,qBAAA,CAAA,EAE7D,SAF6D,CAG9D,CAXL,CAAA,CAAA,CAAA;AAcA,IAAA,MAAMiG,UAAU,GAAGqN,WAAW,CAACtX,KAAZ,CAAkBsQ,KAAlB,CAAnB,CAAA;IAEAgH,WAAW,CAACnU,MAAZ,CAAmBW,OAAO,CAACmG,UAAD,CAA1B,EAAwC,CAAC;AAAEjG,MAAAA,KAAAA;KAAH,KACtCA,KAAK,CACE,CAAAA,EAAAA,EAAAA,KAAK,CACRsM,KADQ,EAER,YAFQ,CAGT,CAAA,4CAAA,CAJE,CADP,CAAA,CAAA;IASA,OAAO6I,mBAAmB,CAACsB,MAAD,EAASjE,MAAM,CAACvM,UAAD,EAAa6L,CAAb,CAAf,CAA1B,CAAA;GA5CF,CAAA,CAAA;AA8CD;;AC5CD,SAAS2I,oBAAT,CAA8B;EAC5BC,UAD4B;EAE5BjE,MAF4B;AAG5B3E,EAAAA,CAAAA;AAH4B,CAA9B,EAIuB;EACrB,OAAO;AACL6I,IAAAA,OAAO,EAAElE,MADJ;AAELnB,IAAAA,WAAW,EAAE9C,MAAM,CAACkI,UAAD,EAAa5I,CAAb,CAAA;GAFrB,CAAA;AAID,CAAA;;AAcD,SAAS8I,gBAAT,CAA0B;EACxBF,UADwB;EAExBjE,MAFwB;EAGxBrY,IAHwB;AAIxB0T,EAAAA,CAAAA;AAJwB,CAA1B,EAKmB;EACjB,OAAO;AACL+I,IAAAA,wBAAwB,GAAA;AAItB,MAAA,MAAMF,OAAO,GAAGlE,MAAM,CAACZ,UAAP,CAAkB9C,CAAC,IACjCA,CAAC,CAAC8D,0BAAF,EADc,CAAhB,CAAA;MAGA,MAAMiE,KAAK,GAAG,CAAC,CAAA,EAAGJ,UAAe,CAAnB,GAAA,CAAA,EAAyB,IAAzB,CAAd,CAAA;AACA,MAAA,MAAMK,MAAM,GAAG,CACbjJ,CAAC,CAACoF,eAAF,CAAkB;AAAEvC,QAAAA,GAAG,EAAEmG,KAAK,CAAC,CAAD,CAAZ;QAAiB3D,MAAM,EAAE2D,KAAK,CAAC,CAAD,CAAA;AAA9B,OAAlB,EAAuD,KAAvD,CADa,EAEbhJ,CAAC,CAACoF,eAAF,CAAkB;AAAEvC,QAAAA,GAAG,EAAEmG,KAAK,CAAC,CAAD,CAAZ;QAAiB3D,MAAM,EAAE2D,KAAK,CAAC,CAAD,CAAA;OAAhD,EAAuD,IAAvD,CAFa,CAAf,CAAA;MAIA,MAAME,WAAW,GAAG,CAACL,OAAO,CAAC3R,GAAR,CAAY,OAAZ,CAAqBwK,CAAAA,IAAtB,CAApB,CAAA;MACA,MAAM8B,WAAW,GAAGxD,CAAC,CAACwF,eAAF,CAAkByD,MAAlB,EAA0BC,WAA1B,CAApB,CAAA;MACA,OAAO;QAAEL,OAAF;AAAWrF,QAAAA,WAAAA;OAAlB,CAAA;KAfG;;AAiBL2F,IAAAA,cAAc,GAAA;AACZ,MAAA,MAAMN,OAAO,GAAGlE,MAAM,CAACZ,UAAP,CAAkB9C,CAAC,IACjCA,CAAC,CAAC2D,gBAAF,EADc,CAAhB,CAAA;MAGA,MAAMpd,KAAK,GAAGqhB,OAAO,CAAC3R,GAAR,CAAY,WAAZ,CAAA,CAAyB,CAAzB,CAAA,CAA4BwK,IAA1C,CAAA;MACA,MAAM8B,WAAW,GAAGxD,CAAC,CAACkB,gBAAF,CAAmB,CACrClB,CAAC,CAACqB,cAAF,CAAiBrB,CAAC,CAACS,aAAF,CAAgBmI,UAAhB,CAAjB,EAA8CphB,KAA9C,CADqC,CAAnB,CAApB,CAAA;MAGA,OAAO;QAAEqhB,OAAF;AAAWrF,QAAAA,WAAAA;OAAlB,CAAA;KAzBG;;AA2BL4F,IAAAA,cAAc,GAAA;AACZ;AACA;AACA;AACA;AACAzE,MAAAA,MAAM,CAACA,MAAP,CAAc0E,QAAd,GAAyB,KAAzB,CAAA;AAEA,MAAA,OAAOV,oBAAoB,CAAC;QAAEC,UAAF;QAAcjE,MAAd;AAAsB3E,QAAAA,CAAAA;AAAtB,OAAD,CAA3B,CAAA;KAlCG;;IAoCLsJ,mBAAmB,EAAE,MAAMX,oBAAoB,CAAC;MAAEC,UAAF;MAAcjE,MAAd;AAAsB3E,MAAAA,CAAAA;AAAtB,KAAD,CApC1C;IAqCLuJ,uBAAuB,EAAE,MACvBZ,oBAAoB,CAAC;MAAEC,UAAF;MAAcjE,MAAd;AAAsB3E,MAAAA,CAAAA;AAAtB,KAAD,CAtCjB;IAuCLwJ,eAAe,EAAE,MAAMb,oBAAoB,CAAC;MAAEC,UAAF;MAAcjE,MAAd;AAAsB3E,MAAAA,CAAAA;AAAtB,KAAD,CAvCtC;IAwCLyJ,gBAAgB,EAAE,MAAMd,oBAAoB,CAAC;MAAEC,UAAF;MAAcjE,MAAd;AAAsB3E,MAAAA,CAAAA;AAAtB,KAAD,CAxCvC;IAyCL0J,iBAAiB,EAAE,MAAMf,oBAAoB,CAAC;MAAEC,UAAF;MAAcjE,MAAd;AAAsB3E,MAAAA,CAAAA;AAAtB,KAAD,CAzCxC;IA0CL2J,qBAAqB,EAAE,MACrBhB,oBAAoB,CAAC;MAAEC,UAAF;MAAcjE,MAAd;AAAsB3E,MAAAA,CAAAA;AAAtB,KAAD,CA3CjB;IA4CL4J,kBAAkB,EAAE,MAAMjB,oBAAoB,CAAC;MAAEC,UAAF;MAAcjE,MAAd;AAAsB3E,MAAAA,CAAAA;AAAtB,KAAD,CA5CzC;IA6CL6J,eAAe,EAAE,MAAMlB,oBAAoB,CAAC;MAAEC,UAAF;MAAcjE,MAAd;AAAsB3E,MAAAA,CAAAA;AAAtB,KAAD,CA7CtC;IA8CL8J,cAAc,EAAE,MAAMnB,oBAAoB,CAAC;MAAEC,UAAF;MAAcjE,MAAd;AAAsB3E,MAAAA,CAAAA;KAAvB,CAAA;AA9CrC,GAAA,CA+CL1T,IA/CK,CAAP,CAAA;AAgDD,CAAA;;AAED,SAASyd,aAAT,CAAuB;EACrBvP,KADqB;EAErBwP,OAFqB;AAGrB3c,EAAAA,MAAAA;AAHqB,CAAvB,EAaC;EACC,MAAM4c,MAAM,GACV,OAAOzP,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACtG,KAAN,CAAY,GAAZ,CAAiBtM,CAAAA,GAAjB,CAAqB0B,CAAC,IAAIA,CAAC,CAACb,IAAF,EAA1B,CAA5B,GAAkE+R,KADpE,CAAA;;AAGA,EAAA,MAAM0P,QAAQ,GAAGD,MAAM,CAACriB,GAAP,CAAW0B,CAAC,IAAI0gB,OAAO,CAAC1gB,CAAD,CAAvB,CAAjB,CAAA;;AAEA2gB,EAAAA,MAAM,CAACzN,OAAP,CAAe2N,CAAC,IAAG;IACjB9c,MAAM,CACJW,OAAO,CAACgc,OAAO,CAACG,CAAD,CAAR,CADH,EAEJ,CAAC;AAAEjc,MAAAA,KAAAA;AAAF,KAAD,QACKA,KAAK,EAEJsM,EAAAA,KAAK,QACItM,KAAK,CAACic,CAAD,EAAI,YAAJ,CAAwC,CADjD,qBAAA,CAAA,GAED,kCACN,CAAA,gBAAA,CALM,CAMP,CAAA,gCAAA,EAAmCnb,MAAM,CAACC,OAAP,CAAe+a,OAAf,CAAA,CACjCpiB,GADiC,CAEhC,CAAC,CAACiK,CAAD,EAAI7I,CAAJ,CAAD,KACE,CAAGkF,EAAAA,KAAK,CAAC,GAAD,EAAM,SAAN,CAAgB,CAAA,QAAA,EAAWA,KAAK,CAClC,IAAA2D,IADkC,EAEtC,SAFsC,CAGvC,CAAA,YAAA,EAAe1I,MAAM,CAACH,CAAD,EANQ,CAAA,CAAA,CAAA,CAQjClB,IARiC,CAQ5B,IAR4B,CAQvB,EAjBX,CAAN,CAAA;GADF,CAAA,CAAA;;AAsBA,EAAA,MAAM8gB,UAAU,GAAGsB,QAAQ,CACxBtiB,GADgB,CACZwiB,MAAM,IAAG;AACZ,IAAA,IAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;MAC9B,OAAO,cAAA,GAAiBA,MAAjB,GAA0B,GAAjC,CAAA;AACD,KAAA;;AAED,IAAA,IAAI,CAACliB,KAAK,CAACC,OAAN,CAAciiB,MAAd,CAAD,IAA0B,OAAOA,MAAM,CAACvH,GAAd,KAAsB,QAApD,EAA8D;MAC5D,OAAOuH,MAAM,CAACvH,GAAd,CAAA;AACD,KAAA;;AAED,IAAA,OAAO,CAAC3a,KAAK,CAACC,OAAN,CAAciiB,MAAd,CAAwBA,GAAAA,MAAxB,GAAiC,CAACA,MAAD,CAAlC,EACJxiB,GADI,CACAyiB,KAAK,IACR,CACE,OAAOA,KAAK,CAACC,GAAb,KAAqB,QAArB,GAA+C,CAAA,YAAA,EAAAD,KAAK,CAACC,GAAG,CAAA,EAAA,CAAxD,GAA+D,IADjE,EAEE,OAAOD,KAAK,CAACE,GAAb,KAAqB,QAArB,GAA+C,CAAAF,YAAAA,EAAAA,KAAK,CAACE,GAAG,CAAxD,EAAA,CAAA,GAA+D,IAFjE,CAAA,CAIG5S,MAJH,CAIU3J,OAJV,CAAA,CAKGlG,IALH,CAKQ,OALR,CAFG,CASJA,CAAAA,IATI,CASC,IATD,CAAP,CAAA;AAUD,GApBgB,CAqBhBA,CAAAA,IArBgB,CAqBX,IArBW,CAAnB,CAAA;;AAuBA,EAAA,OAAO8gB,UAAU,GAAG,SAAYA,GAAAA,UAAf,GAA4B,EAA7C,CAAA;AACD,CAAA;;AAED,SAAS4B,oBAAT,CAA8B;EAC5B/C,UAD4B;EAE5BzH,CAF4B;AAG5BwB,EAAAA,WAAAA;AAH4B,CAA9B,EAI8B;AAC5B,EAAA,IAAI,CAACiG,UAAU,CAAC2C,MAAhB,EAAwB,OAAA;AAExB,EAAA,MAAMJ,OAAO,GAAGxI,WAAW,CAACtX,KAAZ,CAAkB,SAAlB,CAAhB,CAAA;AAEAud,EAAAA,UAAU,CAAC2C,MAAX,CAAkB5N,OAAlB,CAA0BpX,IAAI,IAAG;AAAA,IAAA,IAAA,IAAA,EAAA,KAAA,EAAA,qBAAA,CAAA;;AAC/B;IACA,MAAM;MAAEoV,KAAF;AAASmK,MAAAA,MAAAA;AAAT,KAAA,GAAA,CAAA,IAAA,GAAA,CAAA,KAAA,GAAA,CAAA,qBAAA,GAAoBG,sBAAsB,CAAC1f,IAAD,CAA1C,KAAoD,IAAA,GAAA,qBAAA;IACxDsf,gBAAgB,CAACtf,IAAD,CADZ,KACsB,IAAA,GAAA,KAAA;IAC1B4f,mBAAmB,CAAC5f,IAAD,CAFf,KAEyB,IAAA,GAAA,IAAA,GAAA;AAC3B;AACAoV,MAAAA,KAAK,EAAE,IAFoB;AAG3BmK,MAAAA,MAAM,EAAE,IAAA;KALZ,CAAA;IAQA,MAAM8F,UAAU,GAAG3B,gBAAgB,CAAC;AAClCxc,MAAAA,IAAI,EAAGqY,MAAmB,CAACA,MAApB,CAA2BrY,IADA;MAElCsc,UAAU,EAAEmB,aAAa,CAAC;AACxBvP,QAAAA,KAAK,EAAEA,KADiB;QAExBwP,OAFwB;QAGxB3c,MAAM,EAAEmU,WAAW,CAACnU,MAAAA;AAHI,OAAD,CAFS;AAOlCsX,MAAAA,MAAM,EAAEA,MAP0B;AAQlC3E,MAAAA,CAAAA;AARkC,KAAD,CAAnC,CAAA;IAWAwB,WAAW,CAACnU,MAAZ,CACEW,OAAO,CAACyc,UAAD,CADT,EAEE,CAAC;AAAEvc,MAAAA,KAAAA;AAAF,KAAD,KACK,CAAA,EAAAA,KAAK,CACN,iDADM,CAEP,CAAA,4BAAA,EAA+BA,KAAK,CACnC,CAACc,MAAM,CAACoS,IAAP,CAAY4I,OAAZ,CAAqB,CAAA,CAArB,CAAD,CAAA,CAA0BpiB,GAA1B,CAA8B8iB,CAAC,IAAI,WAAWA,CAAK,CAAA,EAAA,CAAnD,CAAqD5iB,CAAAA,IAArD,CAA0D,EAA1D,CADmC,EAEnC,SAFmC,CAGlC,CARP,CAAA,CAAA,CAAA;IAWA,MAAM;MAAE+gB,OAAF;AAAWrF,MAAAA,WAAAA;AAAX,KAAA,GAA4BiH,UAA+B,EAAjE,CAAA;AAEApH,IAAAA,mBAAmB,CAACwF,OAAD,EAAUrF,WAAV,CAAnB,CAAA;GAlCF,CAAA,CAAA;AAoCD;;ACjND;AAiBA,MAAMmH,gBAAgB,GAAG,6BAAzB,CAAA;;AASA,SAASC,qBAAT,CAA+B;EAC7B3K,OAD6B;EAE7BD,CAF6B;EAG7BG,UAH6B;AAI7BqB,EAAAA,WAAAA;AAJ6B,CAA/B,EAKwB;AACtB1B,EAAAA,SAAS,CAAC;AACRC,IAAAA,KAAK,EAAEC,CADC;IAERC,OAFQ;IAGRE,UAHQ;AAIRlX,IAAAA,IAAI,EAAEuY,WAAW,CAACrO,YAAZ,CAAyB3M,MAAzB,CAAgCP,MAJ9B;AAKRia,IAAAA,GAAG,EAAEsB,WAAW,CAACrO,YAAZ,CAAyB3M,MAAzB,CAAgCN,IAAAA;AAL7B,GAAD,CAAT,CAAA;AAOD,CAAA;;AAUD,SAAS2kB,uBAAT,CAAiC;EAC/B7K,CAD+B;EAE/B8K,SAF+B;EAG/BC,SAH+B;AAI/BtT,EAAAA,MAAAA;AAJ+B,CAAjC,EAKwB;AACtB,EAAA,OAAOuI,CAAC,CAACwG,mBAAF,CAAsB,OAAtB,EAA+B,CACpCxG,CAAC,CAACsG,kBAAF,CACEyE,SADF,EAEE7F,gCAAgC,CAAC;IAAElF,CAAF;AAAKG,IAAAA,UAAU,EAAE2K,SAAjB;AAA4BrT,IAAAA,MAAAA;GAA7B,CAFlC,CADoC,CAA/B,CAAP,CAAA;AAMD,CAAA;;AAED,SAASuT,4BAAT,CACEnc,MADF,EAC+B;EAE7B,MAAM;IAAEmR,CAAF;IAAK8K,SAAL;IAAgBC,SAAhB;IAA2BxJ,KAA3B;AAAkC9J,IAAAA,MAAAA;AAAlC,GAAA,GAA6C5I,MAAnD,CAAA;EAEA,MAAMyW,YAAY,GAAGJ,gCAAgC,CAAC;IACpDlF,CADoD;IAEpDG,UAAU,EAAEoB,KAAK,CAACc,aAFkC;AAGpD5K,IAAAA,MAAAA;AAHoD,GAAD,CAArD,CAAA;AAMA,EAAA,MAAMwT,cAAc,GAAGjL,CAAC,CAACkL,iBAAF,CACrBlL,CAAC,CAAC8G,aAAF,CAAgBgE,SAAS,CAAC7hB,IAA1B,CADqB,EAErB,CACE+W,CAAC,CAACmL,YAAF,CACEnL,CAAC,CAAC8G,aAAF,CAAgB,QAAhB,CADF,EAEE9G,CAAC,CAACoL,sBAAF,CAAyB9F,YAAzB,CAFF,CADF,CAFqB,EAQrB,IARqB,CAAvB,CAAA;AAWA,EAAA,MAAM0B,cAAc,GAAGhH,CAAC,CAACqL,iBAAF,CAAoBrL,CAAC,CAAC8G,aAAF,CAAgB,OAAhB,CAApB,CAAvB,CAAA;EAEA,MAAMwE,uBAAuB,GAAGtL,CAAC,CAACsL,uBAAF,CAC9B,EAD8B,EAE9BtL,CAAC,CAACuL,UAAF,CAAaN,cAAb,EAA6BjE,cAA7B,EAA6C,EAA7C,EAAiD,IAAjD,CAF8B,CAAhC,CAAA;AAKA,EAAA,MAAMwE,IAAI,GAAGxL,CAAC,CAACwG,mBAAF,CAAsB,OAAtB,EAA+B,CAC1CxG,CAAC,CAACsG,kBAAF,CAAqByE,SAArB,EAAgCO,uBAAhC,CAD0C,CAA/B,CAAb,CAAA;AAIA,EAAA,OAAOE,IAAP,CAAA;AACD,CAAA;;AAED,SAASC,QAAT,CAAkBljB,MAAlB,EAAgC;EAC9B,OAAOA,MAAM,CAACC,OAAP,CAAemiB,gBAAf,EAAiC,OAAjC,CAA0Ce,CAAAA,WAA1C,EAAP,CAAA;AACD,CAAA;;AAED,SAASC,OAAT,CAAiB9Z,CAAjB,EAA4B7I,CAA5B,EAA8C;AAC5C,EAAA,OAAO,OAAOA,CAAP,KAAa,QAAb,IACEyiB,EAAAA,EAAAA,QAAQ,CAAC5Z,CAAD,CAAG,CAAK7I,EAAAA,EAAAA,CAAI,CADtB,CAAA,CAAA,MAEA6I,CAAC,CAAA;EACR+Z,wBAAwB,CAAC5iB,CAAD,CAAG,CAAA;CAH3B,CAAA,CAAA;AAKD,CAAA;;AAED,SAAS4iB,wBAAT,CACEC,SADF,EACoD;AAElD,EAAA,IAAI,CAACA,SAAL,EAAgB,OAAO,EAAP,CAAA;EAChB,OAAO7c,MAAM,CAACC,OAAP,CAAe4c,SAAf,EACJjkB,GADI,CACA,CAAC,CAACiK,CAAD,EAAI7I,CAAJ,CAAD,KAAY2iB,OAAO,CAAC9Z,CAAD,EAAI7I,CAAJ,CADnB,CAEJlB,CAAAA,IAFI,CAEC,IAFD,CAAP,CAAA;AAGD,CAAA;;AAED,SAASgkB,0BAAT,CAAoCjd,MAApC,EAAuE;EACrE,MAAM;AAAE4Y,IAAAA,UAAAA;AAAF,GAAA,GAAiB5Y,MAAvB,CAAA;AACA,EAAA,IAAI4Y,UAAU,CAACsE,YAAf,EAA6BC,qBAAqB,CAACnd,MAAD,CAArB,CAAA;AAC7B,EAAA,IAAI4Y,UAAU,CAACwE,YAAf,EAA6BC,0BAA0B,CAACrd,MAAD,CAA1B,CAAA;AAC9B,CAAA;;AAED,SAASqd,0BAAT,CAAoCrd,MAApC,EAAuE;EACrE,MAAM;AAAE4Y,IAAAA,UAAAA;AAAF,GAAA,GAAiB5Y,MAAvB,CAAA;AACA,EAAA,IAAI4Y,UAAU,CAACwE,YAAX,CAAwBvc,MAAxB,KAAmC,CAAvC,EAA0C,OAAA;AAE1C,EAAA,MAAM+H,MAAM,GAAGS,eAAe,CAACrJ,MAAM,CAAC2S,WAAR,CAA9B,CAAA;AAEAiG,EAAAA,UAAU,CAACwE,YAAX,CAAwBzP,OAAxB,CAAgCpX,IAAI,IAAG;IACrC,MAAM+mB,cAAc,GAAO,CAAA,CAAA,EAAApf,IAAI,CAACC,SAAL,CAAeyK,MAAf,CAAsB,CAAjD,CAAA,CAAA,CADqC;;AAErC,IAAA,MAAM2U,eAAe,GAAG3Q,4BAAQ,CAAC0Q,cAAD,EAAiB;AAC/CE,MAAAA,kBAAkB,EAAE,KAAA;AAD2B,KAAjB,CAAR,EAAxB,CAAA;IAIAjnB,IAAI,CAACse,WAAL,CAAiB0I,eAAjB,CAAA,CAAA;GANF,CAAA,CAAA;AAQD,CAAA;;AAED,SAASJ,qBAAT,CAA+Bnd,MAA/B,EAAkE;EAChE,MAAM;IAAE4Y,UAAF;IAAcxH,OAAd;IAAuBD,CAAvB;IAA0BuB,KAA1B;AAAiCC,IAAAA,WAAAA;AAAjC,GAAA,GAAiD3S,MAAvD,CAAA;AACA,EAAA,IAAI4Y,UAAU,CAACsE,YAAX,CAAwBrc,MAAxB,KAAmC,CAAvC,EAA0C,OAAA;EAE1C8R,WAAW,CAACnU,MAAZ,CACEoa,UAAU,CAACsE,YAAX,CAAwBrc,MAAxB,GAAiC,CADnC,EAEE,CAAC;AAAExB,IAAAA,KAAAA;AAAF,GAAD,KACE,CAAGA,EAAAA,KAAK,CAC6C,CAAA,iDAAA,CAD7C,CAE2F,CALvG,gGAAA,CAAA,CAAA,CAAA;AAQA,EAAA,MAAM9I,IAAI,GAAGqiB,UAAU,CAACsE,YAAX,CAAwB,CAAxB,CAAb,CAAA;AACA,EAAA,MAAMrF,UAAU,GAAGthB,IAAI,CAAC2e,UAAL,CAAgB9C,CAAC,IAAIA,CAAC,CAACqL,YAAF,EAArB,CAAnB,CAAA;EAEA9K,WAAW,CAACnU,MAAZ,CACEW,OAAO,CAAC0Y,UAAD,CADT,EAEE,CAAC;AAAExY,IAAAA,KAAAA;AAAF,GAAD,KACK,CAAAA,EAAAA,KAAK,CACwD,CAAA,4DAAA,CADxD,CAEqH,CALjI,0HAAA,CAAA,CAAA,CAAA;AAQA,EAAA,MAAM+d,YAAY,GAAG/T,eAAe,CAACrJ,MAAM,CAAC2S,WAAR,CAApC,CAAA;AAEA,EAAA,MAAM/J,MAAM,GAAGmU,wBAAwB,CAACK,YAAD,CAAvC,CAAA;AAEA,EAAA,MAAMlB,SAAS,GAAGpH,WAAW,CAAC,cAAD,EAAiB1D,OAAjB,CAA7B,CAAA;AACA,EAAA,MAAM6K,SAAS,GAAGnH,WAAW,CAAC,cAAD,EAAiB1D,OAAjB,CAA7B,CAAA;AACA,EAAA,MAAMsM,eAAe,GAAG;IAAEvM,CAAF;IAAK+K,SAAL;IAAgBD,SAAhB;IAA2BrT,MAA3B;AAAmC8J,IAAAA,KAAAA;GAA3D,CAAA;;AAEA,EAAA,IAAIC,WAAW,CAACtO,WAAZ,CAAwBR,kBAA5B,EAAgD;AAC9C,IAAA,MAAM8Z,WAAW,GAAG3B,uBAAuB,CAAC0B,eAAD,CAA3C,CAAA;AACAtM,IAAAA,OAAO,CAACM,gBAAR,CAAyB,MAAzB,EAAiCiM,WAAjC,CAAA,CAAA;IACApnB,IAAI,CAACse,WAAL,CAAiB1D,CAAC,CAACyM,aAAF,CAAgB1B,SAAS,CAAC9hB,IAA1B,CAAjB,CAAA,CAAA;AACD,GAAA;;AAED,EAAA,IAAIuY,WAAW,CAACtO,WAAZ,CAAwBT,SAA5B,EAAuC;AACrC,IAAA,MAAM+Z,WAAW,GAAGxB,4BAA4B,CAACuB,eAAD,CAAhD,CAAA;AACAtM,IAAAA,OAAO,CAACM,gBAAR,CAAyB,MAAzB,EAAiCiM,WAAjC,CAAA,CAAA;AACApnB,IAAAA,IAAI,CAACse,WAAL,CAAiB1D,CAAC,CAACyM,aAAF,CAAgB1B,SAAS,CAAC9hB,IAA1B,CAAjB,CAAA,CAHqC;AAKrC;;AACAsY,IAAAA,KAAK,CAACqG,cAAN,GAAuB,CAACrG,KAAK,CAACe,qBAA9B,CAAA;AACD,GAAA;;AAED,EAAA,IAAId,WAAW,CAACtO,WAAZ,CAAwB9L,QAA5B,EAAsC;AACpC,IAAA,MAAMolB,WAAW,GAAG3B,uBAAuB,CAAC0B,eAAD,CAA3C,CAAA;AACAtM,IAAAA,OAAO,CAACM,gBAAR,CAAyB,MAAzB,EAAiCiM,WAAjC,CAAA,CAAA;IACApnB,IAAI,CAACse,WAAL,CAAiB1D,CAAC,CAACyM,aAAF,CAAgB1B,SAAS,CAAC9hB,IAA1B,CAAjB,CAAA,CAAA;AACD,GAAA;;AAEDuY,EAAAA,WAAW,CAACnU,MAAZ,CACEW,OAAO,CAAC,CAACwT,WAAW,CAACtO,WAAZ,CAAwB7L,UAA1B,CADT,EAEE,CAAC;AAAE6G,IAAAA,KAAAA;GAAH,KACK,GAAAA,KAAK,CACG,SAAAA,KAAK,CACZ,cADY,EAEZ,YAFY,CAGb,CAJK,mCAAA,CAAA,CAKQ,eAAAA,KAAK,CAAe,cAAf,EAAiB,SAAjB,CAA2B,CARpD,eAAA,CAAA,CAAA,CAAA;AAWA0c,EAAAA,qBAAqB,CAAC;AACpBzK,IAAAA,UAAU,EAAE2K,SADQ;IAEpB9K,CAFoB;IAGpBC,OAHoB;AAIpBuB,IAAAA,WAAAA;AAJoB,GAAD,CAArB,CAAA;AAMD;;ACnND,IAAA,GAAc,GAAG;AACjB,CAAC,iBAAiB,CAAC,iBAAiB;AACpC,CAAC,aAAa,CAAC,aAAa;AAC5B,CAAC,CAAC;AACF;AACA,SAAS,iBAAiB,CAAC,KAAK,EAAE,MAAM,EAAE;AAC1C,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,EAAC;AAClC,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,EAAC;AACpC;AACA,CAAC,IAAI,KAAK,KAAK,MAAM,EAAE,OAAO,CAAC,CAAC;AAChC,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;AACrD;AACA,CAAC,IAAI,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;AAC9B,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC5C,EAAE,MAAM,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3C,EAAE,MAAM,KAAK,GAAG,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC;AACxC,KAAK,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;AACjC,KAAK,CAAC,CAAC;AACP;AACA,EAAE,YAAY,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAClC,EACA;AACA,CAAC,IAAI,gBAAgB,GAAG,CAAC,CAAC;AAC1B,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC7C,EAAE,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5C,EAAE,MAAM,KAAK,GAAG,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC;AACxC,KAAK,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC;AAC7B,KAAK,CAAC,CAAC;AACP;AACA,EAAE,IAAI,KAAK,GAAG,CAAC,EAAE;AACjB,GAAG,YAAY,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;AACvC,GAAG,gBAAgB,EAAE,CAAC;AACtB,GAAG;AACH,EAAE;AACF;AACA,CAAC,OAAO,CAAC,GAAG,GAAG,gBAAgB,KAAK,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACtE,CAAC;AACD;AACA,SAAS,aAAa,CAAC,UAAU,EAAE,aAAa,EAAE;AAClD,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,aAAa,CAAC,EAAE,MAAM,IAAI,KAAK,CAAC,wFAAwF,CAAC,CAAC;AACzJ;AACA,CAAC,MAAM,OAAO,GAAG,EAAE,CAAC;AACpB,CAAC,IAAI,cAAc,GAAG,CAAC,CAAC;AACxB;AACA,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChD,EAAE,MAAM,mBAAmB,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;AAC/C,EAAE,MAAM,aAAa,GAAG,iBAAiB,CAAC,UAAU,EAAE,mBAAmB,EAAC;AAC1E,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,mBAAmB,EAAE,MAAM,EAAE,aAAa,CAAC,EAAC;AACpE,EAAE,IAAI,aAAa,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,MAAM,EAAE;AACtD,GAAG,cAAc,GAAG,EAAC;AACrB,GAAG;AACH,EAAE;AACF;AACA;AACA,CAAC,MAAM,SAAS,GAAG,OAAO,CAAC,cAAc,EAAC;AAC1C;AACA,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,cAAc,EAAE,cAAc,EAAE,CAAC;AACnF,CAAC;AACD;AACA,SAAS,YAAY,CAAC,UAAU,EAAE,aAAa,EAAE;AACjD,CAAC,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE,OAAO,KAAK,CAAC;AAClD,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,OAAO,KAAK,CAAC;AACjD,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,OAAO,KAAK,CAAC;AACzC,CAAC,IAAI,aAAa,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,EAAE,OAAO,KAAK,CAAC;AACrF,CAAC,OAAO,IAAI,CAAC;AACb;;AC9DgB,SAAAkL,gBAAA,CACdC,YADc,EAEdxT,OAFc,EAEY;EAE1B,IAAI,CAACwT,YAAL,EAAmB,OAAA;AACnB,EAAA,IAAIA,YAAY,CAACpV,UAAb,CAAwB,GAAxB,CAAJ,EAAkC,OAAA;EAElC,MAAMqV,iBAAiB,GAAG,CAAC,GAAGzT,OAAO,CAAC1P,QAAZ,CAA1B,CAL0B;;AAQ1B,EAAA,IAAImjB,iBAAiB,CAACjlB,QAAlB,CAA2BglB,YAA3B,CAAJ,EAA8C,OAAA;AAE9C,EAAA,MAAMhN,OAAO,GAAGiN,iBAAiB,CAC9BhlB,GADa,CACRwB,OAAD,IAAkD;AACrD,IAAA,MAAMyjB,MAAM,GAAGF,YAAY,GACvBvO,MAAM,CAAC0O,GAAgB,CAACC,iBAAjB,CAAmC3jB,OAAnC,EAA4CujB,YAA5C,CAAD,CADiB,GAEvB,CAFJ,CAAA;IAGA,IAAIE,MAAM,GAAG,GAAb,EAAkB,OAAA;AAElB,IAAA,OAAO,CAACzjB,OAAD,EAAUyjB,MAAV,CAAP,CAAA;AACD,GARa,CASblV,CAAAA,MATa,CASN3J,OATM,CAAhB,CAAA;EAWA,MAAMgf,SAAS,GAAM,CAAA7T,EAAAA,OAAO,CAACjL,KAAR,CACN,CAAAiL,UAAAA,EAAAA,OAAO,CAACjL,KAAR,CAAiB,CAAAye,EAAAA,YAAc,EAA/B,EAAiC,YAAjC,EADM,cAAA,CAAA,EAEnB,OAFmB,CAGpB,CAHD,CAAA,CAAA;AAKA,EAAA,IAAIhN,OAAO,CAACjQ,MAAR,KAAmB,CAAvB,EAA0B,OAAOsd,SAAP,CAAA;AAE1B,EAAA,MAAMC,WAAW,GAAGtN,OAAO,CACxBX,IADiB,CACZ,CAAC,GAAGC,CAAH,CAAD,EAA0B,GAAGiO,CAAH,CAA1B,KAAsDA,CAAC,GAAGjO,CAD9C,CAAA,CAEjBhH,KAFiB,CAEX,CAFW,EAER,CAFQ,CAAA,CAGjBrQ,GAHiB,CAIhB,CAAC,CAACuiB,CAAD,CAAD,KAAA;AAAA,IAAA,IAAA,qBAAA,CAAA;;IAAA,OACK,CAAA,EAAAA,IAAH,CAAOhR,qBAAAA,GAAAA,OAAO,CAAC9K,cAAR,CAAuBgL,SAA9B,KAA2C,IAAA,GAAA,qBAAA,GAAA,GAAG,CADhD,CAAA,CAAA;AAAA,GAJgB,CAApB,CAAA;EAQA,MAAM8T,QAAQ,GAAGxN,OAAO,CAACjQ,MAAR,GAAiB,CAAjB,IAAsBiQ,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CAAgBA,GAAAA,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CAAhB,GAAgC,GAAvE,CAAA;AAEA,EAAA,MAAMyN,cAAc,GAClBH,WAAW,CAACvd,MAAZ,GAAqB,CAArB,GACI,CACkB,gBAAAyJ,OAAO,CAACjL,KAAR,CACd+e,WAAW,CAAChV,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,CAAwBnQ,CAAAA,IAAxB,CAA6B,EAA7B,CADc,EAEd,SAFc,CAGX,CAJP,EAAA,CAAA,EAKEqlB,QAAQ,IACN,kBAAkBF,WAAW,CAC1BhV,KADe,CACT,CADS,CAAA,CAEfrQ,GAFe,CAEXoB,CAAC,OAAOmQ,OAAO,CAACjL,KAAR,CAAc,GAAd,EAAmB,SAAnB,CAAiC,CAAAlF,CAAAA,EAAAA,EAF9B,CAAA,CAAA,CAGflB,IAHe,CAGV,IAHU,CAGH,EATnB,CAWG6P,CAAAA,MAXH,CAWU3J,OAXV,EAYGlG,IAZH,CAYQ,MAZR,CADJ,GAcI,EAfN,CAAA;EAiBA,OAAO,CAACklB,SAAD,EAAYI,cAAZ,EAA4BtlB,IAA5B,CAAiC,MAAjC,CAAP,CAAA;AACD;;AC1DD,MAAMulB,UAAU,GAAG;AAEjB,CAACjU,MAAD,EAAmBD,OAAnB,KAAqE;AACnE,EAAA,MAAMtP,SAAS,GAAGuP,MAAM,CAACnB,KAAP,CAAa,CAAC,CAAd,CAAiBnQ,CAAAA,IAAjB,CAAsB,EAAtB,CAAlB,CAAA;;AAEA,EAAA,IAAI,cAAeiN,CAAAA,IAAf,CAAoBlL,SAApB,CAAJ,EAAoC;AAAA,IAAA,IAAA,KAAA,CAAA;;AAClC,IAAA,OAAO,GAAGsP,OAAO,CAACjL,KAAR,CACH,CAAA,EAAA,EAAAiL,OAAO,CAACjL,KAAR,CACHrE,SADG,EAEH,YAFG,CAG4B,CAAA,8BAAA,CAJzB,EAKR,OALQ,CAMT,YAAYsP,OAAO,CAACjL,KAAR,CACG,cAAArE,YADH,EAEX,SAFW,CAGgB,4BAAAV,MAAM,CAAA,CAAA,KAAA,GACjC,WAAW0K,IAAX,CAAgBhK,SAAhB,CADiC,KAAA,IAAA,GAAA,KAAA,CAAA,GACjC,MAA6B,CAA7B,CADiC,EATnC,qBAAA,CAAA,CAAA;AAYD,GAAA;;AAED,EAAA,IAAI,CAACuP,MAAM,CAACzR,QAAP,CAAgB,OAAhB,CAAL,EAA+B,OAAA;EAC/B,OAAU,CAAA,EAAAwR,OAAO,CAACjL,KAAR,CACR,CAAKiL,EAAAA,EAAAA,OAAO,CAACjL,KAAR,CAAc,OAAd,EAAuB,YAAvB,CAAoE,CAAA,8BAAA,CADjE,EAER,OAFQ,CAGG,CAAA,SAAA,EAAAiL,OAAO,CAACjL,KAAR,CACX,mBADW,EAEX,SAFW,CAGZ,CAND,kGAAA,CAAA,CAAA;AAOD,CA5BgB;AA8BjB,CAACkL,MAAD,EAAmBD,OAAnB,KAAqE;AACnE,EAAA,MAAMtP,SAAS,GAAGuP,MAAM,CAACnB,KAAP,CAAa,CAAC,CAAd,CAAiBnQ,CAAAA,IAAjB,CAAsB,EAAtB,CAAlB,CAAA;;AAEA,EAAA,IAAI,aAAciN,CAAAA,IAAd,CAAmBlL,SAAnB,CAAJ,EAAmC;AAAA,IAAA,IAAA,MAAA,CAAA;;AACjC,IAAA,OAAO,GAAGsP,OAAO,CAACjL,KAAR,CACH,CAAA,EAAA,EAAAiL,OAAO,CAACjL,KAAR,CACHrE,SADG,EAEH,YAFG,CAG4B,CAAA,8BAAA,CAJzB,EAKR,OALQ,CAMT,YAAYsP,OAAO,CAACjL,KAAR,CACG,cAAArE,YADH,EAEX,SAFW,CAGe,2BAAAV,MAAM,CAAA,CAAA,MAAA,GAChC,WAAW0K,IAAX,CAAgBhK,SAAhB,CADgC,KAAA,IAAA,GAAA,KAAA,CAAA,GAChC,OAA6B,CAA7B,CADgC,EATlC,qBAAA,CAAA,CAAA;AAYD,GAAA;;AAED,EAAA,IAAI,CAACuP,MAAM,CAACzR,QAAP,CAAgB,MAAhB,CAAL,EAA8B,OAAA;EAC9B,OAAU,CAAA,EAAAwR,OAAO,CAACjL,KAAR,CACR,CAAKiL,EAAAA,EAAAA,OAAO,CAACjL,KAAR,CAAc,MAAd,EAAsB,YAAtB,CAAmE,CAAA,8BAAA,CADhE,EAER,OAFQ,CAGG,CAAA,SAAA,EAAAiL,OAAO,CAACjL,KAAR,CACX,kBADW,EAEX,SAFW,CAGZ,CAND,uFAAA,CAAA,CAAA;AAOD,CAxDgB;AA0DjB,CAACkL,MAAD,EAAmBD,OAAnB,KAAqE;AAAA,EAAA,IAAA,qBAAA,EAAA,sBAAA,CAAA;;AACnE,EAAA,MAAMtP,SAAS,GAAGuP,MAAM,CAACnB,KAAP,CAAa,CAAC,CAAd,CAAiBnQ,CAAAA,IAAjB,CAAsB,EAAtB,CAAlB,CAAA;AACA,EAAA,MAAMwlB,YAAY,GAAG,UAAA,CAAWzZ,IAAX,CAAgBhK,SAAhB,CAArB,CAAA;EACA,IAAI,CAACyjB,YAAL,EAAmB,OAAA;EAEnB,MAAMC,aAAa,GAAGpU,CAAAA,qBAAAA,GAAAA,CAAAA,sBAAAA,GAAAA,OAAO,CAAC9K,cAAR,CAAuBnE,KAA1B,KAAG,IAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAA8BsjB,OAAjC,KAAA,IAAA,GAAA,qBAAA,GAA4C,EAA/D,CAAA;AACA,EAAA,IAAID,aAAa,CAACD,YAAY,CAAC,CAAD,CAAb,CAAjB,EAAkE,OAAA;EAElE,MAAMG,OAAO,GAAGze,MAAM,CAACC,OAAP,CAAese,aAAf,CACb3lB,CAAAA,GADa,CAEZ,CAAC,CAACiK,CAAD,EAAI7I,CAAJ,CAAD,KACE,CAAA,EAAGmQ,OAAO,CAACjL,KAAR,CAAc,GAAd,EAAmB,SAAnB,CAA6B,CAAIiL,CAAAA,EAAAA,OAAO,CAACjL,KAAR,CAClC2D,CADkC,EAElC,SAFkC,EAG/BsH,CAAAA,EAAAA,OAAO,CAACjL,KAAR,CAAc,GAAd,EAAmB,SAAnB,CAAiC,CAAAlF,CAAAA,EAAAA,GAN5B,CAQblB,CAAAA,IARa,CAQR,IARQ,CAAhB,CAAA;EASA,OAAO,CAAA,EAAGqR,OAAO,CAACjL,KAAR,CACH,CAAAiL,EAAAA,EAAAA,OAAO,CAACjL,KAAR,CACHrE,SADG,EAEH,YAFG,CAGuC,CAJpC,yCAAA,CAAA,EAKR,OALQ,CAMT,CAAA,wCAAA,EAA2C4jB,OAAO,CANnD,CAAA,CAAA;AAOD,CAlFgB;AAoFjB,CAACrU,MAAD,EAAmBD,OAAnB,KAAqE;AACnE,EAAA,IAAI,CAACC,MAAM,CAACzR,QAAP,CAAgB,MAAhB,CAAL,EAA8B,OAAA;EAC9B,OAAU,CAAA,EAAAwR,OAAO,CAACjL,KAAR,CACR,CAAKiL,EAAAA,EAAAA,OAAO,CAACjL,KAAR,CAAc,MAAd,EAAsB,YAAtB,CAAmE,CAAA,8BAAA,CADhE,EAER,OAFQ,CAGG,CAAA,SAAA,EAAAiL,OAAO,CAACjL,KAAR,CAAc,kBAAd,EAAkC,SAAlC,CAA4C,CAHzD,UAAA,CAAA,CAAA;AAID,CA1FgB;AA4FjB,CAACkL,MAAD,EAAmBD,OAAnB,KAAqE;AACnE,EAAA,IAAI,CAACC,MAAM,CAACzR,QAAP,CAAgB,WAAhB,CAAL,EAAmC,OAAA;EACnC,OAAU,CAAA,EAAAwR,OAAO,CAACjL,KAAR,CACR,CAAKiL,EAAAA,EAAAA,OAAO,CAACjL,KAAR,CACH,WADG,EAEH,YAFG,CAG4B,CAAA,8BAAA,CAJzB,EAKR,OALQ,CAMsB,CAAA,4BAAA,EAAAiL,OAAO,CAACjL,KAAR,CAC9B,uBAD8B,EAE9B,SAF8B,CAG/B,CATD,kBAAA,CAAA,CAAA;AAUD,CAxGgB;AA0GjB,CAACkL,MAAD,EAAmBD,OAAnB,KAAqE;AACnE,EAAA,MAAMtP,SAAS,GAAGuP,MAAM,CAACnB,KAAP,CAAa,CAAC,CAAd,CAAiBnQ,CAAAA,IAAjB,CAAsB,EAAtB,CAAlB,CAAA;EACA,IAAI+B,SAAS,KAAK,MAAlB,EAA0B,OAAA;EAC1B,OAAO,CAAA,EAAGsP,OAAO,CAACjL,KAAR,MACHiL,OAAO,CAACjL,KAAR,CAAc,MAAd,EAAsB,YAAtB,CAAmC,CAAA,8BAAA,CADhC,EAER,OAFQ,CAGT,CAAA,kBAAA,EAAqBiL,OAAO,CAACjL,KAAR,CACpB,WADoB,EAEpB,SAFoB,aAGTiL,OAAO,CAACjL,KAAR,CACX,kBADW,EAEX,SAFW,CAGc,CAAA,uBAAA,EAAAiL,OAAO,CAACjL,KAAR,CACzB,SADyB,EAEzB,SAFyB,CAGX,CAAA,YAAA,EAAAiL,OAAO,CAACjL,KAAR,CACd,MADc,EAEd,SAFc,CAGf,CAfD,uFAAA,CAAA,CAAA;AAgBD,CA7HgB;AA+HjB,CAACkL,MAAD,EAAmBD,OAAnB,KAAqE;AACnE,EAAA,MAAMtP,SAAS,GAAGuP,MAAM,CAACnB,KAAP,CAAa,CAAC,CAAd,CAAiBnQ,CAAAA,IAAjB,CAAsB,EAAtB,CAAlB,CAAA;EACA,IAAI+B,SAAS,KAAK,OAAlB,EAA2B,OAAA;EAC3B,OAAO,CAAA,EAAGsP,OAAO,CAACjL,KAAR,MACHiL,OAAO,CAACjL,KAAR,CAAc,OAAd,EAAuB,YAAvB,CAAoC,CAAA,8BAAA,CADjC,EAER,OAFQ,CAGT,CAAA,mBAAA,EAAsBiL,OAAO,CAACjL,KAAR,CACrB,WADqB,EAErB,SAFqB,aAGViL,OAAO,CAACjL,KAAR,CACX,mBADW,EAEX,SAFW,CAGc,CAAA,uBAAA,EAAAiL,OAAO,CAACjL,KAAR,CACzB,SADyB,EAEzB,SAFyB,CAGX,CAAA,YAAA,EAAAiL,OAAO,CAACjL,KAAR,CACd,OADc,EAEd,SAFc,CAGf,CAfD,uFAAA,CAAA,CAAA;AAgBD,CAlJgB;AAoJjB,CAACkL,MAAD,EAAmBD,OAAnB,KAAqE;EACnE,MAAM1P,QAAQ,GAAG2P,MAAM,CAACnB,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAjB,CAAA;AACA,EAAA,MAAMyV,YAAY,GAAGjkB,QAAQ,CAC1B7B,GADkB,CACdwB,OAAO,IAAIsjB,gBAAgB,CAACtjB,OAAD,EAAU+P,OAAV,CADb,EAElBxB,MAFkB,CAEX3J,OAFW,CAArB,CAAA;AAGA,EAAA,IAAI0f,YAAY,CAAChe,MAAb,KAAwB,CAA5B,EAA+B,OAAA;EAC/B,OAAOge,YAAY,CAAC,CAAD,CAAnB,CAAA;AACD,CA3JgB;AA6JjB,CAACtU,MAAD,EAAmBD,OAAnB,KAAqE;EACnE,MAAM;AAAEwU,IAAAA,MAAAA;GAAWxU,GAAAA,OAAO,CAAC9K,cAA3B,CAAA;AACA,EAAA,MAAMxE,SAAS,GAAGuP,MAAM,CAACnB,KAAP,CAAa,CAAC,CAAd,CAAiBnQ,CAAAA,IAAjB,CAAsB,EAAtB,CAAlB,CAAA;AACA,EAAA,IAAI6lB,MAAM,IAAI,CAAC9jB,SAAS,CAAC0N,UAAV,CAAqBoW,MAArB,CAAf,EACE,OAAU,CAAAxU,EAAAA,OAAO,CAACjL,KAAR,CACR,KAAKiL,OAAO,CAACjL,KAAR,CACHrE,SADG,EAEH,YAFG,CAG4B,CAAA,8BAAA,CAJzB,EAKR,OALQ,CAMM,CAAAsP,YAAAA,EAAAA,OAAO,CAACjL,KAAR,CAAcyf,MAAd,EAAsB,SAAtB,CAAgC,CANhD,oBAAA,CAAA,CAAA;AAOH,CAxKgB,CAAnB;;ACAA,MAAMC,cAAc,GAAG,GAAvB,CAAA;;AAIA,SAASC,aAAT,CACEC,SADF,EAEEjkB,SAFF,EAGEkkB,OAHF,EAGiB;AAAA,EAAA,IAAA,IAAA,EAAA,KAAA,CAAA;;AAEf,EAAA,MAAM,CAACC,QAAD,EAAWxmB,KAAX,IAAoBsmB,SAA1B,CAAA;EAEA,MAAMxV,SAAS,GAAG,CAAG,EAAA,CAACzO,SAAD,EAAYmkB,QAAQ,KAAK,SAAb,GAAyB,EAAzB,GAA8BA,QAA1C,CAAA,CAClBrW,MADkB,CACX3J,OADW,EAElBlG,IAFkB,CAEb,GAFa,CAET,CAFZ,CAAA,CAAA;AAIA,EAAA,MAAM+kB,MAAM,GAAGzO,MAAM,CAAC0O,GAAgB,CAACC,iBAAjB,CAAmCgB,OAAnC,EAA4CzV,SAA5C,CAAD,CAArB,CAAA;EACA,IAAIuU,MAAM,GAAGe,cAAb,EAA6B,OAAA;EAE7B,MAAMK,UAAU,GAAG,CAAG9kB,EAAAA,MAAM,kBACzB,OAAO3B,KAAP,KAAiB,QAAjB,KAA8BA,KAAK,CAACkI,MAAN,KAAiB,CAAjB,GAAyB,IAAzB,GAA4BlI,KAA1D,CADyB,KAEvBU,IAAAA,GAAAA,KAAAA,GAAAA,KAAK,CAACC,OAAN,CAAcX,KAAd,CAAwBA,IAAAA,KAAK,CAACM,IAAN,CAAW,IAAX,CAFD,KAAA,IAAA,GAAA,IAAA,GAGxBN,KAHwB,CAI3B,CAAA,EAAGwmB,QAAQ,KAAK,SAAb,GAAyB,YAAzB,GAAwC,GAJ5C,CAAA,CAAA;AAMA,EAAA,OAAO,CAACnB,MAAD,EAASvU,SAAT,EAAoB2V,UAApB,CAAP,CAAA;AACD,CAAA;;AAED,SAASC,iBAAT,CACE/V,UADF,EAEE4V,OAFF,EAEiB;EAEf,MAAMpO,OAAO,GAAG,EAAhB,CAAA;;EAEA,KAAK,MAAM,CAAC9V,SAAD,EAAYskB,cAAZ,CAAX,IAA0ChW,UAA1C,EAAsD;AACpD,IAAA,KAAK,MAAMiW,WAAX,IAA0BD,cAA1B,EAA0C;MACxC,MAAM;AAAEhd,QAAAA,OAAAA;OAAYid,GAAAA,WAAW,CAAC,CAAD,CAA/B,CAAA;;AACA,MAAA,IAAIjd,OAAJ,IAAA,IAAA,IAAIA,OAAO,CAAEQ,MAAb,EAAqB;AACnB;AACA,QAAA,KAAK,MAAMnK,KAAX,IAAoBwH,MAAM,CAACC,OAAP,CAAekC,OAAf,IAAeA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAEQ,MAAxB,CAApB,EAAqD;UACnD,MAAM0c,KAAK,GAAGR,aAAa,CAACrmB,KAAD,EAAQqC,SAAR,EAAmBkkB,OAAnB,CAA3B,CADmD;;AAGnD,UAAA,IAAIM,KAAJ,EAAW1O,OAAO,CAAClD,IAAR,CAAa4R,KAAb,CAAA,CAAA;AACZ,SAAA;AACF,OAPD,MAOO;AACL;AACA,QAAA,MAAMA,KAAK,GAAGR,aAAa,CAAC,CAAC,EAAD,EAAKhkB,SAAL,CAAD,EAAkBA,SAAlB,EAA6BkkB,OAA7B,CAA3B,CAAA;AACA,QAAA,IAAIM,KAAJ,EAAW1O,OAAO,CAAClD,IAAR,CAAa4R,KAAb,CAAA,CAAA;AACZ,OAAA;AACF,KAAA;AACF,GAAA;;AAED,EAAA,OAAO1O,OAAP,CAAA;AACD,CAAA;;AAEe,SAAA2O,mBAAA,CACdP,OADc,EAEd5U,OAFc,EAEY;AAAA,EAAA,IAAA,KAAA,CAAA;;EAE1B,MAAM;AAAEjL,IAAAA,KAAAA;AAAF,GAAA,GAAYiL,OAAlB,CAAA;EAEA,MAAMhB,UAAU,GAAG+V,iBAAiB,CAAC/U,OAAO,CAAChB,UAAT,EAAqB4V,OAArB,CAApC,CAAA;EAEA,MAAMf,SAAS,GAAM,CAAA7T,EAAAA,OAAO,CAACjL,KAAR,MACdiL,OAAO,CAACjL,KAAR,CAAc6f,OAAd,EAAuB,YAAvB,iBADc,EAEnB,OAFmB,CAGpB,CAHD,CAAA,CAAA;AAKA,EAAA,IAAI5V,UAAU,CAACzI,MAAX,KAAsB,CAA1B,EAA6B,OAAOsd,SAAP,CAAA;AAE7B7U,EAAAA,UAAU,CAAC6G,IAAX,CACE,CAAC,CAACC,CAAD,CAAD,EAAgC,CAACiO,CAAD,CAAhC,KAAkEA,CAAC,GAAGjO,CADxE,CAAA,CAAA;AAIA,EAAA,MAAM,CAACsP,eAAD,EAAkBC,gBAAgB,GAAG,EAArC,IAA2CrW,UAAjD,CAAA;AACA,EAAA,MAAM,CAACsW,WAAD,EAAcC,cAAd,EAA8BC,eAA9B,IAAiDJ,eAAvD,CAAA;EACA,MAAM,CAACK,YAAD,CAAA,GAAiBJ,gBAAvB,CAAA;AAEA,EAAA,MAAMK,oBAAoB,GAAA,CAAA,KAAA,GACtBL,gBAAkC,CAAC9e,MAAnC,GAA4C,CAA5C,IACA+e,WAAW,GAAGG,YAAd,GAA6B,IAFP,oBAGxB,KAHF,CAAA;;AAKA,EAAA,IAAIzW,UAAU,CAACzI,MAAX,KAAsB,CAAtB,IAA2Bmf,oBAA/B,EAAqD;IACnD,MAAMC,SAAS,GACbH,eAAe,KAAKD,cAApB,GAAqC,EAArC,GAA+C,CAAAC,EAAAA,EAAAA,gBADjD,CAAA,CAAA,CAAA;AAEA,IAAA,OAAO,CACL3B,SADK,EAEW,CAAA9e,aAAAA,EAAAA,KAAK,CAACwgB,cAAD,EAAiB,SAAjB,CAA2B,KAAKI,SAAW,CAAA,CAF3D,EAGLhnB,IAHK,CAGA,MAHA,CAAP,CAAA;AAID,GAAA;;EAED,MAAMmlB,WAAW,GAAG9U,UAAU,CAC3BF,KADiB,CACX,CADW,EACRkB,OAAO,CAAC4V,gBADA,CAAA,CAEjBnnB,GAFiB,CAGhB,CAAC,GAAGonB,UAAH,EAAexnB,KAAf,CAAD,QACK0G,KAAK,CAAC,GAAD,EAAM,SAAN,CAAoB,CAAA,CAAA,EAAAA,KAAK,CAAC8gB,UAAD,EAAa,WAAb,CAC/B,CAAA,CAAA,EAAAxnB,KAAK,KAAK,OAAV,GAAoB,EAApB,GAAyB,CAAA,EAAG0G,KAAK,CAAC,GAAD,EAAM,SAAN,EAAoB1G,CAAAA,EAAAA,KAAK,CAC1D,CAAA,CAAA,CANY,CAApB,CAAA;AAQA,EAAA,OAAO,CAACwlB,SAAD,EAAY,2BAAZ,EAAyCC,WAAW,CAACnlB,IAAZ,CAAiB,IAAjB,CAAzC,CAAA,CAAiEA,IAAjE,CACL,MADK,CAAP,CAAA;AAGD;;ACvGD,MAAM0D,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAEC,yBAAK,CAACC,GAAN,CAAU,SAAV,CADM;AAEbC,EAAAA,UAAU,EAAEF,yBAAK,CAACC,GAAN,CAAU,SAAV,CAFC;EAGbE,IAAI,EAAEH,yBAAK,CAACI,YAHC;EAIbC,OAAO,EAAEL,yBAAK,CAACM,WAJF;EAKbC,SAAS,EAAEP,yBAAK,CAACI,YALJ;AAMbI,EAAAA,OAAO,EAAER,yBAAK,CAACC,GAAN,CAAU,MAAV,CAAA;AANI,CAAf;;ACCM,SAAUQ,SAAV,CAAoBC,QAApB,EAAqC;AACzC,EAAA,OAAO,CAACC,OAAD,EAAkBC,IAA4B,GAAA,OAA9C,KAAyD;AAC9D,IAAA,IAAI,CAACF,QAAL,EAAe,OAAOC,OAAP,CAAA;AACf,IAAA,OAAOb,MAAM,CAACc,IAAD,CAAN,CAAaD,OAAb,CAAP,CAAA;GAFF,CAAA;AAID;;ACNK,SAAU4iB,sBAAV,CACJ7b,eADI,EAC4B;AAEhC,EAAA,MAAM+E,UAAU,GAAG,IAAI7C,GAAJ,EAAnB,CAAA;;AAEA,EAAA,KAAK,MAAMgD,SAAX,IAAwBlF,eAAe,CAACgF,gBAAxC,EAA0D;AACxD,IAAA,IAAIjP,MAAM,CAACmP,SAAS,CAAC,CAAD,CAAV,CAAN,KAAyB,GAA7B,EAAkCH,UAAU,CAAC+W,GAAX,CAAe5W,SAAf,CAAA,CAAA;AACnC,GAAA;;AAED,EAAA,OAAOH,UAAP,CAAA;AACD,CAAA;AAEK,SAAUgX,wBAAV,CACJ/b,eADI,EAC4B;AAEhC,EAAA,MAAM+E,UAAU,GAAG,IAAI7C,GAAJ,EAAnB,CAAA;;AAEA,EAAA,KAAK,MAAMgD,SAAX,IAAwBlF,eAAe,CAACgc,UAAxC,EAAoD;AAClD,IAAA,IAAI9W,SAAS,CAAC,CAAD,CAAb,EAAkBH,UAAU,CAAC+W,GAAX,CAAe5W,SAAS,CAAC,CAAD,CAAxB,CAAA,CAAA;AACnB,GAAA;;AAED,EAAA,OAAOH,UAAP,CAAA;AACD;;SCnBekX,qBAAkB;AAChC;AACA,EAAA,MAAMC,WAAW,GAAG9pB,OAAO,CAAC,gBAAD,CAA3B,CAAA;;AAEA,EAAA,MAAM+pB,QAAQ,GAAG;IAAEC,WAAW,EAAEF,WAAW,CAACG,OAAAA;GAA5C,CAAA;AAEA,EAAA,OAAOF,QAAP,CAAA;AACD;;ACOD,MAAMG,aAAa,GAAG,YAAtB,CAAA;AAEA,MAAMC,eAAe,GAAG;AACtB3d,EAAAA,WAAW,EAAErD,KADS;AAEtByE,EAAAA,eAAe,EAAEvN,SAFK;AAGtBwI,EAAAA,cAAc,EAAExI,SAHM;AAItBY,EAAAA,YAAY,EAAE,IAJQ;AAKtBsoB,EAAAA,gBAAgB,EAAE,CAAA;AALI,CAAxB,CAAA;;AAQA,SAASa,qBAAT,CACEnmB,QADF,EAEEI,SAFF,EAGEsP,OAHF,EAG4B;EAE1B,MAAMqI,WAAW,GAAGxO,iBAAiB,CAAC;AACpC3E,IAAAA,cAAc,EAAE8K,OAAF,IAAEA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAE9K,cADW;AAEpC2D,IAAAA,WAAW,EAAE6d,4BAAAA;AAFuB,GAAD,CAArC,CAAA;EAIA,MAAM;AAAExQ,IAAAA,SAAAA;AAAF,GAAA,GAAgBF,SAAS,CAACtV,SAAD,EAAY2X,WAAZ,CAA/B,CAAA;AACA,EAAA,IAAInC,SAAS,CAAC3P,MAAV,GAAmB,CAAvB,EAA0B,OAAA;AAE1B,EAAA,MAAMogB,iBAAiB,GAAGrmB,QAAQ,CAACkO,MAAT,CAAgB3O,CAAC,IAAG;IAC5C,IAAIA,CAAC,CAACuO,UAAF,CAAa,GAAb,CAAJ,EAAuB,OAAOvO,CAAP,CAAA;IACvB,OAAO,CAACmQ,OAAO,CAAC1P,QAAR,CAAiBoO,GAAjB,CAAqB7O,CAArB,CAAR,CAAA;AACD,GAHyB,CAA1B,CAAA;AAIA,EAAA,IAAI8mB,iBAAiB,CAACpgB,MAAlB,KAA6B,CAAjC,EAAoC,OAAA;AAEpC,EAAA,MAAMqgB,cAAc,GAAGD,iBAAiB,CAAC,CAAD,CAAxC,CAAA;AACA,EAAA,OAAO,CACL,CAAA,EAAG3W,OAAO,CAACjL,KAAR,CACY,CAAA,UAAA,EAAAiL,OAAO,CAACjL,KAAR,CAAc6hB,cAAd,EAA8B,YAA9B,CACX,CAAA,CAAA,EAAAA,cAAc,CAACxY,UAAf,CAA0B,GAA1B,CAAA,GAAiC,eAAjC,GAAmD,eACrD,CAHC,CAAA,CAIA,CALE,CAAA,CAAA,CAMLzP,IANK,CAMA,MANA,CAAP,CAAA;AAOD,CAAA;;AAED,SAASkoB,aAAT,CAAuBC,QAAvB,EAAyC9W,OAAzC,EAAmE;AAAA,EAAA,IAAA,qBAAA,CAAA;;EACjE,MAAMqB,KAAK,GAAGyV,QAAQ,CAACznB,OAAT,CAAiBknB,aAAjB,EAAgC,GAAhC,CAAd,CAAA;AAEA,EAAA,MAAMrV,WAAW,GAAG,CAClB,GAAGlP,mBAAmB,CAACqP,KAAD,EAAA,CAAA,qBAAA,GAAQrB,OAAO,CAAC9K,cAAR,CAAuBgL,SAA/B,KAA4C,IAAA,GAAA,qBAAA,GAAA,GAA5C,CADJ,CAApB,CAAA;;AAIA,EAAA,KAAK,MAAM5K,SAAX,IAAwB4e,UAAxB,EAAoC;AAClC,IAAA,MAAM5hB,KAAK,GAAGgD,SAAS,CAAC4L,WAAD,EAAclB,OAAd,CAAvB,CAAA;IACA,IAAI1N,KAAJ,EAAW,OAAOA,KAAP,CAAA;AACZ,GAAA;;AAED,EAAA,MAAM5B,SAAS,GAAGwQ,WAAW,CAACpC,KAAZ,CAAkB,CAAC,CAAnB,CAAsBnQ,CAAAA,IAAtB,CAA2B,EAA3B,CAAlB,CAAA;AACA,EAAA,MAAM2B,QAAQ,GAAG4Q,WAAW,CAACpC,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,CAAjB,CAbiE;;AAgBjE,EAAA,IAAIxO,QAAQ,CAACiG,MAAT,GAAkB,CAAtB,EAAyB;IACvB,MAAMwgB,kBAAkB,GAAGN,qBAAqB,CAC9CnmB,QAD8C,EAE9CI,SAF8C,EAG9CsP,OAH8C,CAAhD,CAAA;IAKA,IAAI+W,kBAAJ,EAAwB,OAAOA,kBAAP,CAAA;AACzB,GAAA;;AAED,EAAA,OAAO5B,mBAAmB,CAACzkB,SAAD,EAAYsP,OAAZ,CAA1B,CAAA;AACD,CAAA;;AAUD,SAASgX,kBAAT,CACEjiB,KADF,EAEEiL,OAFF,EAEuB;EAErB,OAAO;IACLjL,KADK;AAELiK,IAAAA,UAAU,EAAE8W,sBAAsB,CAAC9V,OAAO,CAAC/F,eAAT,CAF7B;AAGL3J,IAAAA,QAAQ,EAAE0lB,wBAAwB,CAAChW,OAAO,CAAC/F,eAAT,CAH7B;IAIL2b,gBAAgB,EAAE5V,OAAO,CAAC4V,gBAJrB;IAKL/c,WAAW,EAAEmH,OAAO,CAACnH,WALhB;IAML3D,cAAc,EAAE8K,OAAO,CAAC9K,cANnB;IAOL+E,eAAe,EAAE+F,OAAO,CAAC/F,eAAAA;GAP3B,CAAA;AASD,CAAA;;AAED,SAASgd,cAAT,CAAwBxW,SAAxB,EAA6CzI,OAA7C,EAA6D;AAC3D,EAAA,MAAMgI,OAAO,GAAG,EAAE,GAAGwW,eAAL;IAAsB,GAAGxe,OAAAA;GAAzC,CAAA;AACA,EAAA,MAAMjD,KAAK,GAAG/B,SAAS,CAACgN,OAAO,CAAC1S,YAAT,CAAvB,CAAA;AAEA,EAAA,MAAM4pB,iBAAiB,GAAGF,kBAAkB,CAACjiB,KAAD,EAAQiL,OAAR,CAA5C,CAAA;AAEA,EAAA,MAAM6T,SAAS,GAAGpT,SAAS,CACxBhS,GADe,CACX4X,CAAC,IAAIwQ,aAAa,CAACxQ,CAAD,EAAI6Q,iBAAJ,CADP,EAEfvoB,IAFe,CAEV,MAFU,CAAlB,CAAA;EAIA,MAAM;AAAE0nB,IAAAA,WAAAA;AAAF,GAAA,GAAkBH,kBAAkB,EAA1C,CAAA;EACA,MAAMiB,QAAQ,GAAG,CACZ,CAAA,EAAAd,WAAW,GAAG,CAAA,WAAA,EAAcA,WAAW,CAA5B,CAAA,GAAiC,aAAe,CAD/C,CAAA,EAEsB,qCAFtB,EAGe,CAAA,4BAAA,CAHf,EAIf1nB,IAJe,CAIV,IAJU,CAAjB,CAAA;AAMA,EAAA,MAAM,IAAIqR,OAAO,CAACnH,WAAZ,EACGgb,IAAAA,EAAAA,SAAS,CAAO9e,IAAAA,EAAAA,KAAK,CAACoiB,QAAD,EAAW,SAAX,CAAqB,IAD7C,CAAN,CAAA;AAGD;;AC9HD,MAAM5a,QAAQ,GAAG,GAAjB,CAAA;AACA,MAAM6a,gBAAgB,GAAG,QAAzB,CAAA;AACA,MAAM/a,QAAQ,GAAG,KAAjB,CAAA;;AAEA,SAASgb,UAAT,CAAoBtX,OAApB,EAAmC;AACjC,EAAA,OACEA,OAAO;AAAA,GAEJ1Q,OAFH,CAEW+nB,gBAFX,EAE6B,GAF7B,CAGE;AAHF,GAIG/nB,OAJH,CAIWgN,QAJX,EAIqB,GAJrB,CAKE;AALF,GAMGhN,OANH,CAMWkN,QANX,EAMqB,GANrB,CAAA,CAOGjN,IAPH,EADF,CAAA;AAUD,CAAA;;AAED,SAASgoB,mBAAT,CAA6B;EAC3BzQ,CAD2B;EAE3BmE,UAF2B;EAG3BuM,UAH2B;EAI3BtrB,IAJ2B;EAK3Bmc,KAL2B;EAM3BC,WAN2B;AAO3BmP,EAAAA,QAAQ,GAAG,SAAA;AAPgB,CAA7B,EAQ4B;AAC1B,EAAA,MAAMC,yBAAyB,GAC7BD,QAAQ,KAAK,SAAb,IAA0BnP,WAAW,CAAC7U,UAAZ,CAAuBvG,UAAvB,KAAsC,KADlE,CAAA;AAEA,EAAA,MAAMyqB,yBAAyB,GAC7BF,QAAQ,KAAK,SAAb,IAA0BnP,WAAW,CAAC7U,UAAZ,CAAuBxG,UAAvB,KAAsC,KADlE,CAAA;EAEA,IAAI,CAACob,KAAK,CAACja,KAAP,IAAgB,CAACspB,yBAAjB,IAA8C,CAACC,yBAAnD,EACE,OAAA;EACF,IAAIF,QAAQ,KAAK,SAAb,IAA0B,CAACnP,WAAW,CAAC7U,UAAZ,CAAuBvG,UAAtD,EAAkE,OAAA;AAClE,EAAA,IAAIuqB,QAAQ,KAAK,SAAb,IAA0B,CAACnP,WAAW,CAAC7U,UAAZ,CAAuBxG,UAAtD,EAAkE,OARxC;;AAW1B,EAAA,KAAK,MAAM0B,CAAX,IAAgBsc,UAAhB,EAA4B;AAC1B,IAAA,IAAItc,CAAC,CAACyE,IAAF,KAAW,oBAAf,EAAqC,SAAA;AACrC,IAAA,MAAMwkB,QAAQ,GAAGjpB,CAAC,CAAC6Z,IAAnB,CAAA;AACA,IAAA,IAAIoP,QAAQ,IAAR,IAAA,IAAAA,QAAQ,CAAE7nB,IAAV,IAAkB6nB,QAAQ,CAAC7nB,IAAT,CAAcA,IAAd,KAAuB0nB,QAA7C,EAAuD9oB,CAAC,CAACkpB,MAAF,EAAA,CAAA;AACxD,GAAA;;AAED,EAAA,MAAM7X,OAAO,GAAGsX,UAAU,CAACE,UAAD,CAA1B,CAjB0B;;EAoB1BtrB,IAAI,CAAC4rB,WAAL,CACEhR,CAAC,CAACmL,YAAF,CAAenL,CAAC,CAAC8G,aAAF,CAAgB6J,QAAhB,CAAf,EAA0C3Q,CAAC,CAACS,aAAF,CAAgBvH,OAAhB,CAA1C,CADF,CAAA,CAAA;AAGD,CAAA;;AAED,SAAS+X,yBAAT,CAAmC;EACjCjR,CADiC;EAEjCmE,UAFiC;EAGjCuM,UAHiC;EAIjCtrB,IAJiC;EAKjCmc,KALiC;EAMjCC,WANiC;AAOjCmP,EAAAA,QAAQ,GAAG,SAAA;AAPsB,CAAnC,EAQ4B;AAC1B,EAAA,MAAMC,yBAAyB,GAC7BD,QAAQ,KAAK,SAAb,IAA0BnP,WAAW,CAAC7U,UAAZ,CAAuBvG,UAAvB,KAAsC,KADlE,CAAA;AAEA,EAAA,MAAMyqB,yBAAyB,GAC7BF,QAAQ,KAAK,SAAb,IAA0BnP,WAAW,CAAC7U,UAAZ,CAAuBxG,UAAvB,KAAsC,KADlE,CAAA;EAEA,IAAI,CAACob,KAAK,CAACja,KAAP,IAAgB,CAACspB,yBAAjB,IAA8C,CAACC,yBAAnD,EACE,OAAA;EACF,IAAIF,QAAQ,KAAK,SAAb,IAA0B,CAACnP,WAAW,CAAC7U,UAAZ,CAAuBvG,UAAtD,EAAkE,OAAA;AAClE,EAAA,IAAIuqB,QAAQ,KAAK,SAAb,IAA0B,CAACnP,WAAW,CAAC7U,UAAZ,CAAuBxG,UAAtD,EAAkE,OARxC;;AAW1B,EAAA,MAAM+qB,YAAY,GAAG/M,UAAU,CAACvU,IAAX,CACnB/H,CAAC,IAAA;AAAA,IAAA,IAAA,OAAA,CAAA;;AAAA,IAAA,OACE,CAAAA,CAAAA,OAAAA,GAAAA,CAAC,CAAC6Z,IAAF,6BAA2BzY,IAA3B,KACApB,CAAC,CAAC6Z,IAAF,CAA0BzY,IAA1B,CAA+BA,IAA/B,KAAwC0nB,QAF1C,CAAA;AAAA,GADkB,CAArB,CAAA;;AAMA,EAAA,IAAIO,YAAJ,EAAkB;IAChB,IAAI;AACF;AACA,MAAA,IACIA,YAAY,CAACxP,IAAb,CAAqCla,KAArC,CAA+DA,KADnE,EAEE;AACA,QAAA,CAAA;QACG0pB,YAAY,CAACxP,IAAb,CAAqCla,KAArC,CACDA,KADC,GACU,CAAA,EAAA,CACT0pB,YAAY,CAACxP,IAAb,CAAqCla,KAArC,CACCA,KAFQ,EAGXkpB,UAHW,CAAA,CAKV/Y,MALU,CAKH3J,OALG,CAAA,CAMVlG,IANU,CAML,KANK,CAMC,CAPX,CAAA,CAAA;AAQH,QAAA,OAAA;AACD,OAfC;;;MAkBF,MAAMyc,SAAS,GAAI2M,YAAY,CAACxP,IAAb,CAChBla,KADH,CAlBE;;AAqBF+c,MAAAA,SAAS,CAACrS,UAAV,CAAqB1K,KAArB,GAAgC,GAAA;AAE7B0pB,MAAAA,YAAY,CAACxP,IAAb,CAAkBla,KAAlB,CAAqD0K,UAArD,CAAgE1K,KAFnC,EAG9BkpB,UAH8B,CAK7B/Y,CAAAA,MAL6B,CAKtB3J,OALsB,CAAA,CAM7BlG,IAN6B,CAMxB,KANwB,CAMlB,CANd,CAAA,CAAA;AAOD,KA5BD,CA4BE,OAAO+F,CAAP,EAAmB,EAAE;;AAEvB,IAAA,OAAA;AACD,GAAA;;AAED,EAAA,MAAMqL,OAAO,GAAGsX,UAAU,CAACE,UAAD,CAA1B,CAnD0B;;EAsD1BtrB,IAAI,CAAC+rB,aAAL;EAEE,YAFF,EAGEnR,CAAC,CAACoR,YAAF,CACEpR,CAAC,CAACyM,aAAF,CAAgBkE,QAAhB,CADF,EAEE3Q,CAAC,CAACqR,sBAAF,CAAyBrR,CAAC,CAACS,aAAF,CAAgBvH,OAAhB,CAAzB,CAFF,CAHF,CAAA,CAAA;AAQD;;AC1HD;;AAiCA,SAASvS,kBAAT,CAA4BkI,MAA5B,EAAsD;EACpD,MAAM;IAAEqV,OAAF;AAAWoN,IAAAA,SAAAA;AAAX,GAAA,GAAyBziB,MAA/B,CAAA;EAEAmX,mBAAmB,CAAC,EAAE,GAAGnX,MAAL;AAAaoX,IAAAA,SAAS,EAAEqL,SAAAA;GAAzB,CAAnB,CAHoD;;AAMpD,EAAA,MAAMC,aAAa,GAAGrN,OAAO,CAACxC,IAAR,CAAayC,UAAnC,CAAA;EACA,MAAMqN,gBAAgB,GAAGD,aAAa,CAAC/M,SAAd,CACvBiN,CAAC,IAAIA,CAAC,CAACnlB,IAAF,KAAW,cAAX,IAA6BmlB,CAAC,CAACxoB,IAA/B,IAAuCwoB,CAAC,CAACxoB,IAAF,CAAOA,IAAP,KAAgB,IADrC,CAAzB,CAAA;EAGA,IAAIuoB,gBAAgB,GAAG,CAAvB,EAA0B,OAAA;EAE1BtN,OAAO,CAACxC,IAAR,CAAayC,UAAb,CAAwBzI,MAAxB,CAA+B8V,gBAA/B,EAAiD,CAAjD,CAAA,CAAA;AACD,CAAA;;AASD,SAASE,qBAAT,CAA+B;EAC7B1R,CAD6B;EAE7B5a,IAF6B;EAG7BksB,SAH6B;AAI7BK,EAAAA,YAAAA;AAJ6B,CAA/B,EAKwB;AACtB,EAAA,IAAI,CAACA,YAAL,EAAmB,OADG;;EAItB,MAAMC,kBAAkB,GAAGD,YAAY,CAACza,GAAb,CAAiB,OAAjB,CAA3B,CAJsB;;AAOtB,EAAA,IACE,CAAC0a,kBAAD,IACC,CAACA,kBAAkB,CAACC,wBAAnB,EAAD,IACC,CAACD,kBAAkB,CAACE,eAAnB,EAHL,EAKE,OAAA;AAEF,EAAA,MAAMC,oBAAoB,GAAGH,kBAAkB,CAACE,eAAnB,EAAA,GACxBF,kBADwB;AAGxBA,EAAAA,kBAAkB,CAAC1a,GAAnB,CACC,YADD,CAHL,CAAA;AAOA,EAAA,MAAMkN,cAAc,GAAGH,iBAAiB,CAAC7e,IAAD,CAAxC,CAAA;AAEA,EAAA,MAAM4sB,oBAAoB,GACxB5N,cAAc,CAAC6N,OAAf,CAAuB,IAAvB,CAA+B7N,GAAAA,cAAc,CAAC6N,OAAf,CAAuB,KAAvB,CAA/B,GAA+D,CADjE,CAAA;;AAGA,EAAA,IAAIF,oBAAoB,CAACG,iBAArB,EAAJ,EAA8C;AAC5C;AACA,IAAA,IAAIF,oBAAJ,EAA0B;AACxB,MAAA,MAAMzN,SAAS,GAAGwN,oBAAlB,CADwB;;AAKxBxN,MAAAA,SAAS,CAAChE,gBAAV,CAA2B,UAA3B,EAAuC+Q,SAAvC,CAAA,CAAA;AACD,KAND,MAMO;AACL,MAAA,MAAM/M,SAAS,GAAGwN,oBAAlB,CADK;;AAKLxN,MAAAA,SAAS,CAAC4M,aAAV,CAAwB,UAAxB,EAAoCG,SAApC,CAAA,CAAA;AACD,KAAA;AACF,GAfD,MAeO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,MAAMa,wBAAwB,GAAGJ,oBAAoB,CAACrQ,IAAtD,CARK;;AAWL,IAAA,MAAM0Q,UAAU,GAAGJ,oBAAoB,GACnC,CAACV,SAAD,EAAYa,wBAAZ,CADmC,GAEnC,CAACA,wBAAD,EAA2Bb,SAA3B,CAFJ,CAAA;AAIA,IAAA,MAAMtQ,eAAe,GAAGhB,CAAC,CAACgB,eAAF,CAAkBoR,UAAlB,CAAxB,CAAA;IAEA,MAAM;AAAEzN,MAAAA,MAAAA;AAAF,KAAA,GAAaoN,oBAAnB,CAAA;AACA,IAAA,MAAMvO,WAAW,GACfmB,MAAM,CAACrY,IAAP,KAAgB,cAAhB,GACI0T,CAAC,CAACoL,sBAAF,CAAyBpK,eAAzB,CADJ,GAEIA,eAHN,CAAA;IAKA+Q,oBAAoB,CAACrO,WAArB,CAAiCF,WAAjC,CAAA,CAAA;AACD,GAAA;AACF,CAAA;;AAED,SAAS6O,gBAAT,CAA0B;EACxBjtB,IADwB;EAExB4a,CAFwB;EAGxBC,OAHwB;EAIxBsB,KAJwB;AAKxBC,EAAAA,WAAAA;AALwB,CAA1B,EAMsB;AACpB,EAAA,IAAI,CAACpc,IAAI,CAACsc,IAAN,IAActc,IAAI,CAACsc,IAAL,CAAUzY,IAAV,CAAeA,IAAf,KAAwB,IAA1C,EAAgD,OAAA;EAChDsY,KAAK,CAAC+Q,cAAN,GAAuB,IAAvB,CAAA;AAEA,EAAA,MAAMC,SAAS,GAAGntB,IAAI,CAACsc,IAAL,CAAUla,KAA5B,CAAA;EACA,IAAI,CAAC+qB,SAAL,EAAgB,OAAA;AAEhB,EAAA,MAAMC,cAAc,GAAID,SAAsC,CAACrgB,UAA/D,CAPoB;;AAUpB,EAAA,MAAMugB,eAAe,GACnBD,cAAc,IACdA,cAAc,CAAClmB,IAAf,KAAwB,eADxB,IAEAkmB,cAAc,CAAChrB,KAHjB,CAAA;AAIA,EAAA,IAAIirB,eAAe,KAAK,EAAxB,EAA4B,OAdR;AAgBpB;;EACA,IAAID,cAAJ,EACEhR,WAAW,CAACnU,MAAZ,CACEW,OAAO,CAACykB,eAAD,CADT,EAEE,CAAC;AAAEvkB,IAAAA,KAAAA;GAAH,QACKA,KAAK,CAC+C,qDAD/C,gCAEwBA,KAAK,CACV,CAAA,uBAAA,CADU,EAEnC,SAFmC,CAGpC,OAAOA,KAAK,4BAAA,EAEX,SAFW,CAGZ,CAXL,iEAAA,CAAA,CAAA,CAAA;EAcF,MAAMwiB,UAAU,GACd+B,eAAe,IAAKF,SAA6B,CAAC/qB,KAAlD,IAA2D,EAD7D,CAAA;EAEA,MAAM;IAAEiQ,MAAF;AAAU4H,IAAAA,SAAAA;AAAV,GAAA,GAAwBF,SAAS,CAACuR,UAAD,EAAalP,WAAb,CAAvC,CAAA;;AAEA,EAAA,IAAInC,SAAS,CAAC3P,MAAV,GAAmB,CAAvB,EAA0B;IACxB0gB,cAAc,CAAC/Q,SAAD,EAAY;MACxBrN,WAAW,EAAEwP,WAAW,CAACxP,WADD;MAExBoB,eAAe,EAAEoO,WAAW,CAACpO,eAFL;MAGxB/E,cAAc,EAAEmT,WAAW,CAACnT,cAHJ;AAIxB5H,MAAAA,YAAY,EAAE+a,WAAW,CAAC7U,UAAZ,CAAuBlG,YAAAA;AAJb,KAAZ,CAAd,CAAA;AAMA,IAAA,OAAA;AACD,GAAA;;AAED,EAAA,MAAM6qB,SAAS,GAAG5Q,MAAM,CAAC6G,OAAO,CAAC9P,MAAD,CAAP,GAAkB,EAAlB,GAAuBA,MAAxB,EAAgCuI,CAAhC,CAAxB,CAAA;AAEA,EAAA,MAAMkE,OAAO,GAAGJ,YAAY,CAAC1e,IAAD,CAA5B,CAAA;AACA,EAAA,MAAM+e,UAAU,GAAGD,OAAO,CAAChN,GAAR,CAAY,YAAZ,CAAnB,CAAA;EACA,MAAM;AAAEqN,IAAAA,SAAS,EAAEoN,YAAAA;GAAiBtN,GAAAA,mBAAmB,CAACF,UAAD,CAAvD,CAAA;;AAEA,EAAA,IAAI3C,WAAW,CAAC7U,UAAZ,CAAuBhG,kBAA3B,EAA+C;AAC7CA,IAAAA,kBAAkB,CAAC;MAAE2qB,SAAF;MAAapN,OAAb;MAAsBlE,CAAtB;MAAyBC,OAAzB;MAAkCsB,KAAlC;AAAyCC,MAAAA,WAAAA;AAAzC,KAAD,CAAlB,CAAA;AACAiP,IAAAA,mBAAmB,CAAC;MAAEzQ,CAAF;MAAKmE,UAAL;MAAiBuM,UAAjB;MAA6BtrB,IAA7B;MAAmCmc,KAAnC;AAA0CC,MAAAA,WAAAA;AAA1C,KAAD,CAAnB,CAAA;AACA,IAAA,OAAA;AACD,GAAA;;EAED,IAAI,CAACmQ,YAAL,EAAmB;AACjB;IACAvsB,IAAI,CAACse,WAAL,CACE1D,CAAC,CAACmL,YAAF,CACEnL,CAAC,CAAC8G,aAAF,CAAgB,KAAhB,CADF,EAEE9G,CAAC,CAACoL,sBAAF,CAAyBkG,SAAzB,CAFF,CADF,CAAA,CAAA;AAMAb,IAAAA,mBAAmB,CAAC;MAAEzQ,CAAF;MAAKmE,UAAL;MAAiBuM,UAAjB;MAA6BtrB,IAA7B;MAAmCmc,KAAnC;AAA0CC,MAAAA,WAAAA;AAA1C,KAAD,CAAnB,CAAA;AACA,IAAA,OAAA;AACD,GApEmB;;;AAuEpBkQ,EAAAA,qBAAqB,CAAC;AACpBC,IAAAA,YAAY,EAAEA,YADM;AAEpBvsB,IAAAA,IAAI,EAAE8e,OAFc;IAGpBoN,SAHoB;AAIpBtR,IAAAA,CAAAA;AAJoB,GAAD,CAArB,CAAA;EAOA5a,IAAI,CAAC2rB,MAAL,EAAA,CA9EoB;;AAgFpBE,EAAAA,yBAAyB,CAAC;IACxBjR,CADwB;IAExBmE,UAFwB;IAGxBuM,UAHwB;AAIxBtrB,IAAAA,IAAI,EAAE8e,OAJkB;IAKxB1C,WALwB;AAMxBD,IAAAA,KAAAA;AANwB,GAAD,CAAzB,CAAA;AAQD,CAAA;;AAED,SAASmR,gBAAT,CAA0B;EACxBjL,UADwB;EAExBzH,CAFwB;EAGxBuB,KAHwB;AAIxBC,EAAAA,WAAAA;AAJwB,CAA1B,EAK8B;EAC5B,MAAMmR,uBAAuB,GAAGlL,UAAU,CAACc,OAAX,IAAsBd,UAAU,CAACmL,EAAjC,IAAuC,EAAvE,CAAA;AAEAD,EAAAA,uBAAuB,CAACnW,OAAxB,CAAgCpX,IAAI,IAAG;AACrC;;;AAGG;IACH,MAAM;AAAEshB,MAAAA,UAAAA;AAAF,KAAA,GAAiBthB,IAAvB,CAAA;IACA,IAAI,CAAEshB,UAAuB,CAAC3B,0BAAxB,EAAN,EACE3f,IAAI,CAACwe,KAAL,CAAWiP,KAAX,EAAA,CAAA;AAEF,IAAA,MAAMlO,MAAM,GAAGvf,IAAI,CAAC2e,UAAL,CAAgB9C,CAAC,IAC9BA,CAAC,CAAC8D,0BAAF,EADa,CAAf,CAAA;AAGA,IAAA,IAAI,CAACJ,MAAL,EAAa,OAZwB;;AAerC,IAAA,IAAI,CAACnD,WAAW,CAAC7U,UAAZ,CAAuBjH,cAA5B,EAA4C;AAC1C,MAAA,MAAMylB,YAAY,GAAGxG,MAAM,CAACZ,UAAP,CAAkB9C,CAAC,IACtCA,CAAC,CAACwD,cAAF,EADmB,CAArB,CAAA;AAGA,MAAA,MAAMqO,aAAa;MAEjB3H,YAAY,IAAKA,YAAY,CAACjU,GAAb,CAAiB,MAAjB,CAAA,CAAyBA,GAAzB,CAA6B,MAA7B,CAAA,CAAqCwK,IAFxD,CAAA;AAIAF,MAAAA,WAAW,CAACnU,MAAZ,CACEylB,aAAa,KAAK,OADpB,EAEE,CAAC;AAAE5kB,QAAAA,KAAAA;OAAH,QACKA,KAAK,CAC8D,oEAD9D,wCAEgCA,KAAK,CAC3C,eAD2C,EAE3C,SAF2C,CAG5C,OAAOA,KAAK,CACX,gBADW,EAEX,SAFW,CAGZ,CAXL,iJAAA,CAAA,CAAA,CAAA;AAaD,KAAA;;AAED,IAAA,MAAM6kB,MAAM,GAAGjQ,QAAQ,CAAC6B,MAAD,EAAS;MAAE3E,CAAF;AAAKuB,MAAAA,KAAAA;AAAL,KAAT,CAAvB,CAAA;IACA,IAAI,CAACwR,MAAL,EAAa,OAAA;AAEb,IAAA,MAAMrC,UAAU,GAAGqC,MAAM,CAACxqB,MAA1B,CAzCqC;;AA2CrC,IAAA,MAAM2b,OAAO,GAAG9e,IAAI,CAAC2e,UAAL,CAAgBlc,CAAC,IAC/BA,CAAC,CAACmc,mBAAF,EADc,CAAhB,CAAA;;AAIA,IAAA,IAAIE,OAAJ,EAAa;AACX,MAAA,MAAMC,UAAU,GAAGD,OAAO,CAAChN,GAAR,CAAY,YAAZ,CAAnB,CAAA;AACA,MAAA,MAAM8b,QAAQ,GAAG;QACfhT,CADe;QAEfmE,UAFe;QAGfuM,UAHe;AAIftrB,QAAAA,IAAI,EAAE8e,OAJS;QAKf1C,WALe;AAMfD,QAAAA,KAAAA;OANF,CAAA;MAQA0P,yBAAyB,CAAC+B,QAAD,CAAzB,CAAA;AACD,KAAA;;IAED,MAAM;MAAEvb,MAAF;AAAU4H,MAAAA,SAAAA;AAAV,KAAA,GAAwBF,SAAS,CAACuR,UAAD,EAAalP,WAAb,CAAvC,CAAA;;AAEA,IAAA,IAAInC,SAAS,CAAC3P,MAAV,GAAmB,CAAvB,EAA0B;MACxB0gB,cAAc,CAAC/Q,SAAD,EAAY;QACxBrN,WAAW,EAAEwP,WAAW,CAACxP,WADD;QAExBoB,eAAe,EAAEoO,WAAW,CAACpO,eAFL;QAGxB/E,cAAc,EAAEmT,WAAW,CAACnT,cAHJ;AAIxB5H,QAAAA,YAAY,EAAE+a,WAAW,CAAC7U,UAAZ,CAAuBlG,YAAAA;AAJb,OAAZ,CAAd,CAAA;AAMA,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,MAAM6qB,SAAS,GAAG5Q,MAAM,CAAC6G,OAAO,CAAC9P,MAAD,CAAP,GAAkB,EAAlB,GAAuBA,MAAxB,EAAgCuI,CAAhC,CAAxB,CAAA;AACAqD,IAAAA,mBAAmB,CAAC0P,MAAM,CAAC3tB,IAAR,EAAcksB,SAAd,CAAnB,CAAA;GAzEF,CAAA,CAAA;AA2ED;;ACnTD;;AAaA,SAAS2B,gBAAT,CAA0B;EACxB7tB,IADwB;EAExB4a,CAFwB;EAGxBuB,KAHwB;AAIxBC,EAAAA,WAAAA;AAJwB,CAA1B,EAKsB;AACpB,EAAA,IAAIA,WAAW,CAAC7U,UAAZ,CAAuBrG,aAA3B,EAA0C,OAAA;AAC1C,EAAA,IAAI,CAAClB,IAAI,CAACsc,IAAN,IAActc,IAAI,CAACsc,IAAL,CAAUzY,IAAV,CAAeA,IAAf,KAAwB,IAA1C,EAAgD,OAAA;AAEhD,EAAA,MAAMspB,SAAS,GAAGntB,IAAI,CAACsc,IAAL,CAAUla,KAA5B,CAAA;AACA,EAAA,MAAMgrB,cAAc,GAAID,SAAsC,CAACrgB,UAA/D,CALoB;;AAQpB,EAAA,MAAMugB,eAAe,GACnBD,cAAc,IACdA,cAAc,CAAClmB,IAAf,KAAwB,eADxB,IAEAkmB,cAAc,CAAChrB,KAHjB,CAAA;EAKA,IAAIgrB,cAAJ,EACEhR,WAAW,CAACnU,MAAZ,CACEW,OAAO,CAACykB,eAAD,CADT,EAEE,CAAC;AAAEvkB,IAAAA,KAAAA;AAAF,GAAD,KACE,CAAA,EAAGA,KAAK,CACkD,CADlD,sDAAA,CAAA,CAEwB,CAAAA,4BAAAA,EAAAA,KAAK,CACnC,8BADmC,EAEnC,SAFmC,CAGpC,CARL,0DAAA,CAAA,CAAA,CAAA;EAWF,MAAMwiB,UAAU,GACd+B,eAAe,IAAKF,SAA6B,CAAC/qB,KAAlD,IAA2D,EAD7D,CAAA;EAEA,MAAM;AAAEiQ,IAAAA,MAAAA;GAAW0H,GAAAA,SAAS,CAACuR,UAAD,EAAa;AACvCtV,IAAAA,cAAc,EAAE,IADuB;IAEvC,GAAGoG,WAAAA;AAFoC,GAAb,CAA5B,CAAA;AAIA,EAAA,MAAM8P,SAAS,GAAG5Q,MAAM,CAAC6G,OAAO,CAAC9P,MAAD,CAAP,GAAkB,EAAlB,GAAuBA,MAAxB,EAAgCuI,CAAhC,CAAxB,CAAA;AAEA,EAAA,MAAMkE,OAAO,GAAGJ,YAAY,CAAC1e,IAAD,CAA5B,CAAA;AACA,EAAA,MAAM+e,UAAU,GAAGD,OAAO,CAAChN,GAAR,CAAY,YAAZ,CAAnB,CAAA;EACA,MAAM;AAAEqN,IAAAA,SAAS,EAAEoN,YAAAA;GAAiBtN,GAAAA,mBAAmB,CAACF,UAAD,CAAvD,CAAA;;EAEA,IAAI,CAACwN,YAAL,EAAmB;AACjB;IACAvsB,IAAI,CAACse,WAAL,CACE1D,CAAC,CAACmL,YAAF,CACEnL,CAAC,CAAC8G,aAAF,CAAgB,KAAhB,CADF,EAEE9G,CAAC,CAACoL,sBAAF,CAAyBkG,SAAzB,CAFF,CADF,CAAA,CAAA;AAMAb,IAAAA,mBAAmB,CAAC;MAClBzQ,CADkB;MAElBmE,UAFkB;MAGlBuM,UAHkB;MAIlBtrB,IAJkB;MAKlBmc,KALkB;MAMlBC,WANkB;AAOlBmP,MAAAA,QAAQ,EAAE,SAAA;AAPQ,KAAD,CAAnB,CAAA;AASA,IAAA,OAAA;AACD,GAvDmB;;;EA0DpB,MAAMiB,kBAAkB,GAAGD,YAAY,CAACza,GAAb,CAAiB,OAAjB,CAA3B,CA1DoB;;EA6DpB,IACE,CAAC0a,kBAAD;AAEC,EAAA,CAACA,kBAAkB,CAACC,wBAAnB,EAAD;AAEC,EAAA,CAACD,kBAAkB,CAACE,eAAnB,EALL,EAOE,OApEkB;;AAuEpB,EAAA,MAAMC,oBAAoB,GAAGH,kBAAkB,CAACE,eAAnB,EAAA,GACxBF,kBADwB;AAGxBA,EAAAA,kBAAkB,CAAC1a,GAAnB,CACC,YADD,CAHL,CAAA;AAOA,EAAA,MAAMkN,cAAc,GAAGH,iBAAiB,CAACC,OAAD,CAAxC,CAAA;AACA,EAAA,MAAM8N,oBAAoB,GACxB5N,cAAc,CAAC6N,OAAf,CAAuB,IAAvB,CAA+B7N,GAAAA,cAAc,CAAC6N,OAAf,CAAuB,KAAvB,CAA/B,GAA+D,CADjE,CAAA;;AAGA,EAAA,IAAIF,oBAAoB,CAACG,iBAArB,EAAJ,EAA8C;AAC5C;AACA,IAAA,IAAIF,oBAAJ,EAA0B;AACxB;AACAD,MAAAA,oBAAoB,CAACxR,gBAArB,CAAsC,UAAtC,EAAkD+Q,SAAlD,CAAA,CAAA;AACD,KAHD,MAGO;AACL;AACAS,MAAAA,oBAAoB,CAACZ,aAArB,CAAmC,UAAnC,EAA+CG,SAA/C,CAAA,CAAA;AACD,KAAA;AACF,GATD,MASO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,MAAMa,wBAAwB,GAAGJ,oBAAoB,CAACrQ,IAAtD,CARK;;AAWL,IAAA,MAAM0Q,UAAU,GAAGJ,oBAAoB,GACnC,CAACV,SAAD,EAAYa,wBAAZ,CADmC,GAEnC,CAACA,wBAAD,EAA2Bb,SAA3B,CAFJ,CAAA;AAIA,IAAA,MAAMtQ,eAAe,GAAGhB,CAAC,CAACgB,eAAF,CAAkBoR,UAAlB,CAAxB,CAAA;IAEA,MAAM;AAAEzN,MAAAA,MAAAA;AAAF,KAAA,GAAaoN,oBAAnB,CAAA;AACA,IAAA,MAAMvO,WAAW,GACfmB,MAAM,CAACrY,IAAP,KAAgB,cAAhB,GACI0T,CAAC,CAACoL,sBAAF,CAAyBpK,eAAzB,CADJ,GAEIA,eAHN,CAAA;IAKA+Q,oBAAoB,CAACrO,WAArB,CAAiCF,WAAjC,CAAA,CAAA;AACD,GAAA;;EAEDpe,IAAI,CAAC2rB,MAAL,EAAA,CArHoB;;AAuHpBE,EAAAA,yBAAyB,CAAC;IACxBjR,CADwB;IAExBmE,UAFwB;IAGxBuM,UAHwB;AAIxBtrB,IAAAA,IAAI,EAAE8e,OAJkB;IAKxB3C,KALwB;IAMxBC,WANwB;AAOxBmP,IAAAA,QAAQ,EAAE,SAAA;AAPc,GAAD,CAAzB,CAAA;AASD;;AClJD;;AAYA,SAASuC,gBAAT,CACE,CAACC,GAAD,EAAM3rB,KAAN,CADF,EAEEwY,CAFF,EAEa;AAEX,EAAA,OAAOA,CAAC,CAACmL,YAAF,CAAenL,CAAC,CAAC8G,aAAF,CAAgBqM,GAAhB,CAAf,EAAqCnT,CAAC,CAACoL,sBAAF,CAAyB5jB,KAAzB,CAArC,CAAP,CAAA;AACD,CAAA;;AAED,SAAS4rB,uBAAT,CAAiC;EAC/BhuB,IAD+B;EAE/B4a,CAF+B;EAG/BuB,KAH+B;AAI/BC,EAAAA,WAAAA;AAJ+B,CAAjC,EAKsB;AACpB,EAAA,IAAI,CAACA,WAAW,CAAC7U,UAAZ,CAAuBjG,iBAA5B,EAA+C,OAAA;EAC/C,IAAItB,IAAI,CAACsc,IAAL,CAAUzY,IAAV,CAAeA,IAAf,KAAwB,WAA5B,EAAyC,OAAA;AAEzC,EAAA,MAAMspB,SAAS,GAAGntB,IAAI,CAACsc,IAAL,CAAUla,KAA5B,CAAA;AACA,EAAA,IAAI,CAAC+qB,SAAL,EAAgB,OALI;;EAQpB,IAAKA,SAAsC,CAACrgB,UAA5C,EAAwD,OAAA;AAExD,EAAA,MAAMwe,UAAU,GAAI6B,SAA6B,CAAC/qB,KAAlD,CAAA;EACA,IAAI,CAACkpB,UAAL,EAAiB,OAAA;EAEjB,MAAM;IAAEjZ,MAAF;IAAU4H,SAAV;AAAqBD,IAAAA,OAAAA;AAArB,GAAA,GAAiCD,SAAS,CAACuR,UAAD,EAAa,EAC3D,GAAGlP,WADwD;AAE3DvP,IAAAA,QAAQ,EAAE,IAAA;AAFiD,GAAb,CAAhD,CAAA;AAIA,EAAA,IAAImN,OAAO,CAAC1P,MAAR,KAAmB,CAAvB,EAA0B,OAAA;AAE1B,EAAA,MAAM4hB,SAAS,GAAG5Q,MAAM,CAAC6G,OAAO,CAAC9P,MAAD,CAAP,GAAkB,EAAlB,GAAuBA,MAAxB,EAAgCuI,CAAhC,CAAxB,CAnBoB;;AAsBpB,EAAA,MAAMqT,gBAAgB,GAAGhU,SAAS,CAACvX,IAAV,CAAe,GAAf,CAAzB,CAAA;AACA,EAAA,IAAI,CAAC1C,IAAI,CAACsc,IAAL,CAAUla,KAAf,EAAsB,OAAA;AACpBpC,EAAAA,IAAI,CAACsc,IAAL,CAAUla,KAAV,CAAoCA,KAApC,GAA4C6rB,gBAA5C,CAAA;;AACF,EAAA,IAAIjuB,IAAI,CAACsc,IAAL,CAAUla,KAAV,CAAgB8rB,KAApB,EAA2B;IACzBluB,IAAI,CAACsc,IAAL,CAAUla,KAAV,CAAgB8rB,KAAhB,CAAsB7Q,QAAtB,GAAiC4Q,gBAAjC,CAAA;IACAjuB,IAAI,CAACsc,IAAL,CAAUla,KAAV,CAAgB8rB,KAAhB,CAAsBzQ,GAAtB,GAA4B,CAAIwQ,CAAAA,EAAAA,gBAAgB,CAAhD,CAAA,CAAA,CAAA;AACD,GAAA;;AAED,EAAA,MAAMnP,OAAO,GAAGJ,YAAY,CAAC1e,IAAD,CAA5B,CAAA;AACA,EAAA,MAAM+e,UAAU,GAAGD,OAAO,CAAChN,GAAR,CAAY,YAAZ,CAAnB,CAAA;EACA,MAAM;AAAEqN,IAAAA,SAAS,EAAEoN,YAAAA;GAAiBtN,GAAAA,mBAAmB,CAACF,UAAD,CAAvD,CAAA;;EAEA,IAAI,CAACwN,YAAL,EAAmB;IACjB,MAAMpN,SAAS,GAAG2O,gBAAgB,CAAC,CAAC,KAAD,EAAQ5B,SAAR,CAAD,EAAqBtR,CAArB,CAAlC,CAAA;;AACA,IAAA,IAAIqT,gBAAJ,EAAsB;MACpBjuB,IAAI,CAAC4rB,WAAL,CAAiBzM,SAAjB,CAAA,CAAA;AACD,KAFD,MAEO;MACLnf,IAAI,CAACse,WAAL,CAAiBa,SAAjB,CAAA,CAAA;AACD,KAAA;;AAED,IAAA,MAAMgP,cAAc,GAAG;MACrBvT,CADqB;MAErB5a,IAFqB;MAGrBmc,KAHqB;MAIrB4C,UAJqB;MAKrB3C,WALqB;AAMrBkP,MAAAA,UAAU,EAAEtR,OAAO,CAACtX,IAAR,CAAa,GAAb,CAAA;KANd,CAAA;IASA2oB,mBAAmB,CAAC8C,cAAD,CAAnB,CAAA;AACA,IAAA,OAAA;AACD,GAAA;;EAED,MAAMC,aAAa,GAAI7B,YAAyC,CAC7Dza,GADoB,CAChB,OADgB,CAEpBA,CAAAA,GAFoB,CAEhB,YAFgB,CAAvB,CAAA;AAGA,EAAA,MAAMkN,cAAc,GAAGH,iBAAiB,CAACC,OAAD,CAAxC,CAAA;AAEA,EAAA,MAAM8N,oBAAoB,GACxB5N,cAAc,CAAC6N,OAAf,CAAuB,WAAvB,CAAsC7N,GAAAA,cAAc,CAAC6N,OAAf,CAAuB,KAAvB,CAAtC,GAAsE,CADxE,CAAA;;AAGA,EAAA,IAAIuB,aAAa,CAACtB,iBAAd,EAAJ,EAAuC;AACrC;AACA,IAAA,IAAIF,oBAAJ,EAA0B;AACxBwB,MAAAA,aAAa,CAACjT,gBAAd,CAA+B,UAA/B,EAA2C+Q,SAA3C,CAAA,CAAA;AACD,KAFD,MAEO;AACLkC,MAAAA,aAAa,CAACrC,aAAd,CAA4B,UAA5B,EAAwCG,SAAxC,CAAA,CAAA;AACD,KAAA;AACF,GAPD,MAOO;AACL;AACA,IAAA,MAAMS,oBAAoB,GAAGyB,aAAa,CAAC9R,IAA3C,CAAA;IACAF,WAAW,CAACnU,MAAZ,CAAmBW,OAAO,CAAC+jB,oBAAD,CAA1B,EAAkD,CAAC;AAAE7jB,MAAAA,KAAAA;AAAF,KAAD,KAChDA,KAAK,CACwE,CAAA,yEAAA,CADxE,CADP,CAAA,CAAA;AAKA,IAAA,MAAMkkB,UAAU,GAAGJ,oBAAoB,GACnC,CAACV,SAAD,EAAYS,oBAAZ,CADmC,GAEnC,CAACA,oBAAD,EAAuBT,SAAvB,CAFJ,CAAA;IAGAkC,aAAa,CAAC9P,WAAd,CAA0B1D,CAAC,CAACgB,eAAF,CAAkBoR,UAAlB,CAA1B,CAAA,CAAA;AACD,GAAA;;AAED,EAAA,IAAI,CAACiB,gBAAL,EAAuBjuB,IAAI,CAAC2rB,MAAL,EAAA,CAAA;AAEvBE,EAAAA,yBAAyB,CAAC;IACxBjR,CADwB;IAExBmE,UAFwB;AAGxBuM,IAAAA,UAAU,EAAEtR,OAAO,CAACtX,IAAR,CAAa,GAAb,CAHY;AAIxB1C,IAAAA,IAAI,EAAE8e,OAJkB;IAKxB3C,KALwB;AAMxBC,IAAAA,WAAAA;AANwB,GAAD,CAAzB,CAAA;AAQD;;ACtHD;AA8BA,MAAMiS,UAAU,GAAG,CACjBf,gBADiB,EAEjB5G,0BAFiB,EAGjBhE,sBAHiB,EAIjBO,oBAJiB,EAKjBb,mBALiB,EAMjBiB,mBANiB,EAOjB+B,oBAPiB,EAQjBxC,eARiB,EASjBL,YATiB;AAAA,CAAnB,CAAA;;AAYA,SAAS+L,SAAT,CAAmB7kB,MAAnB,EAAsC;AAAA,EAAA,IAAA,qBAAA,EAAA,qBAAA,CAAA;;AACpC,EAAA,MAAMmR,CAAC,GAAGnR,MAAM,CAAC8kB,KAAP,CAAa5T,KAAvB,CAAA;EACA,MAAME,OAAO,GAAGpR,MAAM,CAAC0S,KAAP,CAAaqS,IAAb,CAAkBxuB,IAAlC,CAAA;AAEA,EAAA,MAAMkC,KAAK,GACTiG,OAAO,CAACsmB,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IACAvmB,OAAO,CAACsmB,GAAR,CAAYC,QAAZ,KAAyB,KADzB,IAEA,KAHF,CAAA;EAKA,MAAMtS,WAAW,GAAGxO,iBAAiB,CAAC;IACpC1L,KADoC;IAEpC1B,MAAM,EAAEiJ,MAAM,CAACjJ,MAFqB;AAGpCwH,IAAAA,QAAQ,2BAAEyB,MAAM,CAAC0S,KAAP,CAAanU,QAAf,oCAA2B,EAHC;IAIpCD,UAAU,EAAA,CAAA,qBAAA,GAAE0B,MAAM,CAAC0S,KAAP,CAAaqS,IAAb,CAAkBG,IAAlB,CAAuB5mB,UAAzB,KAAA,IAAA,GAAA,qBAAA,GAAuC,EAJb;AAKpC6E,IAAAA,WAAW,EAAE6d,4BAAAA;AALuB,GAAD,CAArC,CAAA;AAQA1I,EAAAA,eAAe,CAACtY,MAAM,CAAC4Y,UAAR,EAAoBjG,WAApB,CAAf,CAAA;AAEA,EAAA,MAAMD,KAAK,GAAU;IACnBja,KADmB;IAEnBqsB,KAAK,EAAE9kB,MAAM,CAAC8kB,KAFK;IAGnB/tB,MAAM,EAAEiJ,MAAM,CAACjJ,MAHI;AAInBouB,IAAAA,wBAAwB,EAAErQ,WAAW,CAAC,gBAAD,EAAmB1D,OAAnB,CAJlB;AAKnBgU,IAAAA,uBAAuB,EAAEtQ,WAAW,CAAC,eAAD,EAAkB1D,OAAlB,CALjB;AAMnB+B,IAAAA,gBAAgB,EAAEnc,SANC;AAOnBwc,IAAAA,aAAa,EAAExc,SAPI;AAQnBye,IAAAA,eAAe,EAAE,KAAA;GARnB,CAAA;AAWA,EAAA,MAAM4P,iBAAiB,GAAG;IAAElU,CAAF;IAAKC,OAAL;IAAcsB,KAAd;AAAqBC,IAAAA,WAAAA;GAA/C,CAAA;EAEAvB,OAAO,CAACkU,QAAR,CAAiB;IACfC,iBAAiB,CAAChvB,IAAD,EAAK;MACpBkc,mBAAmB,CAAC,EAAE,GAAG4S,iBAAL;AAAwB9uB,QAAAA,IAAAA;AAAxB,OAAD,CAAnB,CAAA;MACA+c,gBAAgB,CAAC,EAAE,GAAG+R,iBAAL;AAAwB9uB,QAAAA,IAAAA;AAAxB,OAAD,CAAhB,CAAA;KAHa;;IAKfivB,UAAU,CAACjvB,IAAD,EAAK;AACb,MAAA,MAAMkvB,aAAa,GAAGrN,gBAAgB,CAAC7hB,IAAD,CAAtC,CAAA;MACA,MAAM;QAAEyK,KAAF;AAASyU,QAAAA,eAAAA;OAAoBD,GAAAA,mBAAmB,CAACiQ,aAAD,CAAtD,CAAA;AACA/S,MAAAA,KAAK,CAAC+C,eAAN,GAAwB/C,KAAK,CAAC+C,eAAN,IAAyBA,eAAjD,CAAA;MACA,MAAMiQ,cAAc,GAAG1kB,KAAK,GAAG,CAAR,GAAYykB,aAAa,CAACvX,OAAd,EAAZ,GAAsCuX,aAA7D,CAAA;;AAEA,MAAA,KAAK,MAAMlvB,IAAX,IAAmBmvB,cAAnB,EAAmC;QACjCnB,uBAAuB,CAAC,EAAE,GAAGc,iBAAL;AAAwB9uB,UAAAA,IAAAA;AAAxB,SAAD,CAAvB,CAAA;QACAitB,gBAAgB,CAAC,EAAE,GAAG6B,iBAAL;AAAwB9uB,UAAAA,IAAAA;AAAxB,SAAD,CAAhB,CAAA;QACA6tB,gBAAgB,CAAC,EAAE,GAAGiB,iBAAL;AAAwB9uB,UAAAA,IAAAA;AAAxB,SAAD,CAAhB,CAAA;AACD,OAAA;;AAED,MAAA,IAAIkf,eAAJ,EACExe,0BAA0B,CAAC,EAAE,GAAGouB,iBAAL;AAAwB9uB,QAAAA,IAAAA;AAAxB,OAAD,CAA1B,CAAA;AACH,KAAA;;GAnBH,CAAA,CAAA;AAsBA,EAAA,IAAImc,KAAK,CAACS,gBAAN,KAA2Bnc,SAA/B,EACE0b,KAAK,CAACS,gBAAN,GAAyB2B,WAAW,CAAC,QAAD,EAAW1D,OAAX,CAApC,CAAA;AAEF,EAAA,IAAIsB,KAAK,CAACc,aAAN,KAAwBxc,SAA5B,EACE0b,KAAK,CAACc,aAAN,GAAsBsB,WAAW,CAAC,KAAD,EAAQ1D,OAAR,CAAjC,CAAA;;AAEF,EAAA,KAAK,MAAM/K,IAAX,IAAmBue,UAAnB,EAA+B;AAC7B;IACAve,IAAI,CAAC,EAAE,GAAGgf,iBAAL;MAAwBzM,UAAU,EAAE5Y,MAAM,CAAC4Y,UAAAA;AAA3C,KAAD,CAAJ,CAAA;AACD,GAAA;;EAEDxH,OAAO,CAAC2D,KAAR,CAAciP,KAAd,EAAA,CAAA;AACD;;ACzGD,YAAe2B,6BAAW,CAACd,SAAD,EAAY;AAAEe,EAAAA,UAAU,EAAE,MAAA;AAAd,CAAZ,CAA1B;;;;"}